{"version":3,"file":"index.js","sources":["../dist-esm/lib/Aborter.js","../dist-esm/lib/AccountSASPermissions.js","../dist-esm/lib/AccountSASResourceTypes.js","../dist-esm/lib/AccountSASServices.js","../dist-esm/lib/IIPRange.js","../dist-esm/lib/utils/utils.common.js","../dist-esm/lib/SASQueryParameters.js","../dist-esm/lib/utils/constants.js","../dist-esm/lib/IAccountSASSignatureValues.js","../node_modules/tslib/tslib.es6.js","../dist-esm/lib/utils/RetriableReadableStream.js","../dist-esm/lib/BlobDownloadResponse.js","../dist-esm/lib/generated/lib/models/mappers.js","../dist-esm/lib/generated/lib/models/parameters.js","../dist-esm/lib/generated/lib/operations/service.js","../dist-esm/lib/generated/lib/operations/container.js","../dist-esm/lib/generated/lib/operations/blob.js","../dist-esm/lib/generated/lib/operations/pageBlob.js","../dist-esm/lib/generated/lib/operations/appendBlob.js","../dist-esm/lib/generated/lib/operations/blockBlob.js","../dist-esm/lib/IRange.js","../dist-esm/lib/policies/BrowserPolicy.js","../dist-esm/lib/policies/RetryPolicy.js","../dist-esm/lib/BrowserPolicyFactory.js","../dist-esm/lib/generated/lib/storageClientContext.js","../dist-esm/lib/policies/LoggingPolicy.js","../dist-esm/lib/LoggingPolicyFactory.js","../dist-esm/lib/Pipeline.js","../dist-esm/lib/RetryPolicyFactory.js","../dist-esm/lib/policies/TelemetryPolicy.js","../dist-esm/lib/TelemetryPolicyFactory.js","../dist-esm/lib/policies/UniqueRequestIDPolicy.js","../dist-esm/lib/UniqueRequestIDPolicyFactory.js","../dist-esm/lib/StorageURL.js","../dist-esm/lib/BlobURL.js","../dist-esm/lib/AppendBlobURL.js","../dist-esm/lib/BlobSASPermissions.js","../dist-esm/lib/ContainerSASPermissions.js","../dist-esm/lib/IBlobSASSignatureValues.js","../dist-esm/lib/BlockBlobURL.js","../dist-esm/lib/utils/Batch.js","../dist-esm/lib/ContainerURL.js","../dist-esm/lib/policies/CredentialPolicy.js","../dist-esm/lib/credentials/Credential.js","../dist-esm/lib/credentials/AnonymousCredential.js","../dist-esm/lib/policies/SharedKeyCredentialPolicy.js","../dist-esm/lib/credentials/SharedKeyCredential.js","../dist-esm/lib/policies/TokenCredentialPolicy.js","../dist-esm/lib/credentials/TokenCredential.js","../dist-esm/lib/highlevel.browser.js","../dist-esm/lib/utils/BufferScheduler.js","../dist-esm/lib/utils/utils.node.js","../dist-esm/lib/highlevel.node.js","../dist-esm/lib/PageBlobURL.js","../dist-esm/lib/ServiceURL.js"],"sourcesContent":["import { isNode } from \"@azure/ms-rest-js\";\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call Aborter.none to create a new Aborter instance without timeout.\n * - Call Aborter.timeout() to create a new Aborter instance with timeout.\n *\n * For an existing instance aborter:\n * - Call aborter.withTimeout() to create and return a child Aborter instance with timeout.\n * - Call aborter.withValue(key, value) to create and return a child Aborter instance with key/value pair.\n * - Call aborter.abort() to abort current instance and all children instances.\n * - Call aborter.getValue(key) to search and get value with corresponding key from current aborter to all parents.\n *\n * @example\n * // Abort without timeout\n * await blockBlobURL.upload(Aborter.none, buf, buf.length);\n *\n * @example\n * // Abort container create in 1000ms\n * await blockBlobURL.upload(Aborter.timeout(1000), buf, buf.length);\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time, abort another when any of them is finished\n * const aborter = Aborter.timeout(30 * 1000);\n * blockBlobURL1.upload(aborter, buf, buf.length).then(aborter.abort);\n * blockBlobURL2.upload(aborter, buf, buf.length).then(aborter.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n *\n * @export\n * @class Aborter\n * @implements {AbortSignalLike}\n */\nvar Aborter = /** @class */ (function () {\n    // private disposed: boolean = false;\n    /**\n     * Private constructor for internal usage, creates an instance of Aborter.\n     *\n     * @param {Aborter} [parent] Optional. Parent aborter.\n     * @param {number} [timeout=0] Optional. Timeout before abort in millisecond, 0 means no timeout.\n     * @param {string} [key] Optional. Immutable key in string.\n     * @param {(string | number | boolean | null)} [value] Optional. Immutable value.\n     * @memberof Aborter\n     */\n    function Aborter(parent, timeout, key, value) {\n        if (timeout === void 0) { timeout = 0; }\n        var _this = this;\n        // tslint:disable-next-line:variable-name\n        this._aborted = false;\n        this.children = []; // When child object calls dispose(), remove child from here\n        this.abortEventListeners = [];\n        this.parent = parent;\n        this.key = key;\n        this.value = value;\n        if (timeout > 0) {\n            this.timer = setTimeout(function () {\n                _this.abort.call(_this);\n            }, timeout);\n            // When called, the active Timeout object will not require the Node.js event loop\n            // to remain active. If there is no other activity keeping the event loop running,\n            // the process may exit before the Timeout object's callback is invoked.\n            if (this.timer && isNode) {\n                this.timer.unref();\n            }\n        }\n    }\n    Object.defineProperty(Aborter.prototype, \"aborted\", {\n        /**\n         * Status of whether aborted or not.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberof Aborter\n         */\n        get: function () {\n            return this._aborted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Aborter, \"none\", {\n        /**\n         * Creates a new Aborter instance without timeout.\n         *\n         * @readonly\n         * @static\n         * @type {Aborter}\n         * @memberof Aborter\n         */\n        get: function () {\n            return new Aborter(undefined, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new Aborter instance with timeout in milliseconds.\n     * Set parameter timeout to 0 will not create a timer.\n     *\n     * @static\n     * @param {number} {timeout} in milliseconds\n     * @returns {Aborter}\n     * @memberof Aborter\n     */\n    Aborter.timeout = function (timeout) {\n        return new Aborter(undefined, timeout);\n    };\n    /**\n     * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n     * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n     * triggers timeout event, all children nodes abort event will be triggered too.\n     *\n     * When timeout parameter (in millisecond) is larger than 0, the abort event will be triggered when timeout.\n     * Otherwise, call abort() method to manually abort.\n     *\n     * @param {number} {timeout} Timeout in millisecond.\n     * @returns {Aborter} The new Aborter instance created.\n     * @memberof Aborter\n     */\n    Aborter.prototype.withTimeout = function (timeout) {\n        var childCancelContext = new Aborter(this, timeout);\n        this.children.push(childCancelContext);\n        return childCancelContext;\n    };\n    /**\n     * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n     * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n     * triggers timeout event, all children nodes abort event will be triggered too.\n     *\n     * Immutable key value pair will be set into the new created Aborter instance.\n     * Call getValue() to find out latest value with corresponding key in the chain of\n     * [current node] -> [parent node] and [grand parent node]....\n     *\n     * @param {string} key\n     * @param {(string | number | boolean | null)} [value]\n     * @returns {Aborter}\n     * @memberof Aborter\n     */\n    Aborter.prototype.withValue = function (key, value) {\n        var childCancelContext = new Aborter(this, 0, key, value);\n        this.children.push(childCancelContext);\n        return childCancelContext;\n    };\n    /**\n     * Find out latest value with corresponding key in the chain of\n     * [current node] -> [parent node] -> [grand parent node] -> ... -> [root node].\n     *\n     * If key is not found, undefined will be returned.\n     *\n     * @param {string} key\n     * @returns {(string | number | boolean | null | undefined)}\n     * @memberof Aborter\n     */\n    Aborter.prototype.getValue = function (key) {\n        for (var parent_1 = this; parent_1; parent_1 = parent_1.parent) {\n            if (parent_1.key === key) {\n                return parent_1.value;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Trigger abort event immediately, the onabort and all abort event listeners will be triggered.\n     * Will try to trigger abort event for all children Aborter nodes.\n     *\n     * - If there is a timeout, the timer will be cancelled.\n     * - If aborted is true, nothing will happen.\n     *\n     * @returns\n     * @memberof Aborter\n     */\n    Aborter.prototype.abort = function () {\n        var _this = this;\n        if (this.aborted) {\n            return;\n        }\n        this.cancelTimer();\n        if (this.onabort) {\n            this.onabort.call(this);\n        }\n        this.abortEventListeners.forEach(function (listener) {\n            listener.call(_this);\n        });\n        this.children.forEach(function (child) { return child.cancelByParent(); });\n        this._aborted = true;\n    };\n    // public dispose() {\n    //   if (this.disposed || this.aborted) {\n    //     return;\n    //   }\n    //   this.cancelTimer();\n    //   // (parent)A <- B <- C(child), if B disposes, when A abort, C will not abort\n    //   if (this.parent) {\n    //     const index = this.parent.children.indexOf(this);\n    //     if (index > -1) {\n    //       this.parent.children.splice(index, 1);\n    //     }\n    //   }\n    //   this.disposed = true;\n    // }\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param {\"abort\"} _type Only support \"abort\" event\n     * @param {(this: AbortSignalLike, ev: any) => any} listener\n     * @memberof Aborter\n     */\n    Aborter.prototype.addEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        this.abortEventListeners.push(listener);\n    };\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param {\"abort\"} _type Only support \"abort\" event\n     * @param {(this: AbortSignalLike, ev: any) => any} listener\n     * @memberof Aborter\n     */\n    Aborter.prototype.removeEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        var index = this.abortEventListeners.indexOf(listener);\n        if (index > -1) {\n            this.abortEventListeners.splice(index, 1);\n        }\n    };\n    Aborter.prototype.cancelByParent = function () {\n        // if (!this.disposed) {\n        this.abort();\n        // }\n    };\n    Aborter.prototype.cancelTimer = function () {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    };\n    return Aborter;\n}());\nexport { Aborter };\n//# sourceMappingURL=Aborter.js.map","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASPermissions\n */\nvar AccountSASPermissions = /** @class */ (function () {\n    function AccountSASPermissions() {\n        /**\n         * Permission to read resources and list queues and tables granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.read = false;\n        /**\n         * Permission to write resources granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.write = false;\n        /**\n         * Permission to create blobs and files granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.delete = false;\n        /**\n         * Permission to list blob containers, blobs, shares, directories, and files granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.list = false;\n        /**\n         * Permission to add messages, table entities, and append to blobs granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.add = false;\n        /**\n         * Permission to create blobs and files granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.create = false;\n        /**\n         * Permissions to update messages and table entities granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.update = false;\n        /**\n         * Permission to get and delete messages granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASPermissions\n         */\n        this.process = false;\n    }\n    /**\n     * Parse initializes the AccountSASPermissions fields from a string.\n     *\n     * @static\n     * @param {string} permissions\n     * @returns {AccountSASPermissions}\n     * @memberof AccountSASPermissions\n     */\n    AccountSASPermissions.parse = function (permissions) {\n        var accountSASPermissions = new AccountSASPermissions();\n        for (var _i = 0, permissions_1 = permissions; _i < permissions_1.length; _i++) {\n            var c = permissions_1[_i];\n            switch (c) {\n                case \"r\":\n                    accountSASPermissions.read = true;\n                    break;\n                case \"w\":\n                    accountSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    accountSASPermissions.delete = true;\n                    break;\n                case \"l\":\n                    accountSASPermissions.list = true;\n                    break;\n                case \"a\":\n                    accountSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    accountSASPermissions.create = true;\n                    break;\n                case \"u\":\n                    accountSASPermissions.update = true;\n                    break;\n                case \"p\":\n                    accountSASPermissions.process = true;\n                    break;\n                default:\n                    throw new RangeError(\"Invalid permission character: \" + c);\n            }\n        }\n        return accountSASPermissions;\n    };\n    /**\n     * Produces the SAS permissions string for an Azure Storage account.\n     * Call this method to set AccountSASSignatureValues Permissions field.\n     *\n     * Using this method will guarantee the resource types are in\n     * an order accepted by the service.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n     *\n     * @returns {string}\n     * @memberof AccountSASPermissions\n     */\n    AccountSASPermissions.prototype.toString = function () {\n        // The order of the characters should be as specified here to ensure correctness:\n        // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n        // Use a string array instead of string concatenating += operator for performance\n        var permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        if (this.list) {\n            permissions.push(\"l\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.update) {\n            permissions.push(\"u\");\n        }\n        if (this.process) {\n            permissions.push(\"p\");\n        }\n        return permissions.join(\"\");\n    };\n    return AccountSASPermissions;\n}());\nexport { AccountSASPermissions };\n//# sourceMappingURL=AccountSASPermissions.js.map","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASResourceTypes\n */\nvar AccountSASResourceTypes = /** @class */ (function () {\n    function AccountSASResourceTypes() {\n        /**\n         * Permission to access service level APIs granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASResourceTypes\n         */\n        this.service = false;\n        /**\n         * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASResourceTypes\n         */\n        this.container = false;\n        /**\n         * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASResourceTypes\n         */\n        this.object = false;\n    }\n    /**\n     * Creates an {@link AccountSASResourceType} from the specified resource types string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid resource type.\n     *\n     * @static\n     * @param {string} resourceTypes\n     * @returns {AccountSASResourceTypes}\n     * @memberof AccountSASResourceTypes\n     */\n    AccountSASResourceTypes.parse = function (resourceTypes) {\n        var accountSASResourceTypes = new AccountSASResourceTypes();\n        for (var _i = 0, resourceTypes_1 = resourceTypes; _i < resourceTypes_1.length; _i++) {\n            var c = resourceTypes_1[_i];\n            switch (c) {\n                case \"s\":\n                    accountSASResourceTypes.service = true;\n                    break;\n                case \"c\":\n                    accountSASResourceTypes.container = true;\n                    break;\n                case \"o\":\n                    accountSASResourceTypes.object = true;\n                    break;\n                default:\n                    throw new RangeError(\"Invalid resource type: \" + c);\n            }\n        }\n        return accountSASResourceTypes;\n    };\n    /**\n     * Converts the given resource types to a string.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n     *\n     * @returns {string}\n     * @memberof AccountSASResourceTypes\n     */\n    AccountSASResourceTypes.prototype.toString = function () {\n        var resourceTypes = [];\n        if (this.service) {\n            resourceTypes.push(\"s\");\n        }\n        if (this.container) {\n            resourceTypes.push(\"c\");\n        }\n        if (this.object) {\n            resourceTypes.push(\"o\");\n        }\n        return resourceTypes.join(\"\");\n    };\n    return AccountSASResourceTypes;\n}());\nexport { AccountSASResourceTypes };\n//# sourceMappingURL=AccountSASResourceTypes.js.map","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n *\n * @export\n * @class AccountSASServices\n */\nvar AccountSASServices = /** @class */ (function () {\n    function AccountSASServices() {\n        /**\n         * Permission to access blob resources granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASServices\n         */\n        this.blob = false;\n        /**\n         * Permission to access file resources granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASServices\n         */\n        this.file = false;\n        /**\n         * Permission to access queue resources granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASServices\n         */\n        this.queue = false;\n        /**\n         * Permission to access table resources granted.\n         *\n         * @type {boolean}\n         * @memberof AccountSASServices\n         */\n        this.table = false;\n    }\n    /**\n     * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid service.\n     *\n     * @static\n     * @param {string} services\n     * @returns {AccountSASServices}\n     * @memberof AccountSASServices\n     */\n    AccountSASServices.parse = function (services) {\n        var accountSASServices = new AccountSASServices();\n        for (var _i = 0, services_1 = services; _i < services_1.length; _i++) {\n            var c = services_1[_i];\n            switch (c) {\n                case \"b\":\n                    accountSASServices.blob = true;\n                    break;\n                case \"f\":\n                    accountSASServices.file = true;\n                    break;\n                case \"q\":\n                    accountSASServices.queue = true;\n                    break;\n                case \"t\":\n                    accountSASServices.table = true;\n                    break;\n                default:\n                    throw new RangeError(\"Invalid service character: \" + c);\n            }\n        }\n        return accountSASServices;\n    };\n    /**\n     * Converts the given services to a string.\n     *\n     * @returns {string}\n     * @memberof AccountSASServices\n     */\n    AccountSASServices.prototype.toString = function () {\n        var services = [];\n        if (this.blob) {\n            services.push(\"b\");\n        }\n        if (this.table) {\n            services.push(\"t\");\n        }\n        if (this.queue) {\n            services.push(\"q\");\n        }\n        if (this.file) {\n            services.push(\"f\");\n        }\n        return services.join(\"\");\n    };\n    return AccountSASServices;\n}());\nexport { AccountSASServices };\n//# sourceMappingURL=AccountSASServices.js.map","/**\n * Generate IPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @export\n * @param {IIPRange} ipRange\n * @returns {string}\n */\nexport function ipRangeToString(ipRange) {\n    return ipRange.end ? ipRange.start + \"-\" + ipRange.end : ipRange.start;\n}\n//# sourceMappingURL=IIPRange.js.map","import { isNode, URLBuilder } from \"@azure/ms-rest-js\";\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JSv10 SDKs\n *\n * When customers pass a URL string into XXXURL classes constrcutor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXURL constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `BlobURL.fromContainerURL(containerURL, blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url) {\n    var urlParsed = URLBuilder.parse(url);\n    var path = urlParsed.getPath();\n    path = path || \"/\";\n    path = escape(path);\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\n/**\n * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text) {\n    return encodeURIComponent(text)\n        .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n        .replace(/'/g, \"%27\") // Escape for \"'\"\n        .replace(/\\+/g, \"%20\")\n        .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url, name) {\n    var urlParsed = URLBuilder.parse(url);\n    var path = urlParsed.getPath();\n    path = path\n        ? path.endsWith(\"/\")\n            ? \"\" + path + name\n            : path + \"/\" + name\n        : name;\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url, name, value) {\n    var urlParsed = URLBuilder.parse(url);\n    urlParsed.setQueryParameter(name, value);\n    return urlParsed.toString();\n}\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url, name) {\n    var urlParsed = URLBuilder.parse(url);\n    return urlParsed.getQueryParameterValue(name);\n}\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url, host) {\n    var urlParsed = URLBuilder.parse(url);\n    urlParsed.setHost(host);\n    return urlParsed.toString();\n}\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url) {\n    var urlParsed = URLBuilder.parse(url);\n    return urlParsed.getPath();\n}\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url) {\n    var queryString = URLBuilder.parse(url).getQuery();\n    if (!queryString) {\n        return {};\n    }\n    queryString = queryString.trim();\n    queryString = queryString.startsWith(\"?\")\n        ? queryString.substr(1)\n        : queryString;\n    var querySubStrings = queryString.split(\"&\");\n    querySubStrings = querySubStrings.filter(function (value) {\n        var indexOfEqual = value.indexOf(\"=\");\n        var lastIndexOfEqual = value.lastIndexOf(\"=\");\n        return (indexOfEqual > 0 &&\n            indexOfEqual === lastIndexOfEqual &&\n            lastIndexOfEqual < value.length - 1);\n    });\n    var queries = {};\n    for (var _i = 0, querySubStrings_1 = querySubStrings; _i < querySubStrings_1.length; _i++) {\n        var querySubString = querySubStrings_1[_i];\n        var splitResults = querySubString.split(\"=\");\n        var key = splitResults[0];\n        var value = splitResults[1];\n        queries[key] = value;\n    }\n    return queries;\n}\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date, withMilliseconds) {\n    if (withMilliseconds === void 0) { withMilliseconds = true; }\n    // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n    var dateString = date.toISOString();\n    return withMilliseconds\n        ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n        : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content) {\n    return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString) {\n    return !isNode\n        ? atob(encodedString)\n        : Buffer.from(encodedString, \"base64\").toString();\n}\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix, blockIndex) {\n    // To generate a 64 bytes base64 string, source string should be 48\n    var maxSourceStringLength = 48;\n    // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n    var maxBlockIndexLength = 6;\n    var maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n    if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n        blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n    }\n    var res = blockIDPrefix +\n        padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n    return base64encode(res);\n}\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(currentString, targetLength, padString) {\n    if (padString === void 0) { padString = \" \"; }\n    if (String.prototype.padStart) {\n        return currentString.padStart(targetLength, padString);\n    }\n    padString = padString || \" \";\n    if (currentString.length > targetLength) {\n        return currentString;\n    }\n    else {\n        targetLength = targetLength - currentString.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + currentString;\n    }\n}\n//# sourceMappingURL=utils.common.js.map","import { ipRangeToString } from \"./IIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport var SASProtocol;\n(function (SASProtocol) {\n    /**\n     * Protocol that allows HTTPS only\n     */\n    SASProtocol[\"HTTPS\"] = \"https\";\n    /**\n     * Protocol that allows both HTTPS and HTTP\n     */\n    SASProtocol[\"HTTPSandHTTP\"] = \"https,http\";\n})(SASProtocol || (SASProtocol = {}));\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link ServiceSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nvar SASQueryParameters = /** @class */ (function () {\n    /**\n     * Creates an instance of SASQueryParameters.\n     *\n     * @param {string} version Representing the storage version\n     * @param {string} signature Representing the signature for the SAS token\n     * @param {string} [permissions] Representing the storage permissions\n     * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n     * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n     * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n     * @param {Date} [startTime] Representing the start time for this SAS token\n     * @param {Date} [expiryTime] Representing the expiry time for this SAS token\n     * @param {IIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n     * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n     * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n     * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n     * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n     * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n     * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n     * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n     * @memberof SASQueryParameters\n     */\n    function SASQueryParameters(version, signature, permissions, services, resourceTypes, protocol, startTime, expiryTime, ipRange, identifier, resource, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType) {\n        this.version = version;\n        this.services = services;\n        this.resourceTypes = resourceTypes;\n        this.expiryTime = expiryTime;\n        this.permissions = permissions;\n        this.protocol = protocol;\n        this.startTime = startTime;\n        this.ipRangeInner = ipRange;\n        this.identifier = identifier;\n        this.resource = resource;\n        this.signature = signature;\n        this.cacheControl = cacheControl;\n        this.contentDisposition = contentDisposition;\n        this.contentEncoding = contentEncoding;\n        this.contentLanguage = contentLanguage;\n        this.contentType = contentType;\n    }\n    Object.defineProperty(SASQueryParameters.prototype, \"ipRange\", {\n        /**\n         * Optional. IP range allowed for this SAS.\n         *\n         * @readonly\n         * @type {(IIPRange | undefined)}\n         * @memberof SASQueryParameters\n         */\n        get: function () {\n            if (this.ipRangeInner) {\n                return {\n                    end: this.ipRangeInner.end,\n                    start: this.ipRangeInner.start\n                };\n            }\n            return undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Encodes all SAS query parameters into a string that can be appended to a URL.\n     *\n     * @returns {string}\n     * @memberof SASQueryParameters\n     */\n    SASQueryParameters.prototype.toString = function () {\n        var params = [\n            \"sv\",\n            \"ss\",\n            \"srt\",\n            \"spr\",\n            \"st\",\n            \"se\",\n            \"sip\",\n            \"si\",\n            \"sr\",\n            \"sp\",\n            \"sig\",\n            \"rscc\",\n            \"rscd\",\n            \"rsce\",\n            \"rscl\",\n            \"rsct\"\n        ];\n        var queries = [];\n        for (var _i = 0, params_1 = params; _i < params_1.length; _i++) {\n            var param = params_1[_i];\n            switch (param) {\n                case \"sv\":\n                    this.tryAppendQueryParameter(queries, param, this.version);\n                    break;\n                case \"ss\":\n                    this.tryAppendQueryParameter(queries, param, this.services);\n                    break;\n                case \"srt\":\n                    this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n                    break;\n                case \"spr\":\n                    this.tryAppendQueryParameter(queries, param, this.protocol);\n                    break;\n                case \"st\":\n                    this.tryAppendQueryParameter(queries, param, this.startTime\n                        ? truncatedISO8061Date(this.startTime, false)\n                        : undefined);\n                    break;\n                case \"se\":\n                    this.tryAppendQueryParameter(queries, param, this.expiryTime\n                        ? truncatedISO8061Date(this.expiryTime, false)\n                        : undefined);\n                    break;\n                case \"sip\":\n                    this.tryAppendQueryParameter(queries, param, this.ipRange ? ipRangeToString(this.ipRange) : undefined);\n                    break;\n                case \"si\":\n                    this.tryAppendQueryParameter(queries, param, this.identifier);\n                    break;\n                case \"sr\":\n                    this.tryAppendQueryParameter(queries, param, this.resource);\n                    break;\n                case \"sp\":\n                    this.tryAppendQueryParameter(queries, param, this.permissions);\n                    break;\n                case \"sig\":\n                    this.tryAppendQueryParameter(queries, param, this.signature);\n                    break;\n                case \"rscc\":\n                    this.tryAppendQueryParameter(queries, param, this.cacheControl);\n                    break;\n                case \"rscd\":\n                    this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n                    break;\n                case \"rsce\":\n                    this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n                    break;\n                case \"rscl\":\n                    this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n                    break;\n                case \"rsct\":\n                    this.tryAppendQueryParameter(queries, param, this.contentType);\n                    break;\n            }\n        }\n        return queries.join(\"&\");\n    };\n    /**\n     * A private helper method used to filter and append query key/value pairs into an array.\n     *\n     * @private\n     * @param {string[]} queries\n     * @param {string} key\n     * @param {string} [value]\n     * @returns {void}\n     * @memberof SASQueryParameters\n     */\n    SASQueryParameters.prototype.tryAppendQueryParameter = function (queries, key, value) {\n        if (!value) {\n            return;\n        }\n        key = encodeURIComponent(key);\n        value = encodeURIComponent(value);\n        if (key.length > 0 && value.length > 0) {\n            queries.push(key + \"=\" + value);\n        }\n    };\n    return SASQueryParameters;\n}());\nexport { SASQueryParameters };\n//# sourceMappingURL=SASQueryParameters.js.map","export var SDK_VERSION = \"10.3.0\";\nexport var SERVICE_VERSION = \"2018-03-28\";\nexport var BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES = 256 * 1024 * 1024; // 256MB\nexport var BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES = 100 * 1024 * 1024; // 100MB\nexport var BLOCK_BLOB_MAX_BLOCKS = 50000;\nexport var DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES = 4 * 1024 * 1024; // 4MB\nexport var DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS = 5;\nexport var URLConstants = {\n    Parameters: {\n        FORCE_BROWSER_NO_CACHE: \"_\",\n        SIGNATURE: \"sig\",\n        SNAPSHOT: \"snapshot\",\n        TIMEOUT: \"timeout\"\n    }\n};\nexport var HTTPURLConnection = {\n    HTTP_CONFLICT: 409,\n    HTTP_NOT_FOUND: 404,\n    HTTP_PRECON_FAILED: 412,\n    HTTP_RANGE_NOT_SATISFIABLE: 416\n};\nexport var HeaderConstants = {\n    AUTHORIZATION: \"authorization\",\n    AUTHORIZATION_SCHEME: \"Bearer\",\n    CONTENT_ENCODING: \"content-encoding\",\n    CONTENT_LANGUAGE: \"content-language\",\n    CONTENT_LENGTH: \"content-length\",\n    CONTENT_MD5: \"content-md5\",\n    CONTENT_TYPE: \"content-type\",\n    COOKIE: \"Cookie\",\n    DATE: \"date\",\n    IF_MATCH: \"if-match\",\n    IF_MODIFIED_SINCE: \"if-modified-since\",\n    IF_NONE_MATCH: \"if-none-match\",\n    IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n    PREFIX_FOR_STORAGE: \"x-ms-\",\n    RANGE: \"Range\",\n    USER_AGENT: \"User-Agent\",\n    X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n    X_MS_DATE: \"x-ms-date\"\n};\nexport var ETagNone = \"\";\nexport var ETagAny = \"*\";\n//# sourceMappingURL=constants.js.map","import { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { ipRangeToString } from \"./IIPRange\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n * @memberof IAccountSASSignatureValues\n */\nexport function generateAccountSASQueryParameters(accountSASSignatureValues, sharedKeyCredential) {\n    var version = accountSASSignatureValues.version\n        ? accountSASSignatureValues.version\n        : SERVICE_VERSION;\n    var parsedPermissions = AccountSASPermissions.parse(accountSASSignatureValues.permissions).toString();\n    var parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n    var parsedResourceTypes = AccountSASResourceTypes.parse(accountSASSignatureValues.resourceTypes).toString();\n    var stringToSign = [\n        sharedKeyCredential.accountName,\n        parsedPermissions,\n        parsedServices,\n        parsedResourceTypes,\n        accountSASSignatureValues.startTime\n            ? truncatedISO8061Date(accountSASSignatureValues.startTime, false)\n            : \"\",\n        truncatedISO8061Date(accountSASSignatureValues.expiryTime, false),\n        accountSASSignatureValues.ipRange\n            ? ipRangeToString(accountSASSignatureValues.ipRange)\n            : \"\",\n        accountSASSignatureValues.protocol\n            ? accountSASSignatureValues.protocol\n            : \"\",\n        version,\n        \"\" // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n    var signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(version, signature, parsedPermissions, parsedServices, parsedResourceTypes, accountSASSignatureValues.protocol, accountSASSignatureValues.startTime, accountSASSignatureValues.expiryTime, accountSASSignatureValues.ipRange);\n}\n//# sourceMappingURL=IAccountSASSignatureValues.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import * as tslib_1 from \"tslib\";\nimport { RestError } from \"@azure/ms-rest-js\";\nimport { Readable } from \"stream\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n *\n * @class RetriableReadableStream\n * @extends {Readable}\n */\nvar RetriableReadableStream = /** @class */ (function (_super) {\n    tslib_1.__extends(RetriableReadableStream, _super);\n    /**\n     * Creates an instance of RetriableReadableStream.\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {NodeJS.ReadableStream} source The current ReadableStream returned from getter\n     * @param {ReadableStreamGetter} getter A method calling downloading request returning\n     *                                      a new ReadableStream from specified offset\n     * @param {number} offset Offset position in original data source to read\n     * @param {number} count How much data in original data source to read\n     * @param {IRetriableReadableStreamOptions} [options={}]\n     * @memberof RetriableReadableStream\n     */\n    function RetriableReadableStream(aborter, source, getter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        _this.retries = 0;\n        _this.aborter = aborter;\n        _this.getter = getter;\n        _this.source = source;\n        _this.start = offset;\n        _this.offset = offset;\n        _this.end = offset + count - 1;\n        _this.maxRetryRequests =\n            options.maxRetryRequests && options.maxRetryRequests >= 0\n                ? options.maxRetryRequests\n                : 0;\n        _this.progress = options.progress;\n        _this.options = options;\n        aborter.addEventListener(\"abort\", function () {\n            _this.source.pause();\n            _this.emit(\"error\", new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR));\n        });\n        _this.setSourceDataHandler();\n        _this.setSourceEndHandler();\n        _this.setSourceErrorHandler();\n        return _this;\n    }\n    RetriableReadableStream.prototype._read = function () {\n        if (!this.aborter.aborted) {\n            this.source.resume();\n        }\n    };\n    RetriableReadableStream.prototype.setSourceDataHandler = function () {\n        var _this = this;\n        this.source.on(\"data\", function (data) {\n            if (_this.options.doInjectErrorOnce) {\n                _this.options.doInjectErrorOnce = undefined;\n                _this.source.pause();\n                _this.source.removeAllListeners(\"data\");\n                _this.source.emit(\"end\");\n                return;\n            }\n            // console.log(\n            //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n            // );\n            _this.offset += data.length;\n            if (_this.progress) {\n                _this.progress({ loadedBytes: _this.offset - _this.start });\n            }\n            if (!_this.push(data)) {\n                _this.source.pause();\n            }\n        });\n    };\n    RetriableReadableStream.prototype.setSourceEndHandler = function () {\n        var _this = this;\n        this.source.on(\"end\", function () {\n            // console.log(\n            //   `Source stream emits end, offset: ${\n            //     this.offset\n            //   }, dest end : ${this.end}`\n            // );\n            if (_this.offset - 1 === _this.end) {\n                _this.push(null);\n            }\n            else if (_this.offset <= _this.end) {\n                // console.log(\n                //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n                // );\n                if (_this.retries < _this.maxRetryRequests) {\n                    _this.retries += 1;\n                    _this.getter(_this.offset)\n                        .then(function (newSource) {\n                        _this.source = newSource;\n                        _this.setSourceDataHandler();\n                        _this.setSourceEndHandler();\n                        _this.setSourceErrorHandler();\n                    })\n                        .catch(function (error) {\n                        _this.emit(\"error\", error);\n                    });\n                }\n                else {\n                    _this.emit(\"error\", new Error(\n                    // tslint:disable-next-line:max-line-length\n                    \"Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: \" + (_this\n                        .offset - 1) + \", data needed offset: \" + _this.end + \", retries: \" + _this.retries + \", max retries: \" + _this.maxRetryRequests));\n                }\n            }\n            else {\n                _this.emit(\"error\", new Error(\"Data corruption failure: Received more data than original request, data needed offset is \" + _this.end + \", received offset: \" + (_this.offset - 1)));\n            }\n        });\n    };\n    RetriableReadableStream.prototype.setSourceErrorHandler = function () {\n        var _this = this;\n        this.source.on(\"error\", function (error) {\n            _this.emit(\"error\", error);\n        });\n    };\n    return RetriableReadableStream;\n}(Readable));\nexport { RetriableReadableStream };\n//# sourceMappingURL=RetriableReadableStream.js.map","import { isNode } from \"@azure/ms-rest-js\";\nimport { RetriableReadableStream } from \"./utils/RetriableReadableStream\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * BlobDownloadResponse implements Models.BlobDownloadResponse interface, and in Node.js runtime it will\n * automatically retry when internal read stream unexpected ends. (This kind of unexpected ends cannot\n * trigger retries defined in pipeline retry policy.)\n *\n * The readableStreamBody stream will retry underlayer, you can just use it as a normal Node.js\n * Readable stream.\n *\n * @export\n * @class BlobDownloadResponse\n * @implements {Models.BlobDownloadResponse}\n */\nvar BlobDownloadResponse = /** @class */ (function () {\n    /**\n     * Creates an instance of BlobDownloadResponse.\n     *\n     * @param {Aborter} aborter\n     * @param {Models.BlobDownloadResponse} originalResponse\n     * @param {ReadableStreamGetter} getter\n     * @param {number} offset\n     * @param {number} count\n     * @param {IRetriableReadableStreamOptions} [options={}]\n     * @memberof BlobDownloadResponse\n     */\n    function BlobDownloadResponse(aborter, originalResponse, getter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        this.originalResponse = originalResponse;\n        this.blobDownloadStream = new RetriableReadableStream(aborter, this.originalResponse.readableStreamBody, getter, offset, count, options);\n    }\n    Object.defineProperty(BlobDownloadResponse.prototype, \"acceptRanges\", {\n        /**\n         * Indicates that the service supports\n         * requests for partial file content.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.acceptRanges;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"cacheControl\", {\n        /**\n         * Returns if it was previously specified\n         * for the file.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.cacheControl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentDisposition\", {\n        /**\n         * Returns the value that was specified\n         * for the 'x-ms-content-disposition' header and specifies how to process the\n         * response.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentDisposition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentEncoding\", {\n        /**\n         * Returns the value that was specified\n         * for the Content-Encoding request header.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentEncoding;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentLanguage\", {\n        /**\n         * Returns the value that was specified\n         * for the Content-Language request header.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentLanguage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"blobSequenceNumber\", {\n        /**\n         * The current sequence number for a\n         * page blob. This header is not returned for block blobs or append blobs.\n         *\n         * @readonly\n         * @type {(number | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.blobSequenceNumber;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"blobType\", {\n        /**\n         * The blob's type. Possible values include:\n         * 'BlockBlob', 'PageBlob', 'AppendBlob'.\n         *\n         * @readonly\n         * @type {(Models.BlobType | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.blobType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentLength\", {\n        /**\n         * The number of bytes present in the\n         * response body.\n         *\n         * @readonly\n         * @type {(number | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentMD5\", {\n        /**\n         * If the file has an MD5 hash and the\n         * request is to read the full file, this response header is returned so that\n         * the client can check for message content integrity. If the request is to\n         * read a specified range and the 'x-ms-range-get-content-md5' is set to\n         * true, then the request returns an MD5 hash for the range, as long as the\n         * range size is less than or equal to 4 MB. If neither of these sets of\n         * conditions is true, then no value is returned for the 'Content-MD5'\n         * header.\n         *\n         * @readonly\n         * @type {(Uint8Array | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentMD5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentRange\", {\n        /**\n         * Indicates the range of bytes returned if\n         * the client requested a subset of the file by setting the Range request\n         * header.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentRange;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"contentType\", {\n        /**\n         * The content type specified for the file.\n         * The default content type is 'application/octet-stream'\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.contentType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copyCompletionTime\", {\n        /**\n         * Conclusion time of the last attempted\n         * Copy File operation where this file was the destination file. This value\n         * can specify the time of a completed, aborted, or failed copy attempt.\n         *\n         * @readonly\n         * @type {(Date | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copyCompletionTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copyId\", {\n        /**\n         * String identifier for the last attempted Copy\n         * File operation where this file was the destination file.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copyId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copyProgress\", {\n        /**\n         * Contains the number of bytes copied and\n         * the total bytes in the source in the last attempted Copy File operation\n         * where this file was the destination file. Can show between 0 and\n         * Content-Length bytes copied.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copyProgress;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copySource\", {\n        /**\n         * URL up to 2KB in length that specifies the\n         * source file used in the last attempted Copy File operation where this file\n         * was the destination file.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copySource;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copyStatus\", {\n        /**\n         * State of the copy operation\n         * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n         * 'success', 'aborted', 'failed'\n         *\n         * @readonly\n         * @type {(Models.CopyStatusType | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copyStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"copyStatusDescription\", {\n        /**\n         * Only appears when\n         * x-ms-copy-status is failed or pending. Describes cause of fatal or\n         * non-fatal copy operation failure.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.copyStatusDescription;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"leaseDuration\", {\n        /**\n         * When a blob is leased,\n         * specifies whether the lease is of infinite or fixed duration. Possible\n         * values include: 'infinite', 'fixed'.\n         *\n         * @readonly\n         * @type {(Models.LeaseDurationType | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.leaseDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"leaseState\", {\n        /**\n         * Lease state of the blob. Possible\n         * values include: 'available', 'leased', 'expired', 'breaking', 'broken'.\n         *\n         * @readonly\n         * @type {(Models.LeaseStateType | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.leaseState;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"leaseStatus\", {\n        /**\n         * The current lease status of the\n         * blob. Possible values include: 'locked', 'unlocked'.\n         *\n         * @readonly\n         * @type {(Models.LeaseStatusType | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.leaseStatus;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"date\", {\n        /**\n         * A UTC date/time value generated by the service that\n         * indicates the time at which the response was initiated.\n         *\n         * @readonly\n         * @type {(Date | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.date;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"blobCommittedBlockCount\", {\n        /**\n         * The number of committed blocks\n         * present in the blob. This header is returned only for append blobs.\n         *\n         * @readonly\n         * @type {(number | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.blobCommittedBlockCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"eTag\", {\n        /**\n         * The ETag contains a value that you can use to\n         * perform operations conditionally, in quotes.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.eTag;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"errorCode\", {\n        get: function () {\n            return this.originalResponse.errorCode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"isServerEncrypted\", {\n        /**\n         * The value of this header is set to\n         * true if the file data and application metadata are completely encrypted\n         * using the specified algorithm. Otherwise, the value is set to false (when\n         * the file is unencrypted, or if only parts of the file/application metadata\n         * are encrypted).\n         *\n         * @readonly\n         * @type {(boolean | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.isServerEncrypted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"blobContentMD5\", {\n        /**\n         * If the blob has a MD5 hash, and if\n         * request contains range header (Range or x-ms-range), this response header\n         * is returned with the value of the whole blob's MD5 value. This value may\n         * or may not be equal to the value returned in Content-MD5 header, with the\n         * latter calculated from the requested range.\n         *\n         * @readonly\n         * @type {(Uint8Array | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.blobContentMD5;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"lastModified\", {\n        /**\n         * Returns the date and time the file was last\n         * modified. Any operation that modifies the file or its properties updates\n         * the last modified time.\n         *\n         * @readonly\n         * @type {(Date | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.lastModified;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"metadata\", {\n        /**\n         * A name-value pair\n         * to associate with a file storage object.\n         *\n         * @readonly\n         * @type {(IMetadata | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.metadata;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"requestId\", {\n        /**\n         * This header uniquely identifies the request\n         * that was made and can be used for troubleshooting the request.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.requestId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"version\", {\n        /**\n         * Indicates the version of the File service used\n         * to execute the request.\n         *\n         * @readonly\n         * @type {(string | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"blobBody\", {\n        /**\n         * The response body as a browser Blob.\n         * Always undefined in node.js.\n         *\n         * @readonly\n         * @type {(Promise<Blob> | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return this.originalResponse.blobBody;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"readableStreamBody\", {\n        /**\n         * The response body as a node.js Readable stream.\n         * Always undefined in the browser.\n         *\n         * It will automatically retry when internal read stream unexpected ends.\n         *\n         * @readonly\n         * @type {(NodeJS.ReadableStream | undefined)}\n         * @memberof BlobDownloadResponse\n         */\n        get: function () {\n            return isNode ? this.blobDownloadStream : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BlobDownloadResponse.prototype, \"_response\", {\n        get: function () {\n            return this.originalResponse._response;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BlobDownloadResponse;\n}());\nexport { BlobDownloadResponse };\n//# sourceMappingURL=BlobDownloadResponse.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nexport var StorageError = {\n    serializedName: \"StorageError\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageError\",\n        modelProperties: {\n            message: {\n                xmlName: \"Message\",\n                serializedName: \"Message\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AccessPolicy = {\n    serializedName: \"AccessPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"AccessPolicy\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            expiry: {\n                xmlName: \"Expiry\",\n                required: true,\n                serializedName: \"Expiry\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            permission: {\n                xmlName: \"Permission\",\n                required: true,\n                serializedName: \"Permission\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobProperties = {\n    xmlName: \"Properties\",\n    serializedName: \"BlobProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobProperties\",\n        modelProperties: {\n            creationTime: {\n                xmlName: \"Creation-Time\",\n                serializedName: \"Creation-Time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            lastModified: {\n                xmlName: \"Last-Modified\",\n                required: true,\n                serializedName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                xmlName: \"Etag\",\n                required: true,\n                serializedName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLength: {\n                xmlName: \"Content-Length\",\n                serializedName: \"Content-Length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                xmlName: \"Content-Type\",\n                serializedName: \"Content-Type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentEncoding: {\n                xmlName: \"Content-Encoding\",\n                serializedName: \"Content-Encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                xmlName: \"Content-Language\",\n                serializedName: \"Content-Language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                xmlName: \"Content-MD5\",\n                serializedName: \"Content-MD5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentDisposition: {\n                xmlName: \"Content-Disposition\",\n                serializedName: \"Content-Disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                xmlName: \"Cache-Control\",\n                serializedName: \"Cache-Control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                xmlName: \"x-ms-blob-sequence-number\",\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                xmlName: \"BlobType\",\n                serializedName: \"BlobType\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                xmlName: \"LeaseStatus\",\n                serializedName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            leaseState: {\n                xmlName: \"LeaseState\",\n                serializedName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                xmlName: \"LeaseDuration\",\n                serializedName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            copyId: {\n                xmlName: \"CopyId\",\n                serializedName: \"CopyId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                xmlName: \"CopyStatus\",\n                serializedName: \"CopyStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            copySource: {\n                xmlName: \"CopySource\",\n                serializedName: \"CopySource\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                xmlName: \"CopyProgress\",\n                serializedName: \"CopyProgress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyCompletionTime: {\n                xmlName: \"CopyCompletionTime\",\n                serializedName: \"CopyCompletionTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                xmlName: \"CopyStatusDescription\",\n                serializedName: \"CopyStatusDescription\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            serverEncrypted: {\n                xmlName: \"ServerEncrypted\",\n                serializedName: \"ServerEncrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            incrementalCopy: {\n                xmlName: \"IncrementalCopy\",\n                serializedName: \"IncrementalCopy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                xmlName: \"DestinationSnapshot\",\n                serializedName: \"DestinationSnapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deletedTime: {\n                xmlName: \"DeletedTime\",\n                serializedName: \"DeletedTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            remainingRetentionDays: {\n                xmlName: \"RemainingRetentionDays\",\n                serializedName: \"RemainingRetentionDays\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            accessTier: {\n                xmlName: \"AccessTier\",\n                serializedName: \"AccessTier\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierInferred: {\n                xmlName: \"AccessTierInferred\",\n                serializedName: \"AccessTierInferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                xmlName: \"ArchiveStatus\",\n                serializedName: \"ArchiveStatus\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangeTime: {\n                xmlName: \"AccessTierChangeTime\",\n                serializedName: \"AccessTierChangeTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport var BlobItem = {\n    xmlName: \"Blob\",\n    serializedName: \"BlobItem\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobItem\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleted: {\n                xmlName: \"Deleted\",\n                required: true,\n                serializedName: \"Deleted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            snapshot: {\n                xmlName: \"Snapshot\",\n                required: true,\n                serializedName: \"Snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            properties: {\n                xmlName: \"Properties\",\n                required: true,\n                serializedName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobProperties\"\n                }\n            },\n            metadata: {\n                xmlName: \"Metadata\",\n                serializedName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var BlobFlatListSegment = {\n    xmlName: \"Blobs\",\n    serializedName: \"BlobFlatListSegment\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobFlatListSegment\",\n        modelProperties: {\n            blobItems: {\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                required: true,\n                serializedName: \"BlobItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItem\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListBlobsFlatSegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListBlobsFlatSegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsFlatSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                xmlIsAttribute: true,\n                xmlName: \"ContainerName\",\n                required: true,\n                serializedName: \"ContainerName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                required: true,\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            delimiter: {\n                xmlName: \"Delimiter\",\n                required: true,\n                serializedName: \"Delimiter\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            segment: {\n                xmlName: \"Blobs\",\n                required: true,\n                serializedName: \"Segment\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobFlatListSegment\"\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobPrefix = {\n    serializedName: \"BlobPrefix\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobPrefix\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobHierarchyListSegment = {\n    xmlName: \"Blobs\",\n    serializedName: \"BlobHierarchyListSegment\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobHierarchyListSegment\",\n        modelProperties: {\n            blobPrefixes: {\n                xmlName: \"BlobPrefixes\",\n                xmlElementName: \"BlobPrefix\",\n                serializedName: \"BlobPrefixes\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobPrefix\"\n                        }\n                    }\n                }\n            },\n            blobItems: {\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                required: true,\n                serializedName: \"BlobItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItem\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListBlobsHierarchySegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListBlobsHierarchySegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsHierarchySegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                xmlIsAttribute: true,\n                xmlName: \"ContainerName\",\n                required: true,\n                serializedName: \"ContainerName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                required: true,\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            delimiter: {\n                xmlName: \"Delimiter\",\n                required: true,\n                serializedName: \"Delimiter\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            segment: {\n                xmlName: \"Blobs\",\n                required: true,\n                serializedName: \"Segment\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobHierarchyListSegment\"\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var Block = {\n    serializedName: \"Block\",\n    type: {\n        name: \"Composite\",\n        className: \"Block\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            size: {\n                xmlName: \"Size\",\n                required: true,\n                serializedName: \"Size\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var BlockList = {\n    serializedName: \"BlockList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockList\",\n        modelProperties: {\n            committedBlocks: {\n                xmlIsWrapped: true,\n                xmlName: \"CommittedBlocks\",\n                xmlElementName: \"Block\",\n                serializedName: \"CommittedBlocks\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            },\n            uncommittedBlocks: {\n                xmlIsWrapped: true,\n                xmlName: \"UncommittedBlocks\",\n                xmlElementName: \"Block\",\n                serializedName: \"UncommittedBlocks\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var BlockLookupList = {\n    xmlName: \"BlockList\",\n    serializedName: \"BlockLookupList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockLookupList\",\n        modelProperties: {\n            committed: {\n                xmlName: \"Committed\",\n                xmlElementName: \"Committed\",\n                serializedName: \"Committed\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            uncommitted: {\n                xmlName: \"Uncommitted\",\n                xmlElementName: \"Uncommitted\",\n                serializedName: \"Uncommitted\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            latest: {\n                xmlName: \"Latest\",\n                xmlElementName: \"Latest\",\n                serializedName: \"Latest\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ContainerProperties = {\n    serializedName: \"ContainerProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerProperties\",\n        modelProperties: {\n            lastModified: {\n                xmlName: \"Last-Modified\",\n                required: true,\n                serializedName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                xmlName: \"Etag\",\n                required: true,\n                serializedName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseStatus: {\n                xmlName: \"LeaseStatus\",\n                serializedName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            leaseState: {\n                xmlName: \"LeaseState\",\n                serializedName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                xmlName: \"LeaseDuration\",\n                serializedName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            publicAccess: {\n                xmlName: \"PublicAccess\",\n                serializedName: \"PublicAccess\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            hasImmutabilityPolicy: {\n                xmlName: \"HasImmutabilityPolicy\",\n                serializedName: \"HasImmutabilityPolicy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                xmlName: \"HasLegalHold\",\n                serializedName: \"HasLegalHold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerItem = {\n    xmlName: \"Container\",\n    serializedName: \"ContainerItem\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerItem\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            properties: {\n                xmlName: \"Properties\",\n                required: true,\n                serializedName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ContainerProperties\"\n                }\n            },\n            metadata: {\n                xmlName: \"Metadata\",\n                serializedName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListContainersSegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListContainersSegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListContainersSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            containerItems: {\n                xmlIsWrapped: true,\n                xmlName: \"Containers\",\n                xmlElementName: \"Container\",\n                required: true,\n                serializedName: \"ContainerItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ContainerItem\"\n                        }\n                    }\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var CorsRule = {\n    serializedName: \"CorsRule\",\n    type: {\n        name: \"Composite\",\n        className: \"CorsRule\",\n        modelProperties: {\n            allowedOrigins: {\n                xmlName: \"AllowedOrigins\",\n                required: true,\n                serializedName: \"AllowedOrigins\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedMethods: {\n                xmlName: \"AllowedMethods\",\n                required: true,\n                serializedName: \"AllowedMethods\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedHeaders: {\n                xmlName: \"AllowedHeaders\",\n                required: true,\n                serializedName: \"AllowedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            exposedHeaders: {\n                xmlName: \"ExposedHeaders\",\n                required: true,\n                serializedName: \"ExposedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxAgeInSeconds: {\n                xmlName: \"MaxAgeInSeconds\",\n                required: true,\n                serializedName: \"MaxAgeInSeconds\",\n                constraints: {\n                    InclusiveMinimum: 0\n                },\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var GeoReplication = {\n    serializedName: \"GeoReplication\",\n    type: {\n        name: \"Composite\",\n        className: \"GeoReplication\",\n        modelProperties: {\n            status: {\n                xmlName: \"Status\",\n                required: true,\n                serializedName: \"Status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastSyncTime: {\n                xmlName: \"LastSyncTime\",\n                required: true,\n                serializedName: \"LastSyncTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport var RetentionPolicy = {\n    serializedName: \"RetentionPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"RetentionPolicy\",\n        modelProperties: {\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            days: {\n                xmlName: \"Days\",\n                serializedName: \"Days\",\n                constraints: {\n                    InclusiveMinimum: 1\n                },\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var Logging = {\n    serializedName: \"Logging\",\n    type: {\n        name: \"Composite\",\n        className: \"Logging\",\n        modelProperties: {\n            version: {\n                xmlName: \"Version\",\n                required: true,\n                serializedName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteProperty: {\n                xmlName: \"Delete\",\n                required: true,\n                serializedName: \"Delete\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            read: {\n                xmlName: \"Read\",\n                required: true,\n                serializedName: \"Read\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            write: {\n                xmlName: \"Write\",\n                required: true,\n                serializedName: \"Write\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                xmlName: \"RetentionPolicy\",\n                required: true,\n                serializedName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var Metrics = {\n    serializedName: \"Metrics\",\n    type: {\n        name: \"Composite\",\n        className: \"Metrics\",\n        modelProperties: {\n            version: {\n                xmlName: \"Version\",\n                serializedName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            includeAPIs: {\n                xmlName: \"IncludeAPIs\",\n                serializedName: \"IncludeAPIs\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                xmlName: \"RetentionPolicy\",\n                serializedName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var PageRange = {\n    serializedName: \"PageRange\",\n    type: {\n        name: \"Composite\",\n        className: \"PageRange\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                xmlName: \"End\",\n                required: true,\n                serializedName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ClearRange = {\n    serializedName: \"ClearRange\",\n    type: {\n        name: \"Composite\",\n        className: \"ClearRange\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                xmlName: \"End\",\n                required: true,\n                serializedName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var PageList = {\n    serializedName: \"PageList\",\n    type: {\n        name: \"Composite\",\n        className: \"PageList\",\n        modelProperties: {\n            pageRange: {\n                xmlName: \"PageRange\",\n                xmlElementName: \"PageRange\",\n                serializedName: \"PageRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"PageRange\"\n                        }\n                    }\n                }\n            },\n            clearRange: {\n                xmlName: \"ClearRange\",\n                xmlElementName: \"ClearRange\",\n                serializedName: \"ClearRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ClearRange\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var SignedIdentifier = {\n    serializedName: \"SignedIdentifier\",\n    type: {\n        name: \"Composite\",\n        className: \"SignedIdentifier\",\n        modelProperties: {\n            id: {\n                xmlName: \"Id\",\n                required: true,\n                serializedName: \"Id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessPolicy: {\n                xmlName: \"AccessPolicy\",\n                required: true,\n                serializedName: \"AccessPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"AccessPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var StaticWebsite = {\n    serializedName: \"StaticWebsite\",\n    type: {\n        name: \"Composite\",\n        className: \"StaticWebsite\",\n        modelProperties: {\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            indexDocument: {\n                xmlName: \"IndexDocument\",\n                serializedName: \"IndexDocument\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorDocument404Path: {\n                xmlName: \"ErrorDocument404Path\",\n                serializedName: \"ErrorDocument404Path\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var StorageServiceProperties = {\n    serializedName: \"StorageServiceProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageServiceProperties\",\n        modelProperties: {\n            logging: {\n                xmlName: \"Logging\",\n                serializedName: \"Logging\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Logging\"\n                }\n            },\n            hourMetrics: {\n                xmlName: \"HourMetrics\",\n                serializedName: \"HourMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            minuteMetrics: {\n                xmlName: \"MinuteMetrics\",\n                serializedName: \"MinuteMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            cors: {\n                xmlIsWrapped: true,\n                xmlName: \"Cors\",\n                xmlElementName: \"CorsRule\",\n                serializedName: \"Cors\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"CorsRule\"\n                        }\n                    }\n                }\n            },\n            defaultServiceVersion: {\n                xmlName: \"DefaultServiceVersion\",\n                serializedName: \"DefaultServiceVersion\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteRetentionPolicy: {\n                xmlName: \"DeleteRetentionPolicy\",\n                serializedName: \"DeleteRetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            },\n            staticWebsite: {\n                xmlName: \"StaticWebsite\",\n                serializedName: \"StaticWebsite\",\n                type: {\n                    name: \"Composite\",\n                    className: \"StaticWebsite\"\n                }\n            }\n        }\n    }\n};\nexport var StorageServiceStats = {\n    serializedName: \"StorageServiceStats\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageServiceStats\",\n        modelProperties: {\n            geoReplication: {\n                xmlName: \"GeoReplication\",\n                serializedName: \"GeoReplication\",\n                type: {\n                    name: \"Composite\",\n                    className: \"GeoReplication\"\n                }\n            }\n        }\n    }\n};\nexport var LeaseAccessConditions = {\n    xmlName: \"lease-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"LeaseAccessConditions\",\n        modelProperties: {\n            leaseId: {\n                xmlName: \"leaseId\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ModifiedAccessConditions = {\n    xmlName: \"modified-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"ModifiedAccessConditions\",\n        modelProperties: {\n            ifModifiedSince: {\n                xmlName: \"ifModifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            ifUnmodifiedSince: {\n                xmlName: \"ifUnmodifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            ifMatch: {\n                xmlName: \"ifMatch\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            ifNoneMatch: {\n                xmlName: \"ifNoneMatch\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobHTTPHeaders = {\n    xmlName: \"blob-HTTP-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobHTTPHeaders\",\n        modelProperties: {\n            blobCacheControl: {\n                xmlName: \"blobCacheControl\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentType: {\n                xmlName: \"blobContentType\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentMD5: {\n                xmlName: \"blobContentMD5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobContentEncoding: {\n                xmlName: \"blobContentEncoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLanguage: {\n                xmlName: \"blobContentLanguage\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentDisposition: {\n                xmlName: \"blobContentDisposition\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var SourceModifiedAccessConditions = {\n    xmlName: \"source-modified-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"SourceModifiedAccessConditions\",\n        modelProperties: {\n            sourceIfModifiedSince: {\n                xmlName: \"sourceIfModifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            sourceIfUnmodifiedSince: {\n                xmlName: \"sourceIfUnmodifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            sourceIfMatch: {\n                xmlName: \"sourceIfMatch\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            sourceIfNoneMatch: {\n                xmlName: \"sourceIfNoneMatch\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var SequenceNumberAccessConditions = {\n    xmlName: \"sequence-number-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"SequenceNumberAccessConditions\",\n        modelProperties: {\n            ifSequenceNumberLessThanOrEqualTo: {\n                xmlName: \"ifSequenceNumberLessThanOrEqualTo\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            ifSequenceNumberLessThan: {\n                xmlName: \"ifSequenceNumberLessThan\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            ifSequenceNumberEqualTo: {\n                xmlName: \"ifSequenceNumberEqualTo\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var AppendPositionAccessConditions = {\n    xmlName: \"append-position-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendPositionAccessConditions\",\n        modelProperties: {\n            maxSize: {\n                xmlName: \"maxSize\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            appendPosition: {\n                xmlName: \"appendPosition\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceSetPropertiesHeaders = {\n    serializedName: \"service-setproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSetPropertiesHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetPropertiesHeaders = {\n    serializedName: \"service-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetPropertiesHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetStatisticsHeaders = {\n    serializedName: \"service-getstatistics-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetStatisticsHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceListContainersSegmentHeaders = {\n    serializedName: \"service-listcontainerssegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceListContainersSegmentHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetAccountInfoHeaders = {\n    serializedName: \"service-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerCreateHeaders = {\n    serializedName: \"container-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetPropertiesHeaders = {\n    serializedName: \"container-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetPropertiesHeaders\",\n        modelProperties: {\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            hasImmutabilityPolicy: {\n                serializedName: \"x-ms-has-immutability-policy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                serializedName: \"x-ms-has-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerDeleteHeaders = {\n    serializedName: \"container-delete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerDeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerSetMetadataHeaders = {\n    serializedName: \"container-setmetadata-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetMetadataHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetAccessPolicyHeaders = {\n    serializedName: \"container-getaccesspolicy-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccessPolicyHeaders\",\n        modelProperties: {\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerSetAccessPolicyHeaders = {\n    serializedName: \"container-setaccesspolicy-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetAccessPolicyHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerAcquireLeaseHeaders = {\n    serializedName: \"container-acquirelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerAcquireLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerReleaseLeaseHeaders = {\n    serializedName: \"container-releaselease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerReleaseLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerRenewLeaseHeaders = {\n    serializedName: \"container-renewlease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenewLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerBreakLeaseHeaders = {\n    serializedName: \"container-breaklease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerBreakLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerChangeLeaseHeaders = {\n    serializedName: \"container-changelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerChangeLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerListBlobFlatSegmentHeaders = {\n    serializedName: \"container-listblobflatsegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobFlatSegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerListBlobHierarchySegmentHeaders = {\n    serializedName: \"container-listblobhierarchysegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobHierarchySegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetAccountInfoHeaders = {\n    serializedName: \"container-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobDownloadHeaders = {\n    serializedName: \"blob-download-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDownloadHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentRange: {\n                serializedName: \"content-range\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            copyCompletionTime: {\n                serializedName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            blobContentMD5: {\n                serializedName: \"x-ms-blob-content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobGetPropertiesHeaders = {\n    serializedName: \"blob-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetPropertiesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            creationTime: {\n                serializedName: \"x-ms-creation-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            copyCompletionTime: {\n                serializedName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            isIncrementalCopy: {\n                serializedName: \"x-ms-incremental-copy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                serializedName: \"x-ms-copy-destination-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            accessTier: {\n                serializedName: \"x-ms-access-tier\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierInferred: {\n                serializedName: \"x-ms-access-tier-inferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                serializedName: \"x-ms-archive-status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangeTime: {\n                serializedName: \"x-ms-access-tier-change-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobDeleteHeaders = {\n    serializedName: \"blob-delete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobCreateHeaders = {\n    serializedName: \"pageblob-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AppendBlobCreateHeaders = {\n    serializedName: \"appendblob-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobUploadHeaders = {\n    serializedName: \"blockblob-upload-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobUploadHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobUndeleteHeaders = {\n    serializedName: \"blob-undelete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobUndeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetHTTPHeadersHeaders = {\n    serializedName: \"blob-sethttpheaders-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetHTTPHeadersHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetMetadataHeaders = {\n    serializedName: \"blob-setmetadata-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetMetadataHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobAcquireLeaseHeaders = {\n    serializedName: \"blob-acquirelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAcquireLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobReleaseLeaseHeaders = {\n    serializedName: \"blob-releaselease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobReleaseLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobRenewLeaseHeaders = {\n    serializedName: \"blob-renewlease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobRenewLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobChangeLeaseHeaders = {\n    serializedName: \"blob-changelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobChangeLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobBreakLeaseHeaders = {\n    serializedName: \"blob-breaklease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobBreakLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobCreateSnapshotHeaders = {\n    serializedName: \"blob-createsnapshot-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCreateSnapshotHeaders\",\n        modelProperties: {\n            snapshot: {\n                serializedName: \"x-ms-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobStartCopyFromURLHeaders = {\n    serializedName: \"blob-startcopyfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobStartCopyFromURLHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobAbortCopyFromURLHeaders = {\n    serializedName: \"blob-abortcopyfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAbortCopyFromURLHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetTierHeaders = {\n    serializedName: \"blob-settier-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTierHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobGetAccountInfoHeaders = {\n    serializedName: \"blob-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobStageBlockHeaders = {\n    serializedName: \"blockblob-stageblock-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobStageBlockFromURLHeaders = {\n    serializedName: \"blockblob-stageblockfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockFromURLHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobCommitBlockListHeaders = {\n    serializedName: \"blockblob-commitblocklist-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobCommitBlockListHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobGetBlockListHeaders = {\n    serializedName: \"blockblob-getblocklist-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobGetBlockListHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobUploadPagesHeaders = {\n    serializedName: \"pageblob-uploadpages-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobClearPagesHeaders = {\n    serializedName: \"pageblob-clearpages-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobClearPagesHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobGetPageRangesHeaders = {\n    serializedName: \"pageblob-getpageranges-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobGetPageRangesDiffHeaders = {\n    serializedName: \"pageblob-getpagerangesdiff-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesDiffHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobResizeHeaders = {\n    serializedName: \"pageblob-resize-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobResizeHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobUpdateSequenceNumberHeaders = {\n    serializedName: \"pageblob-updatesequencenumber-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUpdateSequenceNumberHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobCopyIncrementalHeaders = {\n    serializedName: \"pageblob-copyincremental-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCopyIncrementalHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AppendBlobAppendBlockHeaders = {\n    serializedName: \"appendblob-appendblock-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobAppendOffset: {\n                serializedName: \"x-ms-blob-append-offset\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=mappers.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nexport var access = {\n    parameterPath: [\n        \"options\",\n        \"access\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action0 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'acquire',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action1 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'release',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action2 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'renew',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action3 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'break',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action4 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'change',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var appendPosition = {\n    parameterPath: [\n        \"options\",\n        \"appendPositionAccessConditions\",\n        \"appendPosition\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-appendpos\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobCacheControl = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobCacheControl\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-cache-control\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentDisposition = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentDisposition\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-disposition\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentEncoding = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentEncoding\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-encoding\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentLanguage = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentLanguage\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-language\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentLength = {\n    parameterPath: \"blobContentLength\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var blobContentType = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentType\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobSequenceNumber = {\n    parameterPath: [\n        \"options\",\n        \"blobSequenceNumber\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        defaultValue: 0,\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobType0 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'PageBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobType1 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'AppendBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobType2 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'BlockBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blockId = {\n    parameterPath: \"blockId\",\n    mapper: {\n        required: true,\n        serializedName: \"blockid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var breakPeriod = {\n    parameterPath: [\n        \"options\",\n        \"breakPeriod\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-break-period\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var comp0 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'properties',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp1 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'stats',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp10 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'page',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp11 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'pagelist',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp12 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'incrementalcopy',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp13 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'appendblock',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp14 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'block',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp15 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'blocklist',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp2 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'list',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp3 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'metadata',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp4 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'acl',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp5 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'lease',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp6 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'undelete',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp7 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'snapshot',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp8 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'copy',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp9 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'tier',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var contentLength = {\n    parameterPath: \"contentLength\",\n    mapper: {\n        required: true,\n        serializedName: \"Content-Length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var copyActionAbortConstant = {\n    parameterPath: \"copyActionAbortConstant\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-copy-action\",\n        defaultValue: 'abort',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var copyId = {\n    parameterPath: \"copyId\",\n    mapper: {\n        required: true,\n        serializedName: \"copyid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var copySource = {\n    parameterPath: \"copySource\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var deleteSnapshots = {\n    parameterPath: [\n        \"options\",\n        \"deleteSnapshots\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-delete-snapshots\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"include\",\n                \"only\"\n            ]\n        }\n    }\n};\nexport var delimiter = {\n    parameterPath: \"delimiter\",\n    mapper: {\n        required: true,\n        serializedName: \"delimiter\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var duration = {\n    parameterPath: [\n        \"options\",\n        \"duration\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifMatch = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifMatch\"\n    ],\n    mapper: {\n        serializedName: \"If-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var ifModifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifModifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"If-Modified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var ifNoneMatch = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifNoneMatch\"\n    ],\n    mapper: {\n        serializedName: \"If-None-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var ifSequenceNumberEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-eq\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifSequenceNumberLessThan = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThan\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-lt\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifSequenceNumberLessThanOrEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThanOrEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-le\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifUnmodifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifUnmodifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"If-Unmodified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var include0 = {\n    parameterPath: [\n        \"options\",\n        \"include\"\n    ],\n    mapper: {\n        serializedName: \"include\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"metadata\"\n            ]\n        }\n    }\n};\nexport var include1 = {\n    parameterPath: [\n        \"options\",\n        \"include\"\n    ],\n    mapper: {\n        serializedName: \"include\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"snapshots\",\n                        \"metadata\",\n                        \"uncommittedblobs\",\n                        \"copy\",\n                        \"deleted\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var leaseId0 = {\n    parameterPath: [\n        \"options\",\n        \"leaseAccessConditions\",\n        \"leaseId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var leaseId1 = {\n    parameterPath: \"leaseId\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var listType = {\n    parameterPath: \"listType\",\n    mapper: {\n        required: true,\n        serializedName: \"blocklisttype\",\n        defaultValue: 'committed',\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"committed\",\n                \"uncommitted\",\n                \"all\"\n            ]\n        }\n    }\n};\nexport var marker = {\n    parameterPath: [\n        \"options\",\n        \"marker\"\n    ],\n    mapper: {\n        serializedName: \"marker\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var maxresults = {\n    parameterPath: [\n        \"options\",\n        \"maxresults\"\n    ],\n    mapper: {\n        serializedName: \"maxresults\",\n        constraints: {\n            InclusiveMinimum: 1\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var maxSize = {\n    parameterPath: [\n        \"options\",\n        \"appendPositionAccessConditions\",\n        \"maxSize\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-maxsize\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var metadata = {\n    parameterPath: [\n        \"options\",\n        \"metadata\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-meta\",\n        type: {\n            name: \"Dictionary\",\n            value: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n    }\n};\nexport var pageWrite0 = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        defaultValue: 'update',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var pageWrite1 = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        defaultValue: 'clear',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var prefix = {\n    parameterPath: [\n        \"options\",\n        \"prefix\"\n    ],\n    mapper: {\n        serializedName: \"prefix\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var prevsnapshot = {\n    parameterPath: [\n        \"options\",\n        \"prevsnapshot\"\n    ],\n    mapper: {\n        serializedName: \"prevsnapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var proposedLeaseId0 = {\n    parameterPath: [\n        \"options\",\n        \"proposedLeaseId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var proposedLeaseId1 = {\n    parameterPath: \"proposedLeaseId\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var range = {\n    parameterPath: [\n        \"options\",\n        \"range\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var rangeGetContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"rangeGetContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-range-get-content-md5\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport var requestId = {\n    parameterPath: [\n        \"options\",\n        \"requestId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype0 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'service',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype1 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'account',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype2 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'container',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sequenceNumberAction = {\n    parameterPath: \"sequenceNumberAction\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-sequence-number-action\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"max\",\n                \"update\",\n                \"increment\"\n            ]\n        }\n    }\n};\nexport var snapshot = {\n    parameterPath: [\n        \"options\",\n        \"snapshot\"\n    ],\n    mapper: {\n        serializedName: \"snapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"sourceContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var sourceIfMatch = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfMatch\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceIfModifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfModifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-modified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var sourceIfNoneMatch = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfNoneMatch\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-none-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceIfUnmodifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfUnmodifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-unmodified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var sourceRange = {\n    parameterPath: [\n        \"options\",\n        \"sourceRange\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceUrl = {\n    parameterPath: \"sourceUrl\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var tier = {\n    parameterPath: \"tier\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-access-tier\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var timeout = {\n    parameterPath: [\n        \"options\",\n        \"timeout\"\n    ],\n    mapper: {\n        serializedName: \"timeout\",\n        constraints: {\n            InclusiveMinimum: 0\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var transactionalContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"transactionalContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"Content-MD5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var url = {\n    parameterPath: \"url\",\n    mapper: {\n        required: true,\n        serializedName: \"url\",\n        defaultValue: '',\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nexport var version = {\n    parameterPath: \"version\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-version\",\n        defaultValue: '2018-03-28',\n        type: {\n            name: \"String\"\n        }\n    }\n};\n//# sourceMappingURL=parameters.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Service. */\nvar Service = /** @class */ (function () {\n    /**\n     * Create a Service.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Service(client) {\n        this.client = client;\n    }\n    Service.prototype.setProperties = function (storageServiceProperties, options, callback) {\n        return this.client.sendOperationRequest({\n            storageServiceProperties: storageServiceProperties,\n            options: options\n        }, setPropertiesOperationSpec, callback);\n    };\n    Service.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Service.prototype.getStatistics = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getStatisticsOperationSpec, callback);\n    };\n    Service.prototype.listContainersSegment = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, listContainersSegmentOperationSpec, callback);\n    };\n    Service.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Service;\n}());\nexport { Service };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar setPropertiesOperationSpec = {\n    httpMethod: \"PUT\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    requestBody: {\n        parameterPath: \"storageServiceProperties\",\n        mapper: tslib_1.__assign({}, Mappers.StorageServiceProperties, { required: true })\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ServiceSetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.StorageServiceProperties,\n            headersMapper: Mappers.ServiceGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getStatisticsOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp1\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.StorageServiceStats,\n            headersMapper: Mappers.ServiceGetStatisticsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listContainersSegmentOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include0,\n        Parameters.timeout,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListContainersSegmentResponse,\n            headersMapper: Mappers.ServiceListContainersSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ServiceGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=service.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/containerMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Container. */\nvar Container = /** @class */ (function () {\n    /**\n     * Create a Container.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Container(client) {\n        this.client = client;\n    }\n    Container.prototype.create = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, createOperationSpec, callback);\n    };\n    Container.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Container.prototype.deleteMethod = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, deleteMethodOperationSpec, callback);\n    };\n    Container.prototype.setMetadata = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setMetadataOperationSpec, callback);\n    };\n    Container.prototype.getAccessPolicy = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccessPolicyOperationSpec, callback);\n    };\n    Container.prototype.setAccessPolicy = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setAccessPolicyOperationSpec, callback);\n    };\n    Container.prototype.acquireLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, acquireLeaseOperationSpec, callback);\n    };\n    Container.prototype.releaseLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, releaseLeaseOperationSpec, callback);\n    };\n    Container.prototype.renewLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, renewLeaseOperationSpec, callback);\n    };\n    Container.prototype.breakLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, breakLeaseOperationSpec, callback);\n    };\n    Container.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            proposedLeaseId: proposedLeaseId,\n            options: options\n        }, changeLeaseOperationSpec, callback);\n    };\n    Container.prototype.listBlobFlatSegment = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, listBlobFlatSegmentOperationSpec, callback);\n    };\n    Container.prototype.listBlobHierarchySegment = function (delimiter, options, callback) {\n        return this.client.sendOperationRequest({\n            delimiter: delimiter,\n            options: options\n        }, listBlobHierarchySegmentOperationSpec, callback);\n    };\n    Container.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Container;\n}());\nexport { Container };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.access,\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar deleteMethodOperationSpec = {\n    httpMethod: \"DELETE\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setMetadataOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp3\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccessPolicyOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp4\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            bodyMapper: {\n                xmlElementName: \"SignedIdentifier\",\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SignedIdentifier\"\n                        }\n                    }\n                }\n            },\n            headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setAccessPolicyOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp4\n    ],\n    headerParameters: [\n        Parameters.access,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    requestBody: {\n        parameterPath: [\n            \"options\",\n            \"containerAcl\"\n        ],\n        mapper: {\n            xmlName: \"SignedIdentifiers\",\n            xmlElementName: \"SignedIdentifier\",\n            serializedName: \"containerAcl\",\n            type: {\n                name: \"Sequence\",\n                element: {\n                    type: {\n                        name: \"Composite\",\n                        className: \"SignedIdentifier\"\n                    }\n                }\n            }\n        }\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar acquireLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.duration,\n        Parameters.proposedLeaseId0,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar releaseLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar renewLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action2,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar breakLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.breakPeriod,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action3,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar changeLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.proposedLeaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action4,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listBlobFlatSegmentOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include1,\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n            headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listBlobHierarchySegmentOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.delimiter,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include1,\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n            headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=container.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/blobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Blob. */\nvar Blob = /** @class */ (function () {\n    /**\n     * Create a Blob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Blob(client) {\n        this.client = client;\n    }\n    Blob.prototype.download = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, downloadOperationSpec, callback);\n    };\n    Blob.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Blob.prototype.deleteMethod = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, deleteMethodOperationSpec, callback);\n    };\n    Blob.prototype.undelete = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, undeleteOperationSpec, callback);\n    };\n    Blob.prototype.setHTTPHeaders = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setHTTPHeadersOperationSpec, callback);\n    };\n    Blob.prototype.setMetadata = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setMetadataOperationSpec, callback);\n    };\n    Blob.prototype.acquireLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, acquireLeaseOperationSpec, callback);\n    };\n    Blob.prototype.releaseLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, releaseLeaseOperationSpec, callback);\n    };\n    Blob.prototype.renewLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, renewLeaseOperationSpec, callback);\n    };\n    Blob.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            proposedLeaseId: proposedLeaseId,\n            options: options\n        }, changeLeaseOperationSpec, callback);\n    };\n    Blob.prototype.breakLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, breakLeaseOperationSpec, callback);\n    };\n    Blob.prototype.createSnapshot = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, createSnapshotOperationSpec, callback);\n    };\n    Blob.prototype.startCopyFromURL = function (copySource, options, callback) {\n        return this.client.sendOperationRequest({\n            copySource: copySource,\n            options: options\n        }, startCopyFromURLOperationSpec, callback);\n    };\n    Blob.prototype.abortCopyFromURL = function (copyId, options, callback) {\n        return this.client.sendOperationRequest({\n            copyId: copyId,\n            options: options\n        }, abortCopyFromURLOperationSpec, callback);\n    };\n    Blob.prototype.setTier = function (tier, options, callback) {\n        return this.client.sendOperationRequest({\n            tier: tier,\n            options: options\n        }, setTierOperationSpec, callback);\n    };\n    Blob.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Blob;\n}());\nexport { Blob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar downloadOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.rangeGetContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        206: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"HEAD\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar deleteMethodOperationSpec = {\n    httpMethod: \"DELETE\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.deleteSnapshots,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar undeleteOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp6\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobUndeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setHTTPHeadersOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setMetadataOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp3\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar acquireLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.duration,\n        Parameters.proposedLeaseId0,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar releaseLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar renewLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action2,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar changeLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.proposedLeaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action4,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar breakLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.breakPeriod,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action3,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar createSnapshotOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp7\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.leaseId0\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobCreateSnapshotHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar startCopyFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.copySource,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.leaseId0\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobStartCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar abortCopyFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.copyId,\n        Parameters.timeout,\n        Parameters.comp8\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.copyActionAbortConstant,\n        Parameters.leaseId0\n    ],\n    responses: {\n        204: {\n            headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setTierOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp9\n    ],\n    headerParameters: [\n        Parameters.tier,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        202: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blobName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=blob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a PageBlob. */\nvar PageBlob = /** @class */ (function () {\n    /**\n     * Create a PageBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function PageBlob(client) {\n        this.client = client;\n    }\n    PageBlob.prototype.create = function (contentLength, blobContentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            blobContentLength: blobContentLength,\n            options: options\n        }, createOperationSpec, callback);\n    };\n    PageBlob.prototype.uploadPages = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, uploadPagesOperationSpec, callback);\n    };\n    PageBlob.prototype.clearPages = function (contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            options: options\n        }, clearPagesOperationSpec, callback);\n    };\n    PageBlob.prototype.getPageRanges = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPageRangesOperationSpec, callback);\n    };\n    PageBlob.prototype.getPageRangesDiff = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPageRangesDiffOperationSpec, callback);\n    };\n    PageBlob.prototype.resize = function (blobContentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            blobContentLength: blobContentLength,\n            options: options\n        }, resizeOperationSpec, callback);\n    };\n    PageBlob.prototype.updateSequenceNumber = function (sequenceNumberAction, options, callback) {\n        return this.client.sendOperationRequest({\n            sequenceNumberAction: sequenceNumberAction,\n            options: options\n        }, updateSequenceNumberOperationSpec, callback);\n    };\n    PageBlob.prototype.copyIncremental = function (copySource, options, callback) {\n        return this.client.sendOperationRequest({\n            copySource: copySource,\n            options: options\n        }, copyIncrementalOperationSpec, callback);\n    };\n    return PageBlob;\n}());\nexport { PageBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.blobContentLength,\n        Parameters.blobSequenceNumber,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType0,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar uploadPagesOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp10\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.pageWrite0,\n        Parameters.leaseId0,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobUploadPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar clearPagesOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp10\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.pageWrite1,\n        Parameters.leaseId0,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobClearPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPageRangesOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout,\n        Parameters.comp11\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPageRangesDiffOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout,\n        Parameters.prevsnapshot,\n        Parameters.comp11\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar resizeOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.blobContentLength,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobResizeHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar updateSequenceNumberOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.sequenceNumberAction,\n        Parameters.blobSequenceNumber,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar copyIncrementalOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp12\n    ],\n    headerParameters: [\n        Parameters.copySource,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=pageBlob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/appendBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a AppendBlob. */\nvar AppendBlob = /** @class */ (function () {\n    /**\n     * Create a AppendBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function AppendBlob(client) {\n        this.client = client;\n    }\n    AppendBlob.prototype.create = function (contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            options: options\n        }, createOperationSpec, callback);\n    };\n    AppendBlob.prototype.appendBlock = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, appendBlockOperationSpec, callback);\n    };\n    return AppendBlob;\n}());\nexport { AppendBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType1,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar appendBlockOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp13\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.maxSize,\n        Parameters.appendPosition,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobAppendBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=appendBlob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/blockBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a BlockBlob. */\nvar BlockBlob = /** @class */ (function () {\n    /**\n     * Create a BlockBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function BlockBlob(client) {\n        this.client = client;\n    }\n    BlockBlob.prototype.upload = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, uploadOperationSpec, callback);\n    };\n    BlockBlob.prototype.stageBlock = function (blockId, contentLength, body, options, callback) {\n        return this.client.sendOperationRequest({\n            blockId: blockId,\n            contentLength: contentLength,\n            body: body,\n            options: options\n        }, stageBlockOperationSpec, callback);\n    };\n    BlockBlob.prototype.stageBlockFromURL = function (blockId, contentLength, sourceUrl, options, callback) {\n        return this.client.sendOperationRequest({\n            blockId: blockId,\n            contentLength: contentLength,\n            sourceUrl: sourceUrl,\n            options: options\n        }, stageBlockFromURLOperationSpec, callback);\n    };\n    BlockBlob.prototype.commitBlockList = function (blocks, options, callback) {\n        return this.client.sendOperationRequest({\n            blocks: blocks,\n            options: options\n        }, commitBlockListOperationSpec, callback);\n    };\n    BlockBlob.prototype.getBlockList = function (listType, options, callback) {\n        return this.client.sendOperationRequest({\n            listType: listType,\n            options: options\n        }, getBlockListOperationSpec, callback);\n    };\n    return BlockBlob;\n}());\nexport { BlockBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar uploadOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType2,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobUploadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar stageBlockOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.blockId,\n        Parameters.timeout,\n        Parameters.comp14\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar stageBlockFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.blockId,\n        Parameters.timeout,\n        Parameters.comp14\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.sourceUrl,\n        Parameters.sourceRange,\n        Parameters.sourceContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar commitBlockListOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp15\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"blocks\",\n        mapper: tslib_1.__assign({}, Mappers.BlockLookupList, { required: true })\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getBlockListOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.listType,\n        Parameters.timeout,\n        Parameters.comp15\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlockList,\n            headersMapper: Mappers.BlockBlobGetBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=blockBlob.js.map","/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {IRange} iRange\n * @returns {string}\n */\nexport function rangeToString(iRange) {\n    if (iRange.offset < 0) {\n        throw new RangeError(\"IRange.offset cannot be smaller than 0.\");\n    }\n    if (iRange.count && iRange.count <= 0) {\n        throw new RangeError(\"IRange.count must be larger than 0. Leave it undefined if you want a range from offset to the end.\");\n    }\n    return iRange.count\n        ? \"bytes=\" + iRange.offset + \"-\" + (iRange.offset + iRange.count - 1)\n        : \"bytes=\" + iRange.offset + \"-\";\n}\n//# sourceMappingURL=IRange.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, isNode } from \"@azure/ms-rest-js\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n/**\n * BrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * BrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class BrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nvar BrowserPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserPolicy, _super);\n    /**\n     * Creates an instance of BrowserPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @memberof BrowserPolicy\n     */\n    function BrowserPolicy(nextPolicy, options) {\n        return _super.call(this, nextPolicy, options) || this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof BrowserPolicy\n     */\n    BrowserPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (isNode) {\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                }\n                if (request.method.toUpperCase() === \"GET\" ||\n                    request.method.toUpperCase() === \"HEAD\") {\n                    request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n                }\n                request.headers.remove(HeaderConstants.COOKIE);\n                // According to XHR standards, content-length should be fully controlled by browsers\n                request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return BrowserPolicy;\n}(BaseRequestPolicy));\nexport { BrowserPolicy };\n//# sourceMappingURL=BrowserPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, delay, HttpPipelineLogLevel } from \"@azure/ms-rest-js\";\nimport { URLConstants } from \"../utils/constants\";\nimport { setURLHost, setURLParameter } from \"../utils/utils.common\";\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {IRetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions) {\n    return {\n        create: function (nextPolicy, options) {\n            return new RetryPolicy(nextPolicy, options, retryOptions);\n        }\n    };\n}\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport var RetryPolicyType;\n(function (RetryPolicyType) {\n    /**\n     * Exponential retry. Retry time delay grows exponentially.\n     */\n    RetryPolicyType[RetryPolicyType[\"EXPONENTIAL\"] = 0] = \"EXPONENTIAL\";\n    /**\n     * Linear retry. Retry time delay grows linearly.\n     */\n    RetryPolicyType[RetryPolicyType[\"FIXED\"] = 1] = \"FIXED\";\n})(RetryPolicyType || (RetryPolicyType = {}));\n// Default values of IRetryOptions\nvar DEFAULT_RETRY_OPTIONS = {\n    maxRetryDelayInMs: 120 * 1000,\n    maxTries: 4,\n    retryDelayInMs: 4 * 1000,\n    retryPolicyType: RetryPolicyType.EXPONENTIAL,\n    secondaryHost: \"\",\n    tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nvar RetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(RetryPolicy, _super);\n    /**\n     * Creates an instance of RetryPolicy.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {IRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n     * @memberof RetryPolicy\n     */\n    function RetryPolicy(nextPolicy, options, retryOptions) {\n        if (retryOptions === void 0) { retryOptions = DEFAULT_RETRY_OPTIONS; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        // Initialize retry options\n        _this.retryOptions = {\n            retryPolicyType: retryOptions.retryPolicyType\n                ? retryOptions.retryPolicyType\n                : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n            maxTries: retryOptions.maxTries && retryOptions.maxTries >= 1\n                ? Math.floor(retryOptions.maxTries)\n                : DEFAULT_RETRY_OPTIONS.maxTries,\n            tryTimeoutInMs: retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n                ? retryOptions.tryTimeoutInMs\n                : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n            retryDelayInMs: retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n                ? Math.min(retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs\n                    ? retryOptions.maxRetryDelayInMs\n                    : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs)\n                : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n            maxRetryDelayInMs: retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n            secondaryHost: retryOptions.secondaryHost\n                ? retryOptions.secondaryHost\n                : DEFAULT_RETRY_OPTIONS.secondaryHost\n        };\n        return _this;\n    }\n    /**\n     * Sends request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.attemptSendRequest(request, false, 1)];\n            });\n        });\n    };\n    /**\n     * Decide and perform next retry. Won't mutate request parameter.\n     *\n     * @protected\n     * @param {WebResource} request\n     * @param {HttpOperationResponse} response\n     * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n     *                                   the resource was not found. This may be due to replication delay. So, in this\n     *                                   case, we'll never try the secondary again for this operation.\n     * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n     *                                   the attempt will be performed by this method call.\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.attemptSendRequest = function (request, secondaryHas404, attempt) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var newRequest, isPrimaryRetry, response, err_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        newRequest = request.clone();\n                        isPrimaryRetry = secondaryHas404 ||\n                            !this.retryOptions.secondaryHost ||\n                            !(request.method === \"GET\" ||\n                                request.method === \"HEAD\" ||\n                                request.method === \"OPTIONS\") ||\n                            attempt % 2 === 1;\n                        if (!isPrimaryRetry) {\n                            newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost);\n                        }\n                        // Set the server-side timeout query parameter \"timeout=[seconds]\"\n                        if (this.retryOptions.tryTimeoutInMs) {\n                            newRequest.url = setURLParameter(newRequest.url, URLConstants.Parameters.TIMEOUT, Math.floor(this.retryOptions.tryTimeoutInMs / 1000).toString());\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: =====> Try=\" + attempt + \" \" + (isPrimaryRetry ? \"Primary\" : \"Secondary\"));\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(newRequest)];\n                    case 2:\n                        response = _a.sent();\n                        if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n                            return [2 /*return*/, response];\n                        }\n                        secondaryHas404 =\n                            secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        this.logf(HttpPipelineLogLevel.ERROR, \"RetryPolicy: Caught error, message: \" + err_1.message + \", code: \" + err_1.code);\n                        if (!this.shouldRetry(isPrimaryRetry, attempt, response, err_1)) {\n                            throw err_1;\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, this.delay(isPrimaryRetry, attempt)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.attemptSendRequest(request, secondaryHas404, ++attempt)];\n                    case 6: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Decide whether to retry according to last HTTP response and retry counters.\n     *\n     * @protected\n     * @param {boolean} isPrimaryRetry\n     * @param {number} attempt\n     * @param {HttpOperationResponse} [response]\n     * @param {RestError} [err]\n     * @returns {boolean}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.shouldRetry = function (isPrimaryRetry, attempt, response, err) {\n        if (attempt >= this.retryOptions.maxTries) {\n            this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Attempt(s) \" + attempt + \" >= maxTries \" + this.retryOptions\n                .maxTries + \", no further try.\");\n            return false;\n        }\n        // Handle network failures, you may need to customize the list when you implement\n        // your own http client\n        var retriableErrors = [\n            \"ETIMEDOUT\",\n            \"ESOCKETTIMEDOUT\",\n            \"ECONNREFUSED\",\n            \"ECONNRESET\",\n            \"ENOENT\",\n            \"ENOTFOUND\",\n            \"TIMEOUT\",\n            \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n        ];\n        if (err) {\n            for (var _i = 0, retriableErrors_1 = retriableErrors; _i < retriableErrors_1.length; _i++) {\n                var retriableError = retriableErrors_1[_i];\n                if (err.name.toUpperCase().includes(retriableError) ||\n                    err.message.toUpperCase().includes(retriableError) ||\n                    (err.code && err.code.toUpperCase().includes(retriableError))) {\n                    this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Network error \" + retriableError + \" found, will retry.\");\n                    return true;\n                }\n            }\n        }\n        // If attempt was against the secondary & it returned a StatusNotFound (404), then\n        // the resource was not found. This may be due to replication delay. So, in this\n        // case, we'll never try the secondary again for this operation.\n        if (response || err) {\n            var statusCode = response ? response.status : err ? err.statusCode : 0;\n            if (!isPrimaryRetry && statusCode === 404) {\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Secondary access with 404, will retry.\");\n                return true;\n            }\n            // Server internal error or server timeout\n            if (statusCode === 503 || statusCode === 500) {\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Will retry for status code \" + statusCode + \".\");\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * This is to log for debugging purposes only.\n     * Comment/uncomment as necessary for releasing/debugging.\n     *\n     * @private\n     * @param {HttpPipelineLogLevel} level\n     * @param {string} message\n     * @memberof RetryPolicy\n     */\n    // tslint:disable-next-line:variable-name\n    RetryPolicy.prototype.logf = function (_level, _message) {\n        // this.log(_level, _message);\n    };\n    /**\n     * Delay a calculated time between retries.\n     *\n     * @private\n     * @param {boolean} isPrimaryRetry\n     * @param {number} attempt\n     * @returns\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.delay = function (isPrimaryRetry, attempt) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var delayTimeInMs;\n            return tslib_1.__generator(this, function (_a) {\n                delayTimeInMs = 0;\n                if (isPrimaryRetry) {\n                    switch (this.retryOptions.retryPolicyType) {\n                        case RetryPolicyType.EXPONENTIAL:\n                            delayTimeInMs = Math.min((Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs, this.retryOptions.maxRetryDelayInMs);\n                            break;\n                        case RetryPolicyType.FIXED:\n                            delayTimeInMs = this.retryOptions.retryDelayInMs;\n                            break;\n                    }\n                }\n                else {\n                    delayTimeInMs = Math.random() * 1000;\n                }\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Delay for \" + delayTimeInMs + \"ms\");\n                return [2 /*return*/, delay(delayTimeInMs)];\n            });\n        });\n    };\n    return RetryPolicy;\n}(BaseRequestPolicy));\nexport { RetryPolicy };\n//# sourceMappingURL=RetryPolicy.js.map","import { BrowserPolicy } from \"./policies/BrowserPolicy\";\n/**\n * BrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n *\n * @export\n * @class BrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar BrowserPolicyFactory = /** @class */ (function () {\n    function BrowserPolicyFactory() {\n    }\n    BrowserPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new BrowserPolicy(nextPolicy, options);\n    };\n    return BrowserPolicyFactory;\n}());\nexport { BrowserPolicyFactory };\n//# sourceMappingURL=BrowserPolicyFactory.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nvar packageName = \"azure-storage-blob\";\nvar packageVersion = \"1.0.0\";\nvar StorageClientContext = /** @class */ (function (_super) {\n    tslib_1.__extends(StorageClientContext, _super);\n    /**\n     * Initializes a new instance of the StorageClientContext class.\n     * @param url The URL of the service account, container, or blob that is the targe of the desired\n     * operation.\n     * @param [options] The parameter options\n     */\n    function StorageClientContext(url, options) {\n        var _this = this;\n        if (url === null || url === undefined) {\n            throw new Error('\\'url\\' cannot be null.');\n        }\n        if (!options) {\n            options = {};\n        }\n        if (!options.userAgent) {\n            var defaultUserAgent = msRest.getDefaultUserAgentValue();\n            options.userAgent = packageName + \"/\" + packageVersion + \" \" + defaultUserAgent;\n        }\n        _this = _super.call(this, undefined, options) || this;\n        _this.version = '2018-03-28';\n        _this.baseUri = \"{url}\";\n        _this.requestContentType = \"application/json; charset=utf-8\";\n        _this.url = url;\n        return _this;\n    }\n    return StorageClientContext;\n}(msRest.ServiceClient));\nexport { StorageClientContext };\n//# sourceMappingURL=storageClientContext.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, HttpPipelineLogLevel } from \"@azure/ms-rest-js\";\nimport { HTTPURLConnection, URLConstants } from \"../utils/constants\";\nimport { getURLParameter, setURLParameter } from \"../utils/utils.common\";\n// Default values of IRetryOptions\nvar DEFAULT_REQUEST_LOG_OPTIONS = {\n    logWarningIfTryOverThreshold: 3000\n};\n/**\n * LoggingPolicy is a policy used to log requests.\n *\n * @class LoggingPolicy\n * @extends {BaseRequestPolicy}\n */\nvar LoggingPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(LoggingPolicy, _super);\n    /**\n     * Creates an instance of LoggingPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {IRequestLogOptions} [loggingOptions=DEFAULT_REQUEST_LOG_OPTIONS]\n     * @memberof LoggingPolicy\n     */\n    function LoggingPolicy(nextPolicy, options, loggingOptions) {\n        if (loggingOptions === void 0) { loggingOptions = DEFAULT_REQUEST_LOG_OPTIONS; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.tryCount = 0;\n        _this.operationStartTime = new Date();\n        _this.requestStartTime = new Date();\n        _this.loggingOptions = loggingOptions;\n        return _this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof LoggingPolicy\n     */\n    LoggingPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var safeURL, response, requestEndTime, requestCompletionTime, operationDuration, currentLevel, logMessage, errorString, messageInfo, err_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.tryCount++;\n                        this.requestStartTime = new Date();\n                        if (this.tryCount === 1) {\n                            this.operationStartTime = this.requestStartTime;\n                        }\n                        safeURL = request.url;\n                        if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n                            safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n                        }\n                        this.log(HttpPipelineLogLevel.INFO, \"'\" + safeURL + \"'==> OUTGOING REQUEST (Try number=\" + this.tryCount + \").\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(request)];\n                    case 2:\n                        response = _a.sent();\n                        requestEndTime = new Date();\n                        requestCompletionTime = requestEndTime.getTime() - this.requestStartTime.getTime();\n                        operationDuration = requestEndTime.getTime() - this.operationStartTime.getTime();\n                        currentLevel = HttpPipelineLogLevel.INFO;\n                        logMessage = \"\";\n                        if (this.shouldLog(HttpPipelineLogLevel.INFO)) {\n                            // Assume success and default to informational logging.\n                            logMessage = \"Successfully Received Response. \";\n                        }\n                        // If the response took too long, we'll upgrade to warning.\n                        if (requestCompletionTime >=\n                            this.loggingOptions.logWarningIfTryOverThreshold) {\n                            // Log a warning if the try duration exceeded the specified threshold.\n                            if (this.shouldLog(HttpPipelineLogLevel.WARNING)) {\n                                currentLevel = HttpPipelineLogLevel.WARNING;\n                                logMessage = \"SLOW OPERATION. Duration > \" + this.loggingOptions.logWarningIfTryOverThreshold + \" ms. \";\n                            }\n                        }\n                        if ((response.status >= 400 &&\n                            response.status <= 499 &&\n                            (response.status !== HTTPURLConnection.HTTP_NOT_FOUND &&\n                                response.status !== HTTPURLConnection.HTTP_CONFLICT &&\n                                response.status !== HTTPURLConnection.HTTP_PRECON_FAILED &&\n                                response.status !==\n                                    HTTPURLConnection.HTTP_RANGE_NOT_SATISFIABLE)) ||\n                            (response.status >= 500 && response.status <= 509)) {\n                            errorString = \"REQUEST ERROR: HTTP request failed with status code: \" + response.status + \". \";\n                            logMessage = errorString;\n                            currentLevel = HttpPipelineLogLevel.ERROR;\n                        }\n                        messageInfo = \"Request try:\" + this.tryCount + \", status:\" + response.status + \" request duration:\" + requestCompletionTime + \" ms, operation duration:\" + operationDuration + \" ms\\n\";\n                        this.log(currentLevel, logMessage + messageInfo);\n                        return [2 /*return*/, response];\n                    case 3:\n                        err_1 = _a.sent();\n                        this.log(HttpPipelineLogLevel.ERROR, \"Unexpected failure attempting to make request. Error message: \" + err_1.message);\n                        throw err_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return LoggingPolicy;\n}(BaseRequestPolicy));\nexport { LoggingPolicy };\n//# sourceMappingURL=LoggingPolicy.js.map","import { LoggingPolicy } from \"./policies/LoggingPolicy\";\n/**\n * LoggingPolicyFactory is a factory class helping generating LoggingPolicy objects.\n *\n * @export\n * @class LoggingPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar LoggingPolicyFactory = /** @class */ (function () {\n    function LoggingPolicyFactory(loggingOptions) {\n        this.loggingOptions = loggingOptions;\n    }\n    LoggingPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new LoggingPolicy(nextPolicy, options, this.loggingOptions);\n    };\n    return LoggingPolicyFactory;\n}());\nexport { LoggingPolicyFactory };\n//# sourceMappingURL=LoggingPolicyFactory.js.map","import { BaseRequestPolicy, HttpHeaders, HttpPipelineLogLevel, RequestPolicyOptions, WebResource } from \"@azure/ms-rest-js\";\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport { HttpHeaders, HttpPipelineLogLevel, WebResource, BaseRequestPolicy, RequestPolicyOptions };\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling StorageURL.newPipeline().\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n * Refer to StorageURL.newPipeline() and provided policies as reference before\n * implementing your customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nvar Pipeline = /** @class */ (function () {\n    /**\n     * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n     *\n     * @param {RequestPolicyFactory[]} factories\n     * @param {IPipelineOptions} [options={}]\n     * @memberof Pipeline\n     */\n    function Pipeline(factories, options) {\n        if (options === void 0) { options = {}; }\n        this.factories = factories;\n        this.options = options;\n    }\n    /**\n     * Transfer Pipeline object to ServiceClientOptions object which required by\n     * ServiceClient constructor.\n     *\n     * @returns {ServiceClientOptions}\n     * @memberof Pipeline\n     */\n    Pipeline.prototype.toServiceClientOptions = function () {\n        return {\n            httpClient: this.options.HTTPClient,\n            httpPipelineLogger: this.options.logger,\n            requestPolicyFactories: this.factories\n        };\n    };\n    return Pipeline;\n}());\nexport { Pipeline };\n//# sourceMappingURL=Pipeline.js.map","import { RetryPolicy } from \"./policies/RetryPolicy\";\n/**\n * RetryPolicyFactory is a factory class helping generating RetryPolicy objects.\n *\n * @export\n * @class RetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar RetryPolicyFactory = /** @class */ (function () {\n    /**\n     * Creates an instance of RetryPolicyFactory.\n     * @param {IRetryOptions} [retryOptions]\n     * @memberof RetryPolicyFactory\n     */\n    function RetryPolicyFactory(retryOptions) {\n        this.retryOptions = retryOptions;\n    }\n    RetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new RetryPolicy(nextPolicy, options, this.retryOptions);\n    };\n    return RetryPolicyFactory;\n}());\nexport { RetryPolicyFactory };\n//# sourceMappingURL=RetryPolicyFactory.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, HttpHeaders, isNode } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nvar TelemetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(TelemetryPolicy, _super);\n    /**\n     * Creates an instance of TelemetryPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {ITelemetryOptions} [telemetry]\n     * @memberof TelemetryPolicy\n     */\n    function TelemetryPolicy(nextPolicy, options, telemetry) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.telemetry = telemetry;\n        return _this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof TelemetryPolicy\n     */\n    TelemetryPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (isNode) {\n                    if (!request.headers) {\n                        request.headers = new HttpHeaders();\n                    }\n                    if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n                        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n                    }\n                }\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return TelemetryPolicy;\n}(BaseRequestPolicy));\nexport { TelemetryPolicy };\n//# sourceMappingURL=TelemetryPolicy.js.map","import { isNode } from \"@azure/ms-rest-js\";\nimport * as os from \"os\";\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n/**\n * TelemetryPolicyFactory is a factory class helping generating TelemetryPolicy objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar TelemetryPolicyFactory = /** @class */ (function () {\n    /**\n     * Creates an instance of TelemetryPolicyFactory.\n     * @param {ITelemetryOptions} [telemetry]\n     * @memberof TelemetryPolicyFactory\n     */\n    function TelemetryPolicyFactory(telemetry) {\n        var userAgentInfo = [];\n        if (isNode) {\n            if (telemetry) {\n                var telemetryString = telemetry.value;\n                if (telemetryString.length > 0 &&\n                    userAgentInfo.indexOf(telemetryString) === -1) {\n                    userAgentInfo.push(telemetryString);\n                }\n            }\n            // e.g. Azure-Storage/10.0.0\n            var libInfo = \"Azure-Storage/\" + SDK_VERSION;\n            if (userAgentInfo.indexOf(libInfo) === -1) {\n                userAgentInfo.push(libInfo);\n            }\n            // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n            var runtimeInfo = \"(NODE-VERSION \" + process.version + \"; \" + os.type() + \" \" + os.release() + \")\";\n            if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n                userAgentInfo.push(runtimeInfo);\n            }\n        }\n        this.telemetryString = userAgentInfo.join(\" \");\n    }\n    TelemetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n    };\n    return TelemetryPolicyFactory;\n}());\nexport { TelemetryPolicyFactory };\n//# sourceMappingURL=TelemetryPolicyFactory.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, generateUuid } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * UniqueRequestIDPolicy generates an UUID as x-ms-request-id header value.\n *\n * @class UniqueRequestIDPolicy\n * @extends {BaseRequestPolicy}\n */\nvar UniqueRequestIDPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(UniqueRequestIDPolicy, _super);\n    /**\n     * Creates an instance of UniqueRequestIDPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @memberof UniqueRequestIDPolicy\n     */\n    function UniqueRequestIDPolicy(nextPolicy, options) {\n        return _super.call(this, nextPolicy, options) || this;\n    }\n    /**\n     * Sends request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof UniqueRequestIDPolicy\n     */\n    UniqueRequestIDPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!request.headers.contains(HeaderConstants.X_MS_CLIENT_REQUEST_ID)) {\n                    request.headers.set(HeaderConstants.X_MS_CLIENT_REQUEST_ID, generateUuid());\n                }\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return UniqueRequestIDPolicy;\n}(BaseRequestPolicy));\nexport { UniqueRequestIDPolicy };\n//# sourceMappingURL=UniqueRequestIDPolicy.js.map","import { UniqueRequestIDPolicy } from \"./policies/UniqueRequestIDPolicy\";\n/**\n * UniqueRequestIDPolicyFactory is a factory class helping generating UniqueRequestIDPolicy objects.\n *\n * @export\n * @class UniqueRequestIDPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar UniqueRequestIDPolicyFactory = /** @class */ (function () {\n    function UniqueRequestIDPolicyFactory() {\n    }\n    UniqueRequestIDPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new UniqueRequestIDPolicy(nextPolicy, options);\n    };\n    return UniqueRequestIDPolicyFactory;\n}());\nexport { UniqueRequestIDPolicyFactory };\n//# sourceMappingURL=UniqueRequestIDPolicyFactory.js.map","import { deserializationPolicy } from \"@azure/ms-rest-js\";\nimport { BrowserPolicyFactory } from \"./BrowserPolicyFactory\";\nimport { StorageClientContext } from \"./generated/lib/storageClientContext\";\nimport { LoggingPolicyFactory } from \"./LoggingPolicyFactory\";\nimport { Pipeline } from \"./Pipeline\";\nimport { RetryPolicyFactory } from \"./RetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { UniqueRequestIDPolicyFactory } from \"./UniqueRequestIDPolicyFactory\";\nimport { escapeURLPath } from \"./utils/utils.common\";\nexport { deserializationPolicy };\n/**\n * A ServiceURL represents a based URL class for ServiceURL, ContainerURL and etc.\n *\n * @export\n * @class StorageURL\n */\nvar StorageURL = /** @class */ (function () {\n    /**\n     * Creates an instance of StorageURL.\n     * @param {string} url\n     * @param {Pipeline} pipeline\n     * @memberof StorageURL\n     */\n    function StorageURL(url, pipeline) {\n        // URL should be encoded and only once, protocol layer shouldn't encode URL again\n        this.url = escapeURLPath(url);\n        this.pipeline = pipeline;\n        this.storageClientContext = new StorageClientContext(this.url, pipeline.toServiceClientOptions());\n        // Override protocol layer's default content-type\n        var storageClientContext = this.storageClientContext;\n        storageClientContext.requestContentType = undefined;\n    }\n    /**\n     * A static method used to create a new Pipeline object with Credential provided.\n     *\n     * @static\n     * @param {Credential} credential Such as AnonymousCredential, SharedKeyCredential or TokenCredential.\n     * @param {INewPipelineOptions} [pipelineOptions] Optional. Options.\n     * @returns {Pipeline} A new Pipeline object.\n     * @memberof Pipeline\n     */\n    StorageURL.newPipeline = function (credential, pipelineOptions) {\n        if (pipelineOptions === void 0) { pipelineOptions = {}; }\n        // Order is important. Closer to the API at the top & closer to the network at the bottom.\n        // The credential's policy factory must appear close to the wire so it can sign any\n        // changes made by other factories (like UniqueRequestIDPolicyFactory)\n        var factories = [\n            new TelemetryPolicyFactory(pipelineOptions.telemetry),\n            new UniqueRequestIDPolicyFactory(),\n            new BrowserPolicyFactory(),\n            deserializationPolicy(),\n            new RetryPolicyFactory(pipelineOptions.retryOptions),\n            new LoggingPolicyFactory(),\n            credential\n        ];\n        return new Pipeline(factories, {\n            HTTPClient: pipelineOptions.httpClient,\n            logger: pipelineOptions.logger\n        });\n    };\n    return StorageURL;\n}());\nexport { StorageURL };\n//# sourceMappingURL=StorageURL.js.map","import * as tslib_1 from \"tslib\";\nimport { isNode } from \"@azure/ms-rest-js\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { Blob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { StorageURL } from \"./StorageURL\";\nimport { DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS, URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * A BlobURL represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n *\n * @export\n * @class BlobURL\n * @extends {StorageURL}\n */\nvar BlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(BlobURL, _super);\n    /**\n     * Creates an instance of BlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n     *                     You can append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof BlobURL\n     */\n    function BlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.blobContext = new Blob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a BlobURL object from an ContainerURL object.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A blob name\n     * @returns\n     * @memberof BlobURL\n     */\n    BlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new BlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a new BlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {BlobURL}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.withPipeline = function (pipeline) {\n        return new BlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new BlobURL object identical to the source but with the specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {BlobURL} A new BlobURL object identical to the source but with the specified snapshot timestamp\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.withSnapshot = function (snapshot) {\n        return new BlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Reads or downloads a blob from the system, including its metadata and properties.\n     * You can also call Get Blob to read a snapshot.\n     *\n     * * In Node.js, data returns in a Readable stream readableStreamBody\n     * * In browsers, data returns in a promise blobBody\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset From which position of the blob to download, >= 0\n     * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n     * @param {IBlobDownloadOptions} [options]\n     * @returns {Promise<Models.BlobDownloadResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.download = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        options.blobAccessConditions = options.blobAccessConditions || {};\n                        options.blobAccessConditions.modifiedAccessConditions =\n                            options.blobAccessConditions.modifiedAccessConditions || {};\n                        return [4 /*yield*/, this.blobContext.download({\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                                modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                                onDownloadProgress: isNode ? undefined : options.progress,\n                                range: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count }),\n                                rangeGetContentMD5: options.rangeGetContentMD5,\n                                snapshot: options.snapshot\n                            })];\n                    case 1:\n                        res = _a.sent();\n                        // Return browser response immediately\n                        if (!isNode) {\n                            return [2 /*return*/, res];\n                        }\n                        // We support retrying when download stream unexpected ends in Node.js runtime\n                        // Following code shouldn't be bundled into browser build, however some\n                        // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n                        // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n                        // The config is in package.json \"browser\" field\n                        if (options.maxRetryRequests === undefined ||\n                            options.maxRetryRequests < 0) {\n                            // TODO: Default value or make it a required parameter?\n                            options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n                        }\n                        if (res.contentLength === undefined) {\n                            throw new RangeError(\"File download response doesn't contain valid content length header\");\n                        }\n                        if (!res.eTag) {\n                            throw new RangeError(\"File download response doesn't contain valid etag header\");\n                        }\n                        return [2 /*return*/, new BlobDownloadResponse(aborter, res, function (start) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                var updatedOptions;\n                                return tslib_1.__generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            updatedOptions = {\n                                                leaseAccessConditions: options.blobAccessConditions\n                                                    .leaseAccessConditions,\n                                                modifiedAccessConditions: {\n                                                    ifMatch: options.blobAccessConditions.modifiedAccessConditions.ifMatch ||\n                                                        res.eTag,\n                                                    ifModifiedSince: options.blobAccessConditions\n                                                        .modifiedAccessConditions.ifModifiedSince,\n                                                    ifNoneMatch: options.blobAccessConditions.modifiedAccessConditions\n                                                        .ifNoneMatch,\n                                                    ifUnmodifiedSince: options.blobAccessConditions\n                                                        .modifiedAccessConditions.ifUnmodifiedSince\n                                                },\n                                                range: rangeToString({\n                                                    count: offset + res.contentLength - start,\n                                                    offset: start\n                                                }),\n                                                snapshot: options.snapshot\n                                            };\n                                            return [4 /*yield*/, this.blobContext.download(tslib_1.__assign({ abortSignal: aborter }, updatedOptions))];\n                                        case 1: \n                                        // Debug purpose only\n                                        // console.log(\n                                        //   `Read from internal stream, range: ${\n                                        //     updatedOptions.range\n                                        //   }, options: ${JSON.stringify(updatedOptions)}`\n                                        // );\n                                        return [2 /*return*/, (_a.sent()).readableStreamBody];\n                                    }\n                                });\n                            }); }, offset, res.contentLength, {\n                                maxRetryRequests: options.maxRetryRequests,\n                                progress: options.progress\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns all user-defined metadata, standard HTTP properties, and system properties\n     * for the blob. It does not return the content of the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobGetPropertiesOptions} [options]\n     * @returns {Promise<Models.BlobGetPropertiesResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.getProperties = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.getProperties({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Marks the specified blob or snapshot for deletion. The blob is later deleted\n     * during garbage collection. Note that in order to delete a blob, you must delete\n     * all of its snapshots. You can delete both at the same time with the Delete\n     * Blob operation.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobDeleteOptions} [options]\n     * @returns {Promise<Models.BlobDeleteResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.delete = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.deleteMethod({\n                        abortSignal: aborter,\n                        deleteSnapshots: options.deleteSnapshots,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Restores the contents and metadata of soft deleted blob and any associated\n     * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n     * or later.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.BlobUndeleteResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.undelete = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.undelete({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets system properties on the blob.\n     *\n     * If no value provided, or no value provided for the specificed blob HTTP headers,\n     * these blob HTTP headers without a value will be cleared.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n     *                                                   the specificed blob HTTP headers, these blob HTTP\n     *                                                   headers without a value will be cleared.\n     * @param {IBlobSetHTTPHeadersOptions} [options]\n     * @returns {Promise<Models.BlobSetHTTPHeadersResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setHTTPHeaders = function (aborter, blobHTTPHeaders, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.setHTTPHeaders({\n                        abortSignal: aborter,\n                        blobHTTPHeaders: blobHTTPHeaders,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n     *\n     * If no option provided, or no metadata defined in the parameter, the blob\n     * metadata will be removed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IMetadata} [metadata] Replace existing metadata with this value.\n     *                               If no value provided the existing metadata will be removed.\n     * @param {IBlobSetMetadataOptions} [options]\n     * @returns {Promise<Models.BlobSetMetadataResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setMetadata = function (aborter, metadata, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.setMetadata({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Establishes and manages a lock on a blob for write and delete operations.\n     * The lock duration can be 15 to 60 seconds, or can be infinite.\n     * In versions prior to 2012-02-12, the lock duration is 60 seconds.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n     * @param {number} duration The lock duration can be 15 to 60 seconds, or can be infinite\n     * @param {IBlobAcquireLeaseOptions} [options]\n     * @returns {Promise<Models.BlobAcquireLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.acquireLease({\n                        abortSignal: aborter,\n                        duration: duration,\n                        modifiedAccessConditions: options.modifiedAccessConditions,\n                        proposedLeaseId: proposedLeaseId\n                    })];\n            });\n        });\n    };\n    /**\n     * To free the lease if it is no longer needed so that another client may immediately\n     * acquire a lease against the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IBlobReleaseLeaseOptions} [options]\n     * @returns {Promise<Models.BlobReleaseLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.releaseLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.releaseLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To renew an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IBlobRenewLeaseOptions} [options]\n     * @returns {Promise<Models.BlobRenewLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.renewLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.renewLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To change the ID of an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {string} proposedLeaseId\n     * @param {IBlobChangeLeaseOptions} [options]\n     * @returns {Promise<Models.BlobChangeLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.changeLease(leaseId, proposedLeaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To end the lease but ensure that another client cannot acquire a new lease\n     * until the current lease period has expired.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} [breakPeriod]\n     * @param {IBlobBreakLeaseOptions} [options]\n     * @returns {Promise<Models.BlobBreakLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.breakLease = function (aborter, breakPeriod, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.breakLease({\n                        abortSignal: aborter,\n                        breakPeriod: breakPeriod,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a read-only snapshot of a blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobCreateSnapshotOptions} [options]\n     * @returns {Promise<Models.BlobCreateSnapshotResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.createSnapshot = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.createSnapshot({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Copies a blob to a destination within the storage account.\n     * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n     * a committed blob in any Azure storage account.\n     * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n     * an Azure file in any Azure storage account.\n     * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n     * operation to copy from another storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copySource\n     * @param {IBlobStartCopyFromURLOptions} [options]\n     * @returns {Promise<Models.BlobStartCopyFromURLResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.startCopyFromURL = function (aborter, copySource, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                options.sourceModifiedAccessConditions =\n                    options.sourceModifiedAccessConditions || {};\n                return [2 /*return*/, this.blobContext.startCopyFromURL(copySource, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                        sourceModifiedAccessConditions: {\n                            sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                            sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                            sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                            sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Aborts a pending Copy Blob operation, and leaves a destination blob with zero\n     * length and full metadata. Version 2012-02-12 and newer.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copyId\n     * @param {IBlobAbortCopyFromURLOptions} [options]\n     * @returns {Promise<Models.BlobAbortCopyFromURLResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.abortCopyFromURL = function (aborter, copyId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.abortCopyFromURL(copyId, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n     * storage account and on a block blob in a blob storage account (locally redundant\n     * storage only). A premium page blob's tier determines the allowed size, IOPS,\n     * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n     * storage type. This operation does not update the blob's ETag.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.AccessTier} tier\n     * @param {IBlobSetTierOptions} [options]\n     * @returns {Promise<Models.BlobsSetTierResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setTier = function (aborter, tier, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blobContext.setTier(tier, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return BlobURL;\n}(StorageURL));\nexport { BlobURL };\n//# sourceMappingURL=BlobURL.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { AppendBlob } from \"./generated/lib/operations\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * AppendBlobURL defines a set of operations applicable to append blobs.\n *\n * @export\n * @class AppendBlobURL\n * @extends {StorageURL}\n */\nvar AppendBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(AppendBlobURL, _super);\n    /**\n     * Creates an instance of AppendBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage append blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof AppendBlobURL\n     */\n    function AppendBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.appendBlobContext = new AppendBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a AppendBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName An append blob name\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new AppendBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a AppendBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.fromBlobURL = function (blobURL) {\n        return new AppendBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new AppendBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.withPipeline = function (pipeline) {\n        return new AppendBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new AppendBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new AppendBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IAppendBlobCreateOptions} [options]\n     * @returns {Promise<Models.AppendBlobsCreateResponse>}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.create = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.appendBlobContext.create(0, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Commits a new block of data to the end of the existing append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IAppendBlobAppendBlockOptions} [options]\n     * @returns {Promise<Models.AppendBlobsAppendBlockResponse>}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.appendBlock = function (aborter, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.appendBlobContext.appendBlock(body, contentLength, {\n                        abortSignal: aborter,\n                        appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    return AppendBlobURL;\n}(BlobURL));\nexport { AppendBlobURL };\n//# sourceMappingURL=AppendBlobURL.js.map","/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a blob. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link ServiceSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class BlobSASPermissions\n */\nvar BlobSASPermissions = /** @class */ (function () {\n    function BlobSASPermissions() {\n        /**\n         * Specifies Read access granted.\n         *\n         * @type {boolean}\n         * @memberof BlobSASPermissions\n         */\n        this.read = false;\n        /**\n         * Specifies Add access granted.\n         *\n         * @type {boolean}\n         * @memberof BlobSASPermissions\n         */\n        this.add = false;\n        /**\n         * Specifies Create access granted.\n         *\n         * @type {boolean}\n         * @memberof BlobSASPermissions\n         */\n        this.create = false;\n        /**\n         * Specifies Write access granted.\n         *\n         * @type {boolean}\n         * @memberof BlobSASPermissions\n         */\n        this.write = false;\n        /**\n         * Specifies Delete access granted.\n         *\n         * @type {boolean}\n         * @memberof BlobSASPermissions\n         */\n        this.delete = false;\n    }\n    /**\n     * Creates a {@link BlobSASPermission} from the specified permissions string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid permission.\n     *\n     * @static\n     * @param {string} permissions\n     * @returns {BlobSASPermissions}\n     * @memberof BlobSASPermissions\n     */\n    BlobSASPermissions.parse = function (permissions) {\n        var blobSASPermissions = new BlobSASPermissions();\n        for (var _i = 0, permissions_1 = permissions; _i < permissions_1.length; _i++) {\n            var char = permissions_1[_i];\n            switch (char) {\n                case \"r\":\n                    blobSASPermissions.read = true;\n                    break;\n                case \"a\":\n                    blobSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    blobSASPermissions.create = true;\n                    break;\n                case \"w\":\n                    blobSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    blobSASPermissions.delete = true;\n                    break;\n                default:\n                    throw new RangeError(\"Invalid permission: \" + char);\n            }\n        }\n        return blobSASPermissions;\n    };\n    /**\n     * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n     * order accepted by the service.\n     *\n     * @returns {string} A string which represents the BlobSASPermissions\n     * @memberof BlobSASPermissions\n     */\n    BlobSASPermissions.prototype.toString = function () {\n        var permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        return permissions.join(\"\");\n    };\n    return BlobSASPermissions;\n}());\nexport { BlobSASPermissions };\n//# sourceMappingURL=BlobSASPermissions.js.map","/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a container.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link ServiceSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n *\n * @export\n * @class ContainerSASPermissions\n */\nvar ContainerSASPermissions = /** @class */ (function () {\n    function ContainerSASPermissions() {\n        /**\n         * Specifies Read access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.read = false;\n        /**\n         * Specifies Add access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.add = false;\n        /**\n         * Specifies Create access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.create = false;\n        /**\n         * Specifies Write access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.write = false;\n        /**\n         * Specifies Delete access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.delete = false;\n        /**\n         * Specifies List access granted.\n         *\n         * @type {boolean}\n         * @memberof ContainerSASPermissions\n         */\n        this.list = false;\n    }\n    /**\n     * Creates an {@link ContainerSASPermissions} from the specified permissions string. This method will throw an\n     * Error if it encounters a character that does not correspond to a valid permission.\n     *\n     * @static\n     * @param {string} permissions\n     * @returns\n     * @memberof ContainerSASPermissions\n     */\n    ContainerSASPermissions.parse = function (permissions) {\n        var containerSASPermissions = new ContainerSASPermissions();\n        for (var _i = 0, permissions_1 = permissions; _i < permissions_1.length; _i++) {\n            var char = permissions_1[_i];\n            switch (char) {\n                case \"r\":\n                    containerSASPermissions.read = true;\n                    break;\n                case \"a\":\n                    containerSASPermissions.add = true;\n                    break;\n                case \"c\":\n                    containerSASPermissions.create = true;\n                    break;\n                case \"w\":\n                    containerSASPermissions.write = true;\n                    break;\n                case \"d\":\n                    containerSASPermissions.delete = true;\n                    break;\n                case \"l\":\n                    containerSASPermissions.list = true;\n                    break;\n                default:\n                    throw new RangeError(\"Invalid permission \" + char);\n            }\n        }\n        return containerSASPermissions;\n    };\n    /**\n     * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n     * order accepted by the service.\n     *\n     * The order of the characters should be as specified here to ensure correctness.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n     *\n     * @returns {string}\n     * @memberof ContainerSASPermissions\n     */\n    ContainerSASPermissions.prototype.toString = function () {\n        var permissions = [];\n        if (this.read) {\n            permissions.push(\"r\");\n        }\n        if (this.add) {\n            permissions.push(\"a\");\n        }\n        if (this.create) {\n            permissions.push(\"c\");\n        }\n        if (this.write) {\n            permissions.push(\"w\");\n        }\n        if (this.delete) {\n            permissions.push(\"d\");\n        }\n        if (this.list) {\n            permissions.push(\"l\");\n        }\n        return permissions.join(\"\");\n    };\n    return ContainerSASPermissions;\n}());\nexport { ContainerSASPermissions };\n//# sourceMappingURL=ContainerSASPermissions.js.map","import { BlobSASPermissions } from \"./BlobSASPermissions\";\nimport { ContainerSASPermissions } from \"./ContainerSASPermissions\";\nimport { ipRangeToString } from \"./IIPRange\";\nimport { SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startTime and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiryTime are required.\n * You MUST assign value to identifier or expiryTime & permissions manually if you initial with\n * this constructor.\n *\n * @export\n * @param {IBlobSASSignatureValues} blobSASSignatureValues\n * @param {SharedKeyCredential} sharedKeyCredential\n * @returns {SASQueryParameters}\n */\nexport function generateBlobSASQueryParameters(blobSASSignatureValues, sharedKeyCredential) {\n    if (!blobSASSignatureValues.identifier &&\n        (!blobSASSignatureValues.permissions && !blobSASSignatureValues.expiryTime)) {\n        throw new RangeError(\"Must provide 'permissions' and 'expiryTime' for Blob SAS generation when 'identifier' is not provided.\");\n    }\n    var version = blobSASSignatureValues.version\n        ? blobSASSignatureValues.version\n        : SERVICE_VERSION;\n    var resource = \"c\";\n    var verifiedPermissions;\n    // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n    if (blobSASSignatureValues.permissions) {\n        if (blobSASSignatureValues.blobName) {\n            verifiedPermissions = BlobSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n            resource = \"b\";\n        }\n        else {\n            verifiedPermissions = ContainerSASPermissions.parse(blobSASSignatureValues.permissions).toString();\n        }\n    }\n    // Signature is generated on the un-url-encoded values.\n    var stringToSign = [\n        verifiedPermissions ? verifiedPermissions : \"\",\n        blobSASSignatureValues.startTime\n            ? truncatedISO8061Date(blobSASSignatureValues.startTime, false)\n            : \"\",\n        blobSASSignatureValues.expiryTime\n            ? truncatedISO8061Date(blobSASSignatureValues.expiryTime, false)\n            : \"\",\n        getCanonicalName(sharedKeyCredential.accountName, blobSASSignatureValues.containerName, blobSASSignatureValues.blobName),\n        blobSASSignatureValues.identifier,\n        blobSASSignatureValues.ipRange\n            ? ipRangeToString(blobSASSignatureValues.ipRange)\n            : \"\",\n        blobSASSignatureValues.protocol ? blobSASSignatureValues.protocol : \"\",\n        version,\n        blobSASSignatureValues.cacheControl\n            ? blobSASSignatureValues.cacheControl\n            : \"\",\n        blobSASSignatureValues.contentDisposition\n            ? blobSASSignatureValues.contentDisposition\n            : \"\",\n        blobSASSignatureValues.contentEncoding\n            ? blobSASSignatureValues.contentEncoding\n            : \"\",\n        blobSASSignatureValues.contentLanguage\n            ? blobSASSignatureValues.contentLanguage\n            : \"\",\n        blobSASSignatureValues.contentType ? blobSASSignatureValues.contentType : \"\"\n    ].join(\"\\n\");\n    var signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n    return new SASQueryParameters(version, signature, verifiedPermissions, undefined, undefined, blobSASSignatureValues.protocol, blobSASSignatureValues.startTime, blobSASSignatureValues.expiryTime, blobSASSignatureValues.ipRange, blobSASSignatureValues.identifier, resource, blobSASSignatureValues.cacheControl, blobSASSignatureValues.contentDisposition, blobSASSignatureValues.contentEncoding, blobSASSignatureValues.contentLanguage, blobSASSignatureValues.contentType);\n}\nfunction getCanonicalName(accountName, containerName, blobName) {\n    // Container: \"/blob/account/containerName\"\n    // Blob:      \"/blob/account/containerName/blobName\"\n    var elements = [\"/blob/\" + accountName + \"/\" + containerName];\n    if (blobName) {\n        elements.push(\"/\" + blobName);\n    }\n    return elements.join(\"\");\n}\n//# sourceMappingURL=IBlobSASSignatureValues.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { BlockBlob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * BlockBlobURL defines a set of operations applicable to block blobs.\n *\n * @export\n * @class BlockBlobURL\n * @extends {StorageURL}\n */\nvar BlockBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(BlockBlobURL, _super);\n    /**\n     * Creates an instance of BlockBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage block blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof BlockBlobURL\n     */\n    function BlockBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.blockBlobContext = new BlockBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a BlockBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A block blob name\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new BlockBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a BlockBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.fromBlobURL = function (blobURL) {\n        return new BlockBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new BlockBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.withPipeline = function (pipeline) {\n        return new BlockBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new BlockBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new BlockBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a new block blob, or updates the content of an existing block blob.\n     * Updating an existing block blob overwrites any existing metadata on the blob.\n     * Partial updates are not supported; the content of the existing blob is\n     * overwritten with the new content. To perform a partial update of a block blob's,\n     * use stageBlock and commitBlockList.\n     *\n     * This is a non-parallel uploading method, please use uploadFileToBlockBlob(),\n     * uploadStreamToBlockBlob() or uploadBrowserDataToBlockBlob() for better performance\n     * with concurrency uploading.\n     *\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IBlockBlobUploadOptions} [options]\n     * @returns {Promise<Models.BlockBlobUploadResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.upload = function (aborter, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.blockBlobContext.upload(body, contentLength, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress\n                    })];\n            });\n        });\n    };\n    /**\n     * Uploads the specified block to the block blob's \"staging area\" to be later\n     * committed by a call to commitBlockList.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} blockId A 64-byte value that is base64-encoded\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IBlockBlobStageBlockOptions} [options]\n     * @returns {Promise<Models.BlockBlobStageBlockResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.stageBlock = function (aborter, blockId, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions,\n                        onUploadProgress: options.progress,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    /**\n     * The Stage Block From URL operation creates a new block to be committed as part\n     * of a blob where the contents are read from a URL.\n     * This API is available starting in version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} blockId A 64-byte value that is base64-encoded\n     * @param {string} sourceURL Specifies the URL of the blob. The value\n     *                           may be a URL of up to 2 KB in length that specifies a blob.\n     *                           The value should be URL-encoded as it would appear\n     *                           in a request URI. The source blob must either be public\n     *                           or must be authenticated via a shared access signature.\n     *                           If the source blob is public, no authentication is required\n     *                           to perform the operation. Here are some examples of source object URLs:\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param {number} offset From which position of the blob to download, >= 0\n     * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n     * @param {IBlockBlobStageBlockFromURLOptions} [options={}]\n     * @returns {Promise<Models.BlockBlobStageBlockFromURLResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.stageBlockFromURL = function (aborter, blockId, sourceURL, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions,\n                        sourceContentMD5: options.sourceContentMD5,\n                        sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Writes a blob by specifying the list of block IDs that make up the blob.\n     * In order to be written as part of a blob, a block must have been successfully written\n     * to the server in a prior stageBlock operation. You can call commitBlockList to update a blob\n     * by uploading only those blocks that have changed, then committing the new and existing\n     * blocks together. Any blocks not specified in the block list and permanently deleted.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n     * @param {IBlockBlobCommitBlockListOptions} [options]\n     * @returns {Promise<Models.BlockBlobCommitBlockListResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.commitBlockList = function (aborter, blocks, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.blockBlobContext.commitBlockList({ latest: blocks }, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns the list of blocks that have been uploaded as part of a block blob\n     * using the specified block list filter.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.BlockListType} listType\n     * @param {IBlockBlobGetBlockListOptions} [options]\n     * @returns {Promise<Models.BlockBlobGetBlockListResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.getBlockList = function (aborter, listType, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blockBlobContext.getBlockList(listType, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        if (!res.committedBlocks) {\n                            res.committedBlocks = [];\n                        }\n                        if (!res.uncommittedBlocks) {\n                            res.uncommittedBlocks = [];\n                        }\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    return BlockBlobURL;\n}(BlobURL));\nexport { BlockBlobURL };\n//# sourceMappingURL=BlockBlobURL.js.map","import * as tslib_1 from \"tslib\";\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nvar BatchStates;\n(function (BatchStates) {\n    BatchStates[BatchStates[\"Good\"] = 0] = \"Good\";\n    BatchStates[BatchStates[\"Error\"] = 1] = \"Error\";\n})(BatchStates || (BatchStates = {}));\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nvar Batch = /** @class */ (function () {\n    /**\n     * Creates an instance of Batch.\n     * @param {number} [concurrency=5]\n     * @memberof Batch\n     */\n    function Batch(concurrency) {\n        if (concurrency === void 0) { concurrency = 5; }\n        /**\n         * Number of active operations under execution.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.actives = 0;\n        /**\n         * Number of completed operations under execution.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.completed = 0;\n        /**\n         * Offset of next operation to be executed.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.offset = 0;\n        /**\n         * Operation array to be executed.\n         *\n         * @private\n         * @type {Operation[]}\n         * @memberof Batch\n         */\n        this.operations = [];\n        /**\n         * States of Batch. When an error happens, state will turn into error.\n         * Batch will stop execute left operations.\n         *\n         * @private\n         * @type {BatchStates}\n         * @memberof Batch\n         */\n        this.state = BatchStates.Good;\n        if (concurrency < 1) {\n            throw new RangeError(\"concurrency must be larger than 0\");\n        }\n        this.concurrency = concurrency;\n        this.emitter = new EventEmitter();\n    }\n    /**\n     * Add a operation into queue.\n     *\n     * @param {Operation} operation\n     * @memberof Batch\n     */\n    Batch.prototype.addOperation = function (operation) {\n        var _this = this;\n        this.operations.push(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var error_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.actives++;\n                        return [4 /*yield*/, operation()];\n                    case 1:\n                        _a.sent();\n                        this.actives--;\n                        this.completed++;\n                        this.parallelExecute();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        this.emitter.emit(\"error\", error_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Start execute operations in the queue.\n     *\n     * @returns {Promise<void>}\n     * @memberof Batch\n     */\n    Batch.prototype.do = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                this.parallelExecute();\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.emitter.on(\"finish\", resolve);\n                        _this.emitter.on(\"error\", function (error) {\n                            _this.state = BatchStates.Error;\n                            reject(error);\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Get next operation to be executed. Return null when reaching ends.\n     *\n     * @private\n     * @returns {(Operation | null)}\n     * @memberof Batch\n     */\n    Batch.prototype.nextOperation = function () {\n        if (this.offset < this.operations.length) {\n            return this.operations[this.offset++];\n        }\n        return null;\n    };\n    /**\n     * Start execute operations. One one the most important difference between\n     * this method with do() is that do() wraps as an sync method.\n     *\n     * @private\n     * @returns {void}\n     * @memberof Batch\n     */\n    Batch.prototype.parallelExecute = function () {\n        if (this.state === BatchStates.Error) {\n            return;\n        }\n        if (this.completed >= this.operations.length) {\n            this.emitter.emit(\"finish\");\n            return;\n        }\n        while (this.actives < this.concurrency) {\n            var operation = this.nextOperation();\n            if (operation) {\n                operation();\n            }\n            else {\n                return;\n            }\n        }\n    };\n    return Batch;\n}());\nexport { Batch };\n//# sourceMappingURL=Batch.js.map","import * as tslib_1 from \"tslib\";\nimport { Container } from \"./generated/lib/operations\";\nimport { StorageURL } from \"./StorageURL\";\nimport { ETagNone } from \"./utils/constants\";\nimport { appendToURLPath, truncatedISO8061Date } from \"./utils/utils.common\";\n/**\n * A ContainerURL represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n *\n * @export\n * @class ContainerURL\n * @extends {StorageURL}\n */\nvar ContainerURL = /** @class */ (function (_super) {\n    tslib_1.__extends(ContainerURL, _super);\n    /**\n     * Creates an instance of ContainerURL.\n     * @param {string} url A URL string pointing to Azure Storage blob container, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof ContainerURL\n     */\n    function ContainerURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.containerContext = new Container(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a ContainerURL object from ServiceURL\n     *\n     * @param serviceURL A ServiceURL object\n     * @param containerName A container name\n     */\n    ContainerURL.fromServiceURL = function (serviceURL, containerName) {\n        return new ContainerURL(appendToURLPath(serviceURL.url, encodeURIComponent(containerName)), serviceURL.pipeline);\n    };\n    /**\n     * Creates a new ContainerURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {ContainerURL}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.withPipeline = function (pipeline) {\n        return new ContainerURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new container under the specified account. If the container with\n     * the same name already exists, the operation fails.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainerCreateOptions} [options]\n     * @returns {Promise<Models.ContainerCreateResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.create = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                // Spread operator in destructuring assignments,\n                // this will filter out unwanted properties from the response object into result object\n                return [2 /*return*/, this.containerContext.create(tslib_1.__assign({}, options, { abortSignal: aborter }))];\n            });\n        });\n    };\n    /**\n     * Returns all user-defined metadata and system properties for the specified\n     * container. The data returned does not include the container's list of blobs.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainersGetPropertiesOptions} [options]\n     * @returns {Promise<Models.ContainerGetPropertiesResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.getProperties = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.leaseAccessConditions) {\n                    options.leaseAccessConditions = {};\n                }\n                return [2 /*return*/, this.containerContext.getProperties(tslib_1.__assign({ abortSignal: aborter }, options.leaseAccessConditions))];\n            });\n        });\n    };\n    /**\n     * Marks the specified container for deletion. The container and any blobs\n     * contained within it are later deleted during garbage collection.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.ContainersDeleteMethodOptionalParams} [options]\n     * @returns {Promise<Models.ContainerDeleteResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.delete = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.containerAccessConditions) {\n                    options.containerAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.modifiedAccessConditions) {\n                    options.containerAccessConditions.modifiedAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.leaseAccessConditions) {\n                    options.containerAccessConditions.leaseAccessConditions = {};\n                }\n                if ((options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                    options.containerAccessConditions.modifiedAccessConditions.ifMatch !==\n                        ETagNone) ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions\n                            .ifNoneMatch !== ETagNone)) {\n                    throw new RangeError(\"the IfMatch and IfNoneMatch access conditions must have their default\\\r\n        values because they are ignored by the service\");\n                }\n                return [2 /*return*/, this.containerContext.deleteMethod({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets one or more user-defined name-value pairs for the specified container.\n     *\n     * If no option provided, or no metadata defined in the parameter, the container\n     * metadata will be removed.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IMetadata} [metadata] Replace existing metadata with this value.\n     *                               If no value provided the existing metadata will be removed.\n     * @param {IContainerSetMetadataOptions} [options]\n     * @returns {Promise<Models.ContainerSetMetadataResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.setMetadata = function (aborter, metadata, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.containerAccessConditions) {\n                    options.containerAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.modifiedAccessConditions) {\n                    options.containerAccessConditions.modifiedAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.leaseAccessConditions) {\n                    options.containerAccessConditions.leaseAccessConditions = {};\n                }\n                if (options.containerAccessConditions.modifiedAccessConditions\n                    .ifUnmodifiedSince ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions.ifMatch !==\n                            ETagNone) ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions\n                            .ifNoneMatch !== ETagNone)) {\n                    throw new RangeError(\"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\r\n        because they are ignored by the blob service\");\n                }\n                return [2 /*return*/, this.containerContext.setMetadata({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        metadata: metadata,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the permissions for the specified container. The permissions indicate\n     * whether container data may be accessed publicly.\n     *\n     * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n     * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainerGetAccessPolicyOptions} [options]\n     * @returns {Promise<ContainerGetAccessPolicyResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.getAccessPolicy = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var response, res, _i, response_1, identifier;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!options.leaseAccessConditions) {\n                            options.leaseAccessConditions = {};\n                        }\n                        return [4 /*yield*/, this.containerContext.getAccessPolicy({\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.leaseAccessConditions\n                            })];\n                    case 1:\n                        response = _a.sent();\n                        res = {\n                            _response: response._response,\n                            blobPublicAccess: response.blobPublicAccess,\n                            date: response.date,\n                            eTag: response.eTag,\n                            errorCode: response.errorCode,\n                            lastModified: response.lastModified,\n                            requestId: response.requestId,\n                            signedIdentifiers: [],\n                            version: response.version\n                        };\n                        for (_i = 0, response_1 = response; _i < response_1.length; _i++) {\n                            identifier = response_1[_i];\n                            res.signedIdentifiers.push({\n                                accessPolicy: {\n                                    expiry: new Date(identifier.accessPolicy.expiry),\n                                    permission: identifier.accessPolicy.permission,\n                                    start: new Date(identifier.accessPolicy.start)\n                                },\n                                id: identifier.id\n                            });\n                        }\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    /**\n     * Sets the permissions for the specified container. The permissions indicate\n     * whether blobs in a container may be accessed publicly.\n     *\n     * When you set permissions for a container, the existing permissions are replaced.\n     * If no access or containerAcl provided, the existing container ACL will be\n     * removed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {PublicAccessType} [access]\n     * @param {ISignedIdentifier[]} [containerAcl]\n     * @param {IContainerSetAccessPolicyOptions} [options]\n     * @returns {Promise<Models.ContainerSetAccessPolicyResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.setAccessPolicy = function (aborter, access, containerAcl, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var acl, _i, _a, identifier;\n            return tslib_1.__generator(this, function (_b) {\n                options.containerAccessConditions = options.containerAccessConditions || {};\n                acl = [];\n                for (_i = 0, _a = containerAcl || []; _i < _a.length; _i++) {\n                    identifier = _a[_i];\n                    acl.push({\n                        accessPolicy: {\n                            expiry: truncatedISO8061Date(identifier.accessPolicy.expiry),\n                            permission: identifier.accessPolicy.permission,\n                            start: truncatedISO8061Date(identifier.accessPolicy.start)\n                        },\n                        id: identifier.id\n                    });\n                }\n                return [2 /*return*/, this.containerContext.setAccessPolicy({\n                        abortSignal: aborter,\n                        access: access,\n                        containerAcl: acl,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Establishes and manages a lock on a container for delete operations.\n     * The lock duration can be 15 to 60 seconds, or can be infinite.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n     * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n     * @param {IContainerAcquireLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerAcquireLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.acquireLease({\n                        abortSignal: aborter,\n                        duration: duration,\n                        modifiedAccessConditions: options.modifiedAccessConditions,\n                        proposedLeaseId: proposedLeaseId\n                    })];\n            });\n        });\n    };\n    /**\n     * To free the lease if it is no longer needed so that another client may\n     * immediately acquire a lease against the container.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IContainerReleaseLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerReleaseLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.releaseLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.releaseLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To renew an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IContainerRenewLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerRenewLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.renewLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.renewLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To end the lease but ensure that another client cannot acquire a new lease\n     * until the current lease period has expired.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} period break period\n     * @param {IContainerBreakLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerBreakLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.breakLease = function (aborter, period, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.breakLease({\n                        abortSignal: aborter,\n                        breakPeriod: period,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To change the ID of an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {string} proposedLeaseId\n     * @param {IContainerChangeLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerChangeLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.changeLease(leaseId, proposedLeaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * listBlobFlatSegment returns a single segment of blobs starting from the\n     * specified Marker. Use an empty Marker to start enumeration from the beginning.\n     * After getting a segment, process it, and then call ListBlobsFlatSegment again\n     * (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} [marker]\n     * @param {IContainerListBlobsSegmentOptions} [options]\n     * @returns {Promise<Models.ContainerListBlobFlatSegmentResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.listBlobFlatSegment = function (aborter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.listBlobFlatSegment(tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    /**\n     * listBlobHierarchySegment returns a single segment of blobs starting from\n     * the specified Marker. Use an empty Marker to start enumeration from the\n     * beginning. After getting a segment, process it, and then call ListBlobsHierarchicalSegment\n     * again (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} delimiter\n     * @param {IContainerListBlobsSegmentOptions} [options]\n     * @returns {Promise<Models.ContainerListBlobHierarchySegmentResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.listBlobHierarchySegment = function (aborter, delimiter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.listBlobHierarchySegment(delimiter, tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    return ContainerURL;\n}(StorageURL));\nexport { ContainerURL };\n//# sourceMappingURL=ContainerURL.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy } from \"@azure/ms-rest-js\";\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nvar CredentialPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(CredentialPolicy, _super);\n    function CredentialPolicy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof CredentialPolicy\n     */\n    CredentialPolicy.prototype.sendRequest = function (request) {\n        return this._nextPolicy.sendRequest(this.signRequest(request));\n    };\n    /**\n     * Child classes must implement this method with request signing. This method\n     * will be executed in sendRequest().\n     *\n     * @protected\n     * @abstract\n     * @param {WebResource} request\n     * @returns {WebResource}\n     * @memberof CredentialPolicy\n     */\n    CredentialPolicy.prototype.signRequest = function (request) {\n        // Child classes must override this method with request signing. This method\n        // will be executed in sendRequest().\n        return request;\n    };\n    return CredentialPolicy;\n}(BaseRequestPolicy));\nexport { CredentialPolicy };\n//# sourceMappingURL=CredentialPolicy.js.map","/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nvar Credential = /** @class */ (function () {\n    function Credential() {\n    }\n    /**\n     * Creates a RequestPolicy object.\n     *\n     * @param {RequestPolicy} _nextPolicy\n     * @param {RequestPolicyOptions} _options\n     * @returns {RequestPolicy}\n     * @memberof Credential\n     */\n    Credential.prototype.create = function (\n    // tslint:disable-next-line:variable-name\n    _nextPolicy, \n    // tslint:disable-next-line:variable-name\n    _options) {\n        throw new Error(\"Method should be implemented in children classes.\");\n    };\n    return Credential;\n}());\nexport { Credential };\n//# sourceMappingURL=Credential.js.map","import * as tslib_1 from \"tslib\";\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nvar AnonymousCredential = /** @class */ (function (_super) {\n    tslib_1.__extends(AnonymousCredential, _super);\n    function AnonymousCredential() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates an AnonymousCredentialPolicy object.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @returns {AnonymousCredentialPolicy}\n     * @memberof AnonymousCredential\n     */\n    AnonymousCredential.prototype.create = function (nextPolicy, options) {\n        return new AnonymousCredentialPolicy(nextPolicy, options);\n    };\n    return AnonymousCredential;\n}(Credential));\nexport { AnonymousCredential };\n//# sourceMappingURL=AnonymousCredential.js.map","import * as tslib_1 from \"tslib\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n/**\n * SharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n *\n * @export\n * @class SharedKeyCredentialPolicy\n * @extends {CredentialPolicy}\n */\nvar SharedKeyCredentialPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(SharedKeyCredentialPolicy, _super);\n    /**\n     * Creates an instance of SharedKeyCredentialPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {SharedKeyCredential} factory\n     * @memberof SharedKeyCredentialPolicy\n     */\n    function SharedKeyCredentialPolicy(nextPolicy, options, factory) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    /**\n     * Signs request.\n     *\n     * @protected\n     * @param {WebResource} request\n     * @returns {WebResource}\n     * @memberof SharedKeyCredentialPolicy\n     */\n    SharedKeyCredentialPolicy.prototype.signRequest = function (request) {\n        request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n        if (request.body &&\n            typeof request.body === \"string\" &&\n            request.body.length > 0) {\n            request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n        }\n        var stringToSign = [\n            request.method.toUpperCase(),\n            this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n            this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n            this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n            this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n            this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n            this.getHeaderValueToSign(request, HeaderConstants.DATE),\n            this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n            this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n            this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n            this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n            this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n        ].join(\"\\n\") +\n            \"\\n\" +\n            this.getCanonicalizedHeadersString(request) +\n            this.getCanonicalizedResourceString(request);\n        var signature = this.factory.computeHMACSHA256(stringToSign);\n        request.headers.set(HeaderConstants.AUTHORIZATION, \"SharedKey \" + this.factory.accountName + \":\" + signature);\n        // console.log(`[URL]:${request.url}`);\n        // console.log(`[HEADERS]:${request.headers.toString()}`);\n        // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n        // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n        return request;\n    };\n    /**\n     * Retrieve header value according to shared key sign rules.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n     *\n     * @private\n     * @param {WebResource} request\n     * @param {string} headerName\n     * @returns {string}\n     * @memberof SharedKeyCredentialPolicy\n     */\n    SharedKeyCredentialPolicy.prototype.getHeaderValueToSign = function (request, headerName) {\n        var value = request.headers.get(headerName);\n        if (!value) {\n            return \"\";\n        }\n        // When using version 2015-02-21 or later, if Content-Length is zero, then\n        // set the Content-Length part of the StringToSign to an empty string.\n        // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n        if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n            return \"\";\n        }\n        return value;\n    };\n    /**\n     * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n     * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n     * 2. Convert each HTTP header name to lowercase.\n     * 3. Sort the headers lexicographically by header name, in ascending order.\n     *    Each header may appear only once in the string.\n     * 4. Replace any linear whitespace in the header value with a single space.\n     * 5. Trim any whitespace around the colon in the header.\n     * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n     *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n     *\n     * @private\n     * @param {WebResource} request\n     * @returns {string}\n     * @memberof SharedKeyCredentialPolicy\n     */\n    SharedKeyCredentialPolicy.prototype.getCanonicalizedHeadersString = function (request) {\n        var headersArray = request.headers.headersArray().filter(function (value) {\n            return value.name\n                .toLowerCase()\n                .startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n        });\n        headersArray.sort(function (a, b) {\n            return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n        });\n        // Remove duplicate headers\n        headersArray = headersArray.filter(function (value, index, array) {\n            if (index > 0 &&\n                value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n                return false;\n            }\n            return true;\n        });\n        var canonicalizedHeadersStringToSign = \"\";\n        headersArray.forEach(function (header) {\n            canonicalizedHeadersStringToSign += header.name\n                .toLowerCase()\n                .trimRight() + \":\" + header.value.trimLeft() + \"\\n\";\n        });\n        return canonicalizedHeadersStringToSign;\n    };\n    /**\n     * Retrieves the webResource canonicalized resource string.\n     *\n     * @private\n     * @param {WebResource} request\n     * @returns {string}\n     * @memberof SharedKeyCredentialPolicy\n     */\n    SharedKeyCredentialPolicy.prototype.getCanonicalizedResourceString = function (request) {\n        var path = getURLPath(request.url) || \"/\";\n        var canonicalizedResourceString = \"\";\n        canonicalizedResourceString += \"/\" + this.factory.accountName + path;\n        var queries = getURLQueries(request.url);\n        var lowercaseQueries = {};\n        if (queries) {\n            var queryKeys = [];\n            for (var key in queries) {\n                if (queries.hasOwnProperty(key)) {\n                    var lowercaseKey = key.toLowerCase();\n                    lowercaseQueries[lowercaseKey] = queries[key];\n                    queryKeys.push(lowercaseKey);\n                }\n            }\n            queryKeys.sort();\n            for (var _i = 0, queryKeys_1 = queryKeys; _i < queryKeys_1.length; _i++) {\n                var key = queryKeys_1[_i];\n                canonicalizedResourceString += \"\\n\" + key + \":\" + decodeURIComponent(lowercaseQueries[key]);\n            }\n        }\n        return canonicalizedResourceString;\n    };\n    return SharedKeyCredentialPolicy;\n}(CredentialPolicy));\nexport { SharedKeyCredentialPolicy };\n//# sourceMappingURL=SharedKeyCredentialPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport * as Crypto from \"crypto\";\nimport { SharedKeyCredentialPolicy } from \"../policies/SharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * SharedKeyCredential for account key authorization of Azure Storage service.\n *\n * @export\n * @class SharedKeyCredential\n * @extends {Credential}\n */\nvar SharedKeyCredential = /** @class */ (function (_super) {\n    tslib_1.__extends(SharedKeyCredential, _super);\n    /**\n     * Creates an instance of SharedKeyCredential.\n     * @param {string} accountName\n     * @param {string} accountKey\n     * @memberof SharedKeyCredential\n     */\n    function SharedKeyCredential(accountName, accountKey) {\n        var _this = _super.call(this) || this;\n        _this.accountName = accountName;\n        _this.accountKey = Buffer.from(accountKey, \"base64\");\n        return _this;\n    }\n    /**\n     * Creates a SharedKeyCredentialPolicy object.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @returns {SharedKeyCredentialPolicy}\n     * @memberof SharedKeyCredential\n     */\n    SharedKeyCredential.prototype.create = function (nextPolicy, options) {\n        return new SharedKeyCredentialPolicy(nextPolicy, options, this);\n    };\n    /**\n     * Generates a hash signature for an HTTP request or for a SAS.\n     *\n     * @param {string} stringToSign\n     * @returns {string}\n     * @memberof SharedKeyCredential\n     */\n    SharedKeyCredential.prototype.computeHMACSHA256 = function (stringToSign) {\n        return Crypto.createHmac(\"sha256\", this.accountKey)\n            .update(stringToSign, \"utf8\")\n            .digest(\"base64\");\n    };\n    return SharedKeyCredential;\n}(Credential));\nexport { SharedKeyCredential };\n//# sourceMappingURL=SharedKeyCredential.js.map","import * as tslib_1 from \"tslib\";\nimport { HttpHeaders } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n/**\n * TokenCredentialPolicy is a policy used to sign HTTP request with a token.\n * Such as an OAuth bearer token.\n *\n * @export\n * @class TokenCredentialPolicy\n * @extends {CredentialPolicy}\n */\nvar TokenCredentialPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenCredentialPolicy, _super);\n    /**\n     * Creates an instance of TokenCredentialPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {TokenCredential} tokenCredential\n     * @memberof TokenCredentialPolicy\n     */\n    function TokenCredentialPolicy(nextPolicy, options, tokenCredential) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.tokenCredential = tokenCredential;\n        _this.authorizationScheme = HeaderConstants.AUTHORIZATION_SCHEME;\n        return _this;\n    }\n    /**\n     * Sign request with token.\n     *\n     * @protected\n     * @param {WebResource} request\n     * @returns {WebResource}\n     * @memberof TokenCredentialPolicy\n     */\n    TokenCredentialPolicy.prototype.signRequest = function (request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        request.headers.set(HeaderConstants.AUTHORIZATION, this.authorizationScheme + \" \" + this.tokenCredential.token);\n        return request;\n    };\n    return TokenCredentialPolicy;\n}(CredentialPolicy));\nexport { TokenCredentialPolicy };\n//# sourceMappingURL=TokenCredentialPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport { Credential } from \"../credentials/Credential\";\nimport { TokenCredentialPolicy } from \"../policies/TokenCredentialPolicy\";\n/**\n * TokenCredential is a Credential used to generate a TokenCredentialPolicy.\n * Renew token by setting a new token string value to token property.\n *\n * @example\n *  const tokenCredential = new TokenCredential(\"token\");\n *  const pipeline = StorageURL.newPipeline(tokenCredential);\n *\n *  // List containers\n *  const serviceURL = new ServiceURL(\"https://mystorageaccount.blob.core.windows.net\", pipeline);\n *\n *  // Set up a timer to refresh the token\n *  const timerID = setInterval(() => {\n *    // Update token by accessing to public tokenCredential.token\n *    tokenCredential.token = \"updatedToken\";\n *    // WARNING: Timer must be manually stopped! It will forbid GC of tokenCredential\n *    if (shouldStop()) {\n *      clearInterval(timerID);\n *    }\n *  }, 60 * 60 * 1000); // Set an interval time before your token expired\n * @export\n * @class TokenCredential\n * @extends {Credential}\n *\n */\nvar TokenCredential = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenCredential, _super);\n    /**\n     * Creates an instance of TokenCredential.\n     * @param {string} token\n     * @memberof TokenCredential\n     */\n    function TokenCredential(token) {\n        var _this = _super.call(this) || this;\n        _this.token = token;\n        return _this;\n    }\n    /**\n     * Creates a TokenCredentialPolicy object.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @returns {TokenCredentialPolicy}\n     * @memberof TokenCredential\n     */\n    TokenCredential.prototype.create = function (nextPolicy, options) {\n        return new TokenCredentialPolicy(nextPolicy, options, this);\n    };\n    return TokenCredential;\n}(Credential));\nexport { TokenCredential };\n//# sourceMappingURL=TokenCredential.js.map","import * as tslib_1 from \"tslib\";\nimport { generateUuid } from \"@azure/ms-rest-js\";\nimport { Batch } from \"./utils/Batch\";\nimport { BLOCK_BLOB_MAX_BLOCKS, BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES, BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES, DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES } from \"./utils/constants\";\nimport { generateBlockID } from \"./utils/utils.common\";\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nexport function uploadBrowserDataToBlockBlob(aborter, browserData, blockBlobURL, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var browserBlob;\n        return tslib_1.__generator(this, function (_a) {\n            browserBlob = new Blob([browserData]);\n            return [2 /*return*/, UploadSeekableBlobToBlockBlob(aborter, function (offset, size) {\n                    return browserBlob.slice(offset, offset + size);\n                }, browserBlob.size, blockBlobURL, options)];\n        });\n    });\n}\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob object to block blob. Requires a blobFactory as the data source,\n * which need to return a Blob object with the offset and size provided.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {(offset: number, size: number) => Blob} blobFactory\n * @param {number} size\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nfunction UploadSeekableBlobToBlockBlob(aborter, blobFactory, size, blockBlobURL, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var numBlocks, blockList, blockIDPrefix, transferProgress, batch, _loop_1, i;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!options.blockSize) {\n                        options.blockSize = 0;\n                    }\n                    if (options.blockSize < 0 ||\n                        options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n                        throw new RangeError(\"blockSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES);\n                    }\n                    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n                        options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n                    }\n                    if (options.maxSingleShotSize < 0 ||\n                        options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n                        throw new RangeError(\"maxSingleShotSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES);\n                    }\n                    if (options.blockSize === 0) {\n                        if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n                            throw new RangeError(size + \" is too larger to upload to a block blob.\");\n                        }\n                        if (size > options.maxSingleShotSize) {\n                            options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n                            if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n                                options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                            }\n                        }\n                    }\n                    if (!options.blobHTTPHeaders) {\n                        options.blobHTTPHeaders = {};\n                    }\n                    if (!options.blobAccessConditions) {\n                        options.blobAccessConditions = {};\n                    }\n                    if (size <= options.maxSingleShotSize) {\n                        return [2 /*return*/, blockBlobURL.upload(aborter, blobFactory(0, size), size, options)];\n                    }\n                    numBlocks = Math.floor((size - 1) / options.blockSize) + 1;\n                    if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n                        throw new RangeError(\"The buffer's size is too big or the BlockSize is too small;\" +\n                            (\"the number of blocks must be <= \" + BLOCK_BLOB_MAX_BLOCKS));\n                    }\n                    blockList = [];\n                    blockIDPrefix = generateUuid();\n                    transferProgress = 0;\n                    batch = new Batch(options.parallelism);\n                    _loop_1 = function (i) {\n                        batch.addOperation(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var blockID, start, end, contentLength;\n                            return tslib_1.__generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        blockID = generateBlockID(blockIDPrefix, i);\n                                        start = options.blockSize * i;\n                                        end = i === numBlocks - 1 ? size : start + options.blockSize;\n                                        contentLength = end - start;\n                                        blockList.push(blockID);\n                                        return [4 /*yield*/, blockBlobURL.stageBlock(aborter, blockID, blobFactory(start, contentLength), contentLength, {\n                                                leaseAccessConditions: options.blobAccessConditions\n                                                    .leaseAccessConditions\n                                            })];\n                                    case 1:\n                                        _a.sent();\n                                        // Update progress after block is successfully uploaded to server, in case of block trying\n                                        // TODO: Hook with convenience layer progress event in finer level\n                                        transferProgress += contentLength;\n                                        if (options.progress) {\n                                            options.progress({\n                                                loadedBytes: transferProgress\n                                            });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                    };\n                    for (i = 0; i < numBlocks; i++) {\n                        _loop_1(i);\n                    }\n                    return [4 /*yield*/, batch.do()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, blockBlobURL.commitBlockList(aborter, blockList, options)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=highlevel.browser.js.map","import * as tslib_1 from \"tslib\";\nimport { EventEmitter } from \"events\";\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS <= maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Parallelism should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n * @export\n * @class BufferScheduler\n */\nvar BufferScheduler = /** @class */ (function () {\n    /**\n     * Creates an instance of BufferScheduler.\n     *\n     * @param {Readable} readable A Node.js Readable stream\n     * @param {number} bufferSize Buffer size of every maintained buffer\n     * @param {number} maxBuffers How many buffers can be allocated\n     * @param {OutgoingHandler} outgoingHandler An async function scheduled to be\n     *                                          triggered when a buffer fully filled\n     *                                          with stream data\n     * @param {number} parallelism Concurrency of executing outgoingHandlers (>0)\n     * @param {string} [encoding] [Optional] Encoding of Readable stream when it's a string stream\n     * @memberof BufferScheduler\n     */\n    function BufferScheduler(readable, bufferSize, maxBuffers, outgoingHandler, parallelism, encoding) {\n        /**\n         * An internal event emitter.\n         *\n         * @private\n         * @type {EventEmitter}\n         * @memberof BufferScheduler\n         */\n        this.emitter = new EventEmitter();\n        /**\n         * An internal offset marker to track data offset in bytes of next outgoingHandler.\n         *\n         * @private\n         * @type {number}\n         * @memberof BufferScheduler\n         */\n        this.offset = 0;\n        /**\n         * An internal marker to track whether stream is end.\n         *\n         * @private\n         * @type {boolean}\n         * @memberof BufferScheduler\n         */\n        this.isStreamEnd = false;\n        /**\n         * An internal marker to track whether stream or outgoingHandler returns error.\n         *\n         * @private\n         * @type {boolean}\n         * @memberof BufferScheduler\n         */\n        this.isError = false;\n        /**\n         * How many handlers are executing.\n         *\n         * @private\n         * @type {number}\n         * @memberof BufferScheduler\n         */\n        this.executingOutgoingHandlers = 0;\n        /**\n         * How many buffers have been allocated.\n         *\n         * @private\n         * @type {number}\n         * @memberof BufferScheduler\n         */\n        this.numBuffers = 0;\n        /**\n         * Because this class doesn't know how much data every time stream pops, which\n         * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n         * data received from the stream, when data in unresolvedDataArray exceeds the\n         * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n         * buffers from incoming and push to outgoing array.\n         *\n         * @private\n         * @type {Buffer[]}\n         * @memberof BufferScheduler\n         */\n        this.unresolvedDataArray = [];\n        /**\n         * How much data consisted in unresolvedDataArray.\n         *\n         * @private\n         * @type {number}\n         * @memberof BufferScheduler\n         */\n        this.unresolvedLength = 0;\n        /**\n         * The array includes all the available buffers can be used to fill data from stream.\n         *\n         * @private\n         * @type {Buffer[]}\n         * @memberof BufferScheduler\n         */\n        this.incoming = [];\n        /**\n         * The array (queue) includes all the buffers filled from stream data.\n         *\n         * @private\n         * @type {Buffer[]}\n         * @memberof BufferScheduler\n         */\n        this.outgoing = [];\n        if (bufferSize <= 0) {\n            throw new RangeError(\"bufferSize must be larger than 0, current is \" + bufferSize);\n        }\n        if (maxBuffers <= 0) {\n            throw new RangeError(\"maxBuffers must be larger than 0, current is \" + maxBuffers);\n        }\n        if (parallelism <= 0) {\n            throw new RangeError(\"parallelism must be larger than 0, current is \" + parallelism);\n        }\n        this.bufferSize = bufferSize;\n        this.maxBuffers = maxBuffers;\n        this.readable = readable;\n        this.outgoingHandler = outgoingHandler;\n        this.parallelism = parallelism;\n        this.encoding = encoding;\n    }\n    /**\n     * Start the scheduler, will return error when stream of any of the outgoingHandlers\n     * returns error.\n     *\n     * @returns {Promise<void>}\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.do = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.readable.on(\"data\", function (data) {\n                            data =\n                                typeof data === \"string\" ? Buffer.from(data, _this.encoding) : data;\n                            _this.appendUnresolvedData(data);\n                            if (!_this.resolveData()) {\n                                _this.readable.pause();\n                            }\n                        });\n                        _this.readable.on(\"error\", function (err) {\n                            _this.emitter.emit(\"error\", err);\n                        });\n                        _this.readable.on(\"end\", function () {\n                            _this.isStreamEnd = true;\n                            _this.emitter.emit(\"checkEnd\");\n                        });\n                        _this.emitter.on(\"error\", function (err) {\n                            _this.isError = true;\n                            _this.readable.pause();\n                            reject(err);\n                        });\n                        _this.emitter.on(\"checkEnd\", function () {\n                            if (_this.outgoing.length > 0) {\n                                _this.triggerOutgoingHandlers();\n                                return;\n                            }\n                            if (_this.isStreamEnd && _this.executingOutgoingHandlers === 0) {\n                                if (_this.unresolvedLength > 0 &&\n                                    _this.unresolvedLength < _this.bufferSize) {\n                                    _this.outgoingHandler(_this.shiftBufferFromUnresolvedDataArray(), _this.offset)\n                                        .then(resolve)\n                                        .catch(reject);\n                                }\n                                else if (_this.unresolvedLength >= _this.bufferSize) {\n                                    return;\n                                }\n                                else {\n                                    resolve();\n                                }\n                            }\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Insert a new data into unresolved array.\n     *\n     * @private\n     * @param {Buffer} data\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.appendUnresolvedData = function (data) {\n        this.unresolvedDataArray.push(data);\n        this.unresolvedLength += data.length;\n    };\n    /**\n     * Try to shift a buffer with size in blockSize. The buffer returned may be less\n     * than blockSize when data in unresolvedDataArray is less than bufferSize.\n     *\n     * @private\n     * @returns {Buffer}\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.shiftBufferFromUnresolvedDataArray = function () {\n        if (this.unresolvedLength >= this.bufferSize) {\n            if (this.bufferSize === this.unresolvedDataArray[0].length) {\n                this.unresolvedLength -= this.bufferSize;\n                return this.unresolvedDataArray.shift();\n            }\n            // Lazy concat because Buffer.concat highly drops performance\n            var merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n            var buffer = merged.slice(0, this.bufferSize);\n            merged = merged.slice(this.bufferSize);\n            this.unresolvedDataArray = [merged];\n            this.unresolvedLength -= buffer.length;\n            return buffer;\n        }\n        else if (this.unresolvedLength > 0) {\n            var merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n            this.unresolvedDataArray = [];\n            this.unresolvedLength = 0;\n            return merged;\n        }\n        else {\n            return Buffer.allocUnsafe(0);\n        }\n    };\n    /**\n     * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n     * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n     * then push it into outgoing to be handled by outgoing handler.\n     *\n     * Return false when available buffers in incoming are not enough, else true.\n     *\n     * @private\n     * @returns {boolean} Return false when buffers in incoming are not enough, else true.\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.resolveData = function () {\n        while (this.unresolvedLength >= this.bufferSize) {\n            var buffer = void 0;\n            if (this.incoming.length > 0) {\n                buffer = this.incoming.shift();\n            }\n            else {\n                if (this.numBuffers < this.maxBuffers) {\n                    buffer = Buffer.allocUnsafe(this.bufferSize);\n                    this.numBuffers++;\n                }\n                else {\n                    // No available buffer, wait for buffer returned\n                    return false;\n                }\n            }\n            buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n            this.outgoing.push(buffer);\n            this.triggerOutgoingHandlers();\n        }\n        return true;\n    };\n    /**\n     * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n     * parallelism reaches.\n     *\n     * @private\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.triggerOutgoingHandlers = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var buffer;\n            return tslib_1.__generator(this, function (_a) {\n                do {\n                    if (this.executingOutgoingHandlers >= this.parallelism) {\n                        return [2 /*return*/];\n                    }\n                    buffer = this.outgoing.shift();\n                    if (buffer) {\n                        this.triggerOutgoingHandler(buffer);\n                    }\n                } while (buffer);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Trigger a outgoing handler for a buffer shifted from outgoing.\n     *\n     * @private\n     * @param {Buffer} buffer\n     * @returns {Promise<any>}\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.triggerOutgoingHandler = function (buffer) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var bufferLength, err_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        bufferLength = buffer.length;\n                        this.executingOutgoingHandlers++;\n                        this.offset += bufferLength;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.outgoingHandler(buffer, this.offset - bufferLength)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        this.emitter.emit(\"error\", err_1);\n                        return [2 /*return*/];\n                    case 4:\n                        this.executingOutgoingHandlers--;\n                        this.reuseBuffer(buffer);\n                        this.emitter.emit(\"checkEnd\");\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Return buffer used by outgoing handler into incoming.\n     *\n     * @private\n     * @param {Buffer} buffer\n     * @memberof BufferScheduler\n     */\n    BufferScheduler.prototype.reuseBuffer = function (buffer) {\n        this.incoming.push(buffer);\n        if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n            this.readable.resume();\n        }\n    };\n    return BufferScheduler;\n}());\nexport { BufferScheduler };\n//# sourceMappingURL=BufferScheduler.js.map","import * as tslib_1 from \"tslib\";\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @export\n * @param {NodeJS.ReadableStream} stream A Node.js Readable stream\n * @param {Buffer} buffer Buffer to be filled, length must >= offset\n * @param {number} offset From which position in the buffer to be filled, inclusive\n * @param {number} end To which position in the buffer to be filled, exclusive\n * @param {string} [encoding] Encoding of the Readable stream\n * @returns {Promise<void>}\n */\nexport function streamToBuffer(stream, buffer, offset, end, encoding) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var pos, count;\n        return tslib_1.__generator(this, function (_a) {\n            pos = 0;\n            count = end - offset;\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n                    stream.on(\"readable\", function () {\n                        if (pos >= count) {\n                            resolve();\n                            return;\n                        }\n                        var chunk = stream.read();\n                        if (!chunk) {\n                            return;\n                        }\n                        if (typeof chunk === \"string\") {\n                            chunk = Buffer.from(chunk, encoding);\n                        }\n                        // How much data needed in this chunk\n                        var chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n                        buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n                        pos += chunkLength;\n                    });\n                    stream.on(\"end\", function () {\n                        if (pos < count) {\n                            reject(new Error(\"Stream drains before getting enough data needed. Data read: \" + pos + \", data need: \" + count));\n                        }\n                        resolve();\n                    });\n                    stream.on(\"error\", reject);\n                })];\n        });\n    });\n}\n//# sourceMappingURL=utils.node.js.map","import * as tslib_1 from \"tslib\";\nimport * as fs from \"fs\";\nimport { generateUuid } from \"@azure/ms-rest-js\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { BLOCK_BLOB_MAX_BLOCKS, BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES, BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES, DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES } from \"./utils/constants\";\nimport { generateBlockID } from \"./utils/utils.common\";\nimport { streamToBuffer } from \"./utils/utils.node\";\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Uploads a local file in blocks to a block blob.\n *\n * When file size <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {string} filePath Full path of local file\n * @param {BlockBlobURL} blockBlobURL BlockBlobURL\n * @param {IUploadToBlockBlobOptions} [options] IUploadToBlockBlobOptions\n * @returns {(Promise<BlobUploadCommonResponse>)} ICommonResponse\n */\nexport function uploadFileToBlockBlob(aborter, filePath, blockBlobURL, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var size;\n        return tslib_1.__generator(this, function (_a) {\n            size = fs.statSync(filePath).size;\n            return [2 /*return*/, uploadResetableStreamToBlockBlob(aborter, function (offset, count) {\n                    return fs.createReadStream(filePath, {\n                        autoClose: true,\n                        end: count ? offset + count - 1 : Infinity,\n                        start: offset\n                    });\n                }, size, blockBlobURL, options)];\n        });\n    });\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Accepts a Node.js Readable stream factory, and uploads in blocks to a block blob.\n * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n * is the offset in the block blob to be uploaded.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {(offset: number) => NodeJS.ReadableStream} streamFactory Returns a Node.js Readable stream starting\n *                                                                  from the offset defined\n * @param {number} size Size of the block blob\n * @param {BlockBlobURL} blockBlobURL BlockBlobURL\n * @param {IUploadToBlockBlobOptions} [options] IUploadToBlockBlobOptions\n * @returns {(Promise<BlobUploadCommonResponse>)} ICommonResponse\n */\nfunction uploadResetableStreamToBlockBlob(aborter, streamFactory, size, blockBlobURL, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var numBlocks, blockList, blockIDPrefix, transferProgress, batch, _loop_1, i;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!options.blockSize) {\n                        options.blockSize = 0;\n                    }\n                    if (options.blockSize < 0 ||\n                        options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n                        throw new RangeError(\"blockSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES);\n                    }\n                    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n                        options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n                    }\n                    if (options.maxSingleShotSize < 0 ||\n                        options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n                        throw new RangeError(\"maxSingleShotSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES);\n                    }\n                    if (options.blockSize === 0) {\n                        if (size > BLOCK_BLOB_MAX_BLOCKS * BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n                            throw new RangeError(size + \" is too larger to upload to a block blob.\");\n                        }\n                        if (size > options.maxSingleShotSize) {\n                            options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n                            if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n                                options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                            }\n                        }\n                    }\n                    if (!options.blobHTTPHeaders) {\n                        options.blobHTTPHeaders = {};\n                    }\n                    if (!options.blobAccessConditions) {\n                        options.blobAccessConditions = {};\n                    }\n                    if (size <= options.maxSingleShotSize) {\n                        return [2 /*return*/, blockBlobURL.upload(aborter, function () { return streamFactory(0); }, size, options)];\n                    }\n                    numBlocks = Math.floor((size - 1) / options.blockSize) + 1;\n                    if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n                        throw new RangeError(\"The buffer's size is too big or the BlockSize is too small;\" +\n                            (\"the number of blocks must be <= \" + BLOCK_BLOB_MAX_BLOCKS));\n                    }\n                    blockList = [];\n                    blockIDPrefix = generateUuid();\n                    transferProgress = 0;\n                    batch = new Batch(options.parallelism);\n                    _loop_1 = function (i) {\n                        batch.addOperation(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var blockID, start, end, contentLength;\n                            return tslib_1.__generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        blockID = generateBlockID(blockIDPrefix, i);\n                                        start = options.blockSize * i;\n                                        end = i === numBlocks - 1 ? size : start + options.blockSize;\n                                        contentLength = end - start;\n                                        blockList.push(blockID);\n                                        return [4 /*yield*/, blockBlobURL.stageBlock(aborter, blockID, function () { return streamFactory(start, contentLength); }, contentLength, {\n                                                leaseAccessConditions: options.blobAccessConditions\n                                                    .leaseAccessConditions\n                                            })];\n                                    case 1:\n                                        _a.sent();\n                                        // Update progress after block is successfully uploaded to server, in case of block trying\n                                        transferProgress += contentLength;\n                                        if (options.progress) {\n                                            options.progress({ loadedBytes: transferProgress });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                    };\n                    for (i = 0; i < numBlocks; i++) {\n                        _loop_1(i);\n                    }\n                    return [4 /*yield*/, batch.do()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, blockBlobURL.commitBlockList(aborter, blockList, options)];\n            }\n        });\n    });\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Downloads an Azure Blob in parallel to a buffer.\n * Offset and count are optional, pass 0 for both to download the entire blob.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Buffer} buffer Buffer to be fill, must have length larger than count\n * @param {BlobURL} blobURL A BlobURL object\n * @param {number} offset From which position of the block blob to download\n * @param {number} [count] How much data to be downloaded. Will download to the end when passing undefined\n * @param {IDownloadFromBlobOptions} [options] IDownloadFromBlobOptions\n * @returns {Promise<void>}\n */\nexport function downloadBlobToBuffer(aborter, buffer, blobURL, offset, count, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var response, transferProgress, batch, _loop_2, off;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!options.blockSize) {\n                        options.blockSize = 0;\n                    }\n                    if (options.blockSize < 0) {\n                        throw new RangeError(\"blockSize option must be >= 0\");\n                    }\n                    if (options.blockSize === 0) {\n                        options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                    }\n                    if (offset < 0) {\n                        throw new RangeError(\"offset option must be >= 0\");\n                    }\n                    if (count && count <= 0) {\n                        throw new RangeError(\"count option must be > 0\");\n                    }\n                    if (!options.blobAccessConditions) {\n                        options.blobAccessConditions = {};\n                    }\n                    if (!!count) return [3 /*break*/, 2];\n                    return [4 /*yield*/, blobURL.getProperties(aborter, options)];\n                case 1:\n                    response = _a.sent();\n                    count = response.contentLength - offset;\n                    if (count < 0) {\n                        throw new RangeError(\"offset \" + offset + \" shouldn't be larger than blob size \" + response.contentLength);\n                    }\n                    _a.label = 2;\n                case 2:\n                    if (buffer.length < count) {\n                        throw new RangeError(\"The buffer's size should be equal to or larger than the request count of bytes: \" + count);\n                    }\n                    transferProgress = 0;\n                    batch = new Batch(options.parallelism);\n                    _loop_2 = function (off) {\n                        batch.addOperation(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var chunkEnd, response, stream;\n                            return tslib_1.__generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        chunkEnd = off + options.blockSize < count ? off + options.blockSize : count;\n                                        return [4 /*yield*/, blobURL.download(aborter, off, chunkEnd - off + 1, {\n                                                blobAccessConditions: options.blobAccessConditions,\n                                                maxRetryRequests: options.maxRetryRequestsPerBlock\n                                            })];\n                                    case 1:\n                                        response = _a.sent();\n                                        stream = response.readableStreamBody;\n                                        return [4 /*yield*/, streamToBuffer(stream, buffer, off - offset, chunkEnd - offset)];\n                                    case 2:\n                                        _a.sent();\n                                        // Update progress after block is downloaded, in case of block trying\n                                        // Could provide finer grained progress updating inside HTTP requests,\n                                        // only if convenience layer download try is enabled\n                                        transferProgress += chunkEnd - off;\n                                        if (options.progress) {\n                                            options.progress({ loadedBytes: transferProgress });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                    };\n                    for (off = offset; off < offset + count; off = off + options.blockSize) {\n                        _loop_2(off);\n                    }\n                    return [4 /*yield*/, batch.do()];\n                case 3:\n                    _a.sent();\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Uploads a Node.js Readable stream into block blob.\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * * Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Readable} stream Node.js Readable stream\n * @param {BlockBlobURL} blockBlobURL A BlockBlobURL instance\n * @param {number} bufferSize Size of every buffer allocated, also the block size in the uploaded block blob\n * @param {number} maxBuffers Max buffers will allocate during uploading, positive correlation\n *                            with max uploading concurrency\n * @param {IUploadStreamToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nexport function uploadStreamToBlockBlob(aborter, stream, blockBlobURL, bufferSize, maxBuffers, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var blockNum, blockIDPrefix, transferProgress, blockList, scheduler;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!options.blobHTTPHeaders) {\n                        options.blobHTTPHeaders = {};\n                    }\n                    if (!options.accessConditions) {\n                        options.accessConditions = {};\n                    }\n                    blockNum = 0;\n                    blockIDPrefix = generateUuid();\n                    transferProgress = 0;\n                    blockList = [];\n                    scheduler = new BufferScheduler(stream, bufferSize, maxBuffers, function (buffer) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                        var blockID;\n                        return tslib_1.__generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0:\n                                    blockID = generateBlockID(blockIDPrefix, blockNum);\n                                    blockList.push(blockID);\n                                    blockNum++;\n                                    return [4 /*yield*/, blockBlobURL.stageBlock(aborter, blockID, buffer, buffer.length, {\n                                            leaseAccessConditions: options.accessConditions.leaseAccessConditions\n                                        })];\n                                case 1:\n                                    _a.sent();\n                                    // Update progress after block is successfully uploaded to server, in case of block trying\n                                    transferProgress += buffer.length;\n                                    if (options.progress) {\n                                        options.progress({ loadedBytes: transferProgress });\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); }, \n                    // Parallelism should set a smaller value than maxBuffers, which is helpful to\n                    // reduce the possibility when a outgoing handler waits for stream data, in\n                    // this situation, outgoing handlers are blocked.\n                    // Outgoing queue shouldn't be empty.\n                    Math.ceil((maxBuffers / 4) * 3));\n                    return [4 /*yield*/, scheduler.do()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, blockBlobURL.commitBlockList(aborter, blockList, options)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=highlevel.node.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { PageBlob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * PageBlobURL defines a set of operations applicable to page blobs.\n *\n * @export\n * @class PageBlobURL\n * @extends {StorageURL}\n */\nvar PageBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(PageBlobURL, _super);\n    /**\n     * Creates an instance of PageBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage page blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof PageBlobURL\n     */\n    function PageBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.pageBlobContext = new PageBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a PageBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A page blob name\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new PageBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a PageBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.fromBlobURL = function (blobURL) {\n        return new PageBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new PageBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.withPipeline = function (pipeline) {\n        return new PageBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new PageBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new PageBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a page blob of the specified length. Call uploadPages to upload data\n     * data to a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} size\n     * @param {IPageBlobCreateOptions} [options]\n     * @returns {Promise<Models.PageBlobCreateResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.create = function (aborter, size, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.create(0, size, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        blobSequenceNumber: options.blobSequenceNumber,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} offset Offset of destination page blob\n     * @param {number} count Content length of body, also how many bytes to be uploaded\n     * @param {IPageBlobUploadPagesOptions} [options]\n     * @returns {Promise<Models.PageBlobsUploadPagesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.uploadPages = function (aborter, body, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.uploadPages(body, count, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress,\n                        range: rangeToString({ offset: offset, count: count }),\n                        sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    /**\n     * Frees the specified pages from the page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {IPageBlobClearPagesOptions} [options]\n     * @returns {Promise<Models.PageBlobClearPagesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.clearPages = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.clearPages(0, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        range: rangeToString({ offset: offset, count: count }),\n                        sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {IPageBlobGetPageRangesOptions} [options]\n     * @returns {Promise<Models.PageBlobGetPageRangesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.getPageRanges = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.getPageRanges({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        range: rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {string} prevSnapshot\n     * @param {IPageBlobGetPageRangesDiffOptions} [options]\n     * @returns {Promise<Models.PageBlobGetPageRangesDiffResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.getPageRangesDiff = function (aborter, offset, count, prevSnapshot, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.getPageRangesDiff({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        prevsnapshot: prevSnapshot,\n                        range: rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Resizes the page blob to the specified size (which must be a multiple of 512).\n     * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} size\n     * @param {IPageBlobResizeOptions} [options]\n     * @returns {Promise<Models.PageBlobResizeResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.resize = function (aborter, size, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.resize(size, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets a page blob's sequence number.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.SequenceNumberActionType} sequenceNumberAction\n     * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n     * @param {IPageBlobUpdateSequenceNumberOptions} [options]\n     * @returns {Promise<Models.PageBlobUpdateSequenceNumberResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.updateSequenceNumber = function (aborter, sequenceNumberAction, sequenceNumber, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n                        abortSignal: aborter,\n                        blobSequenceNumber: sequenceNumber,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n     * The snapshot is copied such that only the differential changes between the previously\n     * copied snapshot are transferred to the destination.\n     * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n     * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n     * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n     *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param {IPageBlobStartCopyIncrementalOptions} [options]\n     * @returns {Promise<Models.PageBlobCopyIncrementalResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.startCopyIncremental = function (aborter, copySource, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.pageBlobContext.copyIncremental(copySource, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    return PageBlobURL;\n}(BlobURL));\nexport { PageBlobURL };\n//# sourceMappingURL=PageBlobURL.js.map","import * as tslib_1 from \"tslib\";\nimport { Service } from \"./generated/lib/operations\";\nimport { StorageURL } from \"./StorageURL\";\n/**\n * A ServiceURL represents a URL to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n *\n * @export\n * @class ServiceURL\n * @extends {StorageURL}\n */\nvar ServiceURL = /** @class */ (function (_super) {\n    tslib_1.__extends(ServiceURL, _super);\n    /**\n     * Creates an instance of ServiceURL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage blob service, such as\n     *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n     *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof ServiceURL\n     */\n    function ServiceURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.serviceContext = new Service(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a new ServiceURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {ServiceURL}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.withPipeline = function (pipeline) {\n        return new ServiceURL(this.url, pipeline);\n    };\n    /**\n     * Gets the properties of a storage account’s Blob service, including properties\n     * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties}\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetPropertiesResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getProperties = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getProperties({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets properties for a storage account’s Blob service endpoint, including properties\n     * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.StorageServiceProperties} properties\n     * @returns {Promise<Models.ServiceSetPropertiesResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.setProperties = function (aborter, properties) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.setProperties(properties, {\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Retrieves statistics related to replication for the Blob service. It is only\n     * available on the secondary location endpoint when read-access geo-redundant\n     * replication is enabled for the storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n     *\n     *  @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetStatisticsResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getStatistics = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getStatistics({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * The Get Account Information operation returns the sku name and account kind\n     * for the specified account.\n     * The Get Account Information operation is available on service versions beginning\n     * with version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetAccountInfoResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getAccountInfo = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getAccountInfo({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns a list of the containers under the specified account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} [marker] A string value that identifies the portion of\n     *                          the list of containers to be returned with the next listing operation. The\n     *                          operation returns the NextMarker value within the response body if the\n     *                          listing operation did not return all containers remaining to be listed\n     *                          with the current page. The NextMarker value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param {IServiceListContainersSegmentOptions} [options]\n     * @returns {Promise<Models.ServiceListContainersSegmentResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.listContainersSegment = function (aborter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.listContainersSegment(tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    return ServiceURL;\n}(StorageURL));\nexport { ServiceURL };\n//# sourceMappingURL=ServiceURL.js.map"],"names":["Aborter","parent","timeout","key","value","_this","this","_aborted","children","abortEventListeners","timer","setTimeout","abort","call","isNode","unref","Object","defineProperty","prototype","get","enumerable","configurable","undefined","withTimeout","childCancelContext","push","withValue","getValue","parent_1","aborted","cancelTimer","onabort","forEach","listener","child","cancelByParent","addEventListener","_type","removeEventListener","index","indexOf","splice","clearTimeout","AccountSASPermissions","read","write","delete","list","add","create","update","process","parse","permissions","accountSASPermissions","_i","permissions_1","length","c","RangeError","toString","join","AccountSASResourceTypes","service","container","object","resourceTypes","accountSASResourceTypes","resourceTypes_1","AccountSASServices","blob","file","queue","table","services","accountSASServices","services_1","ipRangeToString","ipRange","end","start","escapeURLPath","url","urlParsed","URLBuilder","path","getPath","escape","setPath","text","encodeURIComponent","replace","appendToURLPath","name","endsWith","setURLParameter","setQueryParameter","getURLParameter","getQueryParameterValue","setURLHost","host","setHost","getURLPath","getURLQueries","queryString","getQuery","querySubStrings","trim","startsWith","substr","split","queries","querySubStrings_1","filter","indexOfEqual","lastIndexOfEqual","lastIndexOf","splitResults","truncatedISO8061Date","date","withMilliseconds","dateString","toISOString","substring","base64encode","content","Buffer","from","btoa","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","slice","padStart","currentString","targetLength","padString","String","repeat","SASProtocol","SASQueryParameters","version","signature","protocol","startTime","expiryTime","identifier","resource","cacheControl","contentDisposition","contentEncoding","contentLanguage","contentType","ipRangeInner","params_1","param","tryAppendQueryParameter","SDK_VERSION","SERVICE_VERSION","BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","BLOCK_BLOB_MAX_BLOCKS","DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES","DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS","URLConstants","Parameters","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","TIMEOUT","HTTPURLConnection","HTTP_CONFLICT","HTTP_NOT_FOUND","HTTP_PRECON_FAILED","HTTP_RANGE_NOT_SATISFIABLE","HeaderConstants","AUTHORIZATION","AUTHORIZATION_SCHEME","CONTENT_ENCODING","CONTENT_LANGUAGE","CONTENT_LENGTH","CONTENT_MD5","CONTENT_TYPE","COOKIE","DATE","IF_MATCH","IF_MODIFIED_SINCE","IF_NONE_MATCH","IF_UNMODIFIED_SINCE","PREFIX_FOR_STORAGE","RANGE","USER_AGENT","X_MS_CLIENT_REQUEST_ID","X_MS_DATE","ETagNone","generateAccountSASQueryParameters","accountSASSignatureValues","sharedKeyCredential","parsedPermissions","parsedServices","parsedResourceTypes","stringToSign","accountName","computeHMACSHA256","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","__assign","assign","t","s","i","n","arguments","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","RetriableReadableStream","_super","aborter","source","getter","offset","count","options","retries","maxRetryRequests","progress","pause","emit","RestError","REQUEST_ABORTED_ERROR","setSourceDataHandler","setSourceEndHandler","setSourceErrorHandler","tslib_1.__extends","_read","resume","on","data","doInjectErrorOnce","removeAllListeners","loadedBytes","newSource","catch","error","Error","Readable","BlobDownloadResponse","originalResponse","blobDownloadStream","readableStreamBody","acceptRanges","blobSequenceNumber","blobType","contentLength","contentMD5","contentRange","copyCompletionTime","copyId","copyProgress","copySource","copyStatus","copyStatusDescription","leaseDuration","leaseState","leaseStatus","blobCommittedBlockCount","eTag","errorCode","isServerEncrypted","blobContentMD5","lastModified","metadata","requestId","blobBody","_response","StorageError","serializedName","type","className","modelProperties","message","xmlName","AccessPolicy","required","expiry","permission","BlobProperties","creationTime","etag","allowedValues","serverEncrypted","incrementalCopy","destinationSnapshot","deletedTime","remainingRetentionDays","accessTier","accessTierInferred","archiveStatus","accessTierChangeTime","BlobItem","deleted","snapshot","properties","BlobFlatListSegment","blobItems","xmlElementName","element","ListBlobsFlatSegmentResponse","serviceEndpoint","xmlIsAttribute","containerName","prefix","marker","maxResults","delimiter","segment","nextMarker","BlobPrefix","BlobHierarchyListSegment","blobPrefixes","ListBlobsHierarchySegmentResponse","Block","size","BlockList","committedBlocks","xmlIsWrapped","uncommittedBlocks","BlockLookupList","committed","uncommitted","latest","ContainerProperties","publicAccess","hasImmutabilityPolicy","hasLegalHold","ContainerItem","ListContainersSegmentResponse","containerItems","CorsRule","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","constraints","InclusiveMinimum","GeoReplication","status","lastSyncTime","RetentionPolicy","enabled","days","Logging","deleteProperty","retentionPolicy","Metrics","includeAPIs","PageRange","ClearRange","PageList","pageRange","clearRange","SignedIdentifier","id","accessPolicy","StaticWebsite","indexDocument","errorDocument404Path","StorageServiceProperties","logging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","StorageServiceStats","geoReplication","ServiceSetPropertiesHeaders","ServiceGetPropertiesHeaders","ServiceGetStatisticsHeaders","ServiceListContainersSegmentHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","ContainerCreateHeaders","ContainerGetPropertiesHeaders","headerCollectionPrefix","blobPublicAccess","ContainerDeleteHeaders","ContainerSetMetadataHeaders","ContainerGetAccessPolicyHeaders","ContainerSetAccessPolicyHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerReleaseLeaseHeaders","ContainerRenewLeaseHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerChangeLeaseHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerGetAccountInfoHeaders","BlobDownloadHeaders","BlobGetPropertiesHeaders","isIncrementalCopy","BlobDeleteHeaders","PageBlobCreateHeaders","AppendBlobCreateHeaders","BlockBlobUploadHeaders","BlobUndeleteHeaders","BlobSetHTTPHeadersHeaders","BlobSetMetadataHeaders","BlobAcquireLeaseHeaders","BlobReleaseLeaseHeaders","BlobRenewLeaseHeaders","BlobChangeLeaseHeaders","BlobBreakLeaseHeaders","BlobCreateSnapshotHeaders","BlobStartCopyFromURLHeaders","BlobAbortCopyFromURLHeaders","BlobSetTierHeaders","BlobGetAccountInfoHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobCommitBlockListHeaders","BlockBlobGetBlockListHeaders","blobContentLength","PageBlobUploadPagesHeaders","PageBlobClearPagesHeaders","PageBlobGetPageRangesHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobResizeHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobCopyIncrementalHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","access","parameterPath","mapper","action0","isConstant","defaultValue","action1","action2","action3","action4","appendPosition","blobCacheControl","blobContentDisposition","blobContentEncoding","blobContentLanguage","blobContentType","blobType0","blobType1","blobType2","blockId","breakPeriod","comp0","comp1","comp10","comp11","comp12","comp13","comp14","comp15","comp2","comp3","comp4","comp5","comp6","comp7","comp8","comp9","copyActionAbortConstant","deleteSnapshots","duration","ifMatch","ifModifiedSince","ifNoneMatch","ifSequenceNumberEqualTo","ifSequenceNumberLessThan","ifSequenceNumberLessThanOrEqualTo","ifUnmodifiedSince","include0","include1","collectionFormat","msRest.QueryCollectionFormat","Csv","leaseId0","leaseId1","listType","maxresults","maxSize","pageWrite0","pageWrite1","prevsnapshot","proposedLeaseId0","proposedLeaseId1","range","rangeGetContentMD5","restype0","restype1","restype2","sequenceNumberAction","sourceContentMD5","sourceIfMatch","sourceIfModifiedSince","sourceIfNoneMatch","sourceIfUnmodifiedSince","sourceRange","sourceUrl","tier","transactionalContentMD5","skipEncoding","Service","client","setProperties","storageServiceProperties","callback","sendOperationRequest","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getAccountInfo","getAccountInfoOperationSpec","serializer","msRest.Serializer","Mappers","httpMethod","urlParameters","Parameters.url","queryParameters","Parameters.timeout","Parameters.restype0","Parameters.comp0","headerParameters","Parameters.version","Parameters.requestId","requestBody","tslib_1.__assign","Mappers.StorageServiceProperties","responses","202","headersMapper","Mappers.ServiceSetPropertiesHeaders","default","bodyMapper","Mappers.StorageError","isXML","200","Mappers.ServiceGetPropertiesHeaders","Parameters.comp1","Mappers.StorageServiceStats","Mappers.ServiceGetStatisticsHeaders","Parameters.prefix","Parameters.marker","Parameters.maxresults","Parameters.include0","Parameters.comp2","Mappers.ListContainersSegmentResponse","Mappers.ServiceListContainersSegmentHeaders","Parameters.restype1","Mappers.ServiceGetAccountInfoHeaders","Container","createOperationSpec","deleteMethod","deleteMethodOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","proposedLeaseId","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","Parameters.restype2","Parameters.metadata","Parameters.access","201","Mappers.ContainerCreateHeaders","Parameters.leaseId0","Mappers.ContainerGetPropertiesHeaders","Parameters.ifModifiedSince","Parameters.ifUnmodifiedSince","Mappers.ContainerDeleteHeaders","Parameters.comp3","Mappers.ContainerSetMetadataHeaders","Parameters.comp4","Mappers.ContainerGetAccessPolicyHeaders","Mappers.ContainerSetAccessPolicyHeaders","Parameters.comp5","Parameters.duration","Parameters.proposedLeaseId0","Parameters.action0","Mappers.ContainerAcquireLeaseHeaders","Parameters.leaseId1","Parameters.action1","Mappers.ContainerReleaseLeaseHeaders","Parameters.action2","Mappers.ContainerRenewLeaseHeaders","Parameters.breakPeriod","Parameters.action3","Mappers.ContainerBreakLeaseHeaders","Parameters.proposedLeaseId1","Parameters.action4","Mappers.ContainerChangeLeaseHeaders","Parameters.include1","Mappers.ListBlobsFlatSegmentResponse","Mappers.ContainerListBlobFlatSegmentHeaders","Parameters.delimiter","Mappers.ListBlobsHierarchySegmentResponse","Mappers.ContainerListBlobHierarchySegmentHeaders","Mappers.ContainerGetAccountInfoHeaders","Blob","download","downloadOperationSpec","undelete","undeleteOperationSpec","setHTTPHeaders","setHTTPHeadersOperationSpec","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","setTierOperationSpec","Parameters.snapshot","Parameters.range","Parameters.rangeGetContentMD5","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.BlobDownloadHeaders","206","Mappers.BlobGetPropertiesHeaders","Parameters.deleteSnapshots","Mappers.BlobDeleteHeaders","Parameters.comp6","Mappers.BlobUndeleteHeaders","Parameters.blobCacheControl","Parameters.blobContentType","Parameters.blobContentMD5","Parameters.blobContentEncoding","Parameters.blobContentLanguage","Parameters.blobContentDisposition","Mappers.BlobSetHTTPHeadersHeaders","Mappers.BlobSetMetadataHeaders","Mappers.BlobAcquireLeaseHeaders","Mappers.BlobReleaseLeaseHeaders","Mappers.BlobRenewLeaseHeaders","Mappers.BlobChangeLeaseHeaders","Mappers.BlobBreakLeaseHeaders","Parameters.comp7","Mappers.BlobCreateSnapshotHeaders","Parameters.copySource","Parameters.sourceIfModifiedSince","Parameters.sourceIfUnmodifiedSince","Parameters.sourceIfMatch","Parameters.sourceIfNoneMatch","Mappers.BlobStartCopyFromURLHeaders","Parameters.copyId","Parameters.comp8","Parameters.copyActionAbortConstant","204","Mappers.BlobAbortCopyFromURLHeaders","Parameters.comp9","Parameters.tier","Mappers.BlobSetTierHeaders","Mappers.BlobGetAccountInfoHeaders","PageBlob","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","Parameters.contentLength","Parameters.blobContentLength","Parameters.blobSequenceNumber","Parameters.blobType0","Mappers.PageBlobCreateHeaders","Parameters.comp10","Parameters.transactionalContentMD5","Parameters.pageWrite0","Parameters.ifSequenceNumberLessThanOrEqualTo","Parameters.ifSequenceNumberLessThan","Parameters.ifSequenceNumberEqualTo","Mappers.PageBlobUploadPagesHeaders","Parameters.pageWrite1","Mappers.PageBlobClearPagesHeaders","Parameters.comp11","Mappers.PageList","Mappers.PageBlobGetPageRangesHeaders","Parameters.prevsnapshot","Mappers.PageBlobGetPageRangesDiffHeaders","Mappers.PageBlobResizeHeaders","Parameters.sequenceNumberAction","Mappers.PageBlobUpdateSequenceNumberHeaders","Parameters.comp12","Mappers.PageBlobCopyIncrementalHeaders","AppendBlob","appendBlock","appendBlockOperationSpec","Parameters.blobType1","Mappers.AppendBlobCreateHeaders","Parameters.comp13","Parameters.maxSize","Parameters.appendPosition","Mappers.AppendBlobAppendBlockHeaders","BlockBlob","upload","uploadOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","stageBlockFromURLOperationSpec","commitBlockList","blocks","commitBlockListOperationSpec","getBlockList","getBlockListOperationSpec","Parameters.blobType2","Mappers.BlockBlobUploadHeaders","Parameters.blockId","Parameters.comp14","Mappers.BlockBlobStageBlockHeaders","Parameters.sourceUrl","Parameters.sourceRange","Parameters.sourceContentMD5","Mappers.BlockBlobStageBlockFromURLHeaders","Parameters.comp15","Mappers.BlockLookupList","Mappers.BlockBlobCommitBlockListHeaders","Parameters.listType","Mappers.BlockList","Mappers.BlockBlobGetBlockListHeaders","rangeToString","iRange","RetryPolicyType","BrowserPolicy","nextPolicy","sendRequest","request","tslib_1.__awaiter","tslib_1.__generator","_a","method","toUpperCase","Date","getTime","headers","remove","_nextPolicy","BaseRequestPolicy","BrowserPolicyFactory","packageName","packageVersion","StorageClientContext","userAgent","defaultUserAgent","msRest.getDefaultUserAgentValue","baseUri","requestContentType","msRest.ServiceClient","DEFAULT_REQUEST_LOG_OPTIONS","logWarningIfTryOverThreshold","LoggingPolicy","loggingOptions","tryCount","operationStartTime","requestStartTime","safeURL","response","requestEndTime","requestCompletionTime","operationDuration","currentLevel","logMessage","errorString","messageInfo","err_1","log","HttpPipelineLogLevel","INFO","shouldLog","WARNING","ERROR","LoggingPolicyFactory","Pipeline","factories","toServiceClientOptions","httpClient","HTTPClient","httpPipelineLogger","logger","requestPolicyFactories","DEFAULT_RETRY_OPTIONS","maxRetryDelayInMs","maxTries","retryDelayInMs","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RetryPolicy","retryOptions","Math","floor","min","attemptSendRequest","secondaryHas404","attempt","newRequest","isPrimaryRetry","clone","logf","shouldRetry","code","delay","err","retriableErrors_1","retriableError","includes","statusCode","_level","_message","delayTimeInMs","pow","FIXED","random","RetryPolicyFactory","TelemetryPolicy","telemetry","HttpHeaders","set","TelemetryPolicyFactory","userAgentInfo","telemetryString","libInfo","runtimeInfo","os.type","os.release","UniqueRequestIDPolicy","contains","generateUuid","UniqueRequestIDPolicyFactory","StorageURL","pipeline","storageClientContext","newPipeline","credential","pipelineOptions","deserializationPolicy","BlobURL","blobContext","fromContainerURL","containerURL","blobName","withPipeline","withSnapshot","res","blobAccessConditions","modifiedAccessConditions","abortSignal","leaseAccessConditions","onDownloadProgress","updatedOptions","blobHTTPHeaders","sourceModifiedAccessConditions","AppendBlobURL","appendBlobContext","fromBlobURL","blobURL","accessConditions","appendPositionAccessConditions","onUploadProgress","BlobSASPermissions","blobSASPermissions","char","ContainerSASPermissions","containerSASPermissions","generateBlobSASQueryParameters","blobSASSignatureValues","verifiedPermissions","getCanonicalName","elements","BatchStates","BlockBlobURL","blockBlobContext","sourceURL","ContainerURL","containerContext","fromServiceURL","serviceURL","containerAccessConditions","acl","containerAcl","period","CredentialPolicy","Credential","AnonymousCredential","SharedKeyCredentialPolicy","getHeaderValueToSign","array","canonicalizedHeadersStringToSign","canonicalizedResourceString","lowercaseQueries","queryKeys","SharedKeyCredential","TokenCredentialPolicy","TokenCredential","Good","error_1","actives","operation","browserBlob","blockSize","maxSingleShotSize","blockList","transferProgress","blockID","bufferSize","maxBuffers","readable","outgoingHandler","isError","unresolvedLength","buffer","merged","resolveData","numBuffers","triggerOutgoingHandler","bufferLength","executingOutgoingHandlers","pos","stream","chunk","fs","autoClose","_loop_2","off","chunkEnd","blockNum","PageBlobURL","sequenceNumberAccessConditions","ServiceURL"],"mappings":"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"}
{"version":3,"file":"azure-storage.blob.min.js","sources":["../node_modules/@azure/ms-rest-js/es/lib/httpHeaders.js","../node_modules/@azure/ms-rest-js/es/lib/util/base64.browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/v4.js","../node_modules/@azure/ms-rest-js/es/lib/util/constants.js","../node_modules/@azure/ms-rest-js/es/lib/util/utils.js","../node_modules/@azure/ms-rest-js/es/lib/serializer.js","../node_modules/@azure/ms-rest-js/es/lib/webResource.js","../node_modules/tslib/tslib.es6.js","../node_modules/@azure/ms-rest-js/es/lib/httpPipelineLogLevel.js","../node_modules/@azure/ms-rest-js/es/lib/restError.js","../node_modules/@azure/ms-rest-js/es/lib/xhrHttpClient.js","../node_modules/@azure/ms-rest-js/es/lib/operationParameter.js","../node_modules/@azure/ms-rest-js/es/lib/operationSpec.js","../node_modules/@azure/ms-rest-js/es/lib/util/xml.browser.js","../node_modules/@azure/ms-rest-js/es/lib/policies/requestPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/deserializationPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/exponentialRetryPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/generateClientRequestIdPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/userAgentPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/msRestUserAgentPolicy.browser.js","../node_modules/@azure/ms-rest-js/es/lib/url.js","../node_modules/@azure/ms-rest-js/es/lib/policies/redirectPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/rpRegistrationPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/signingPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/policies/systemErrorRetryPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/queryCollectionFormat.js","../node_modules/@azure/ms-rest-js/es/lib/policies/throttlingRetryPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/serviceClient.js","../node_modules/@azure/ms-rest-js/es/lib/policies/logPolicy.js","../node_modules/@azure/ms-rest-js/es/lib/credentials/topicCredentials.js","../node_modules/@azure/ms-rest-js/es/lib/credentials/apiKeyCredentials.js","../dist-esm/lib/Aborter.js","../dist-esm/lib/generated/lib/models/mappers.js","../dist-esm/lib/generated/lib/models/parameters.js","../dist-esm/lib/generated/lib/operations/service.js","../dist-esm/lib/generated/lib/operations/container.js","../dist-esm/lib/generated/lib/operations/blob.js","../dist-esm/lib/generated/lib/operations/pageBlob.js","../dist-esm/lib/generated/lib/operations/appendBlob.js","../dist-esm/lib/generated/lib/operations/blockBlob.js","../dist-esm/lib/IRange.js","../dist-esm/lib/utils/constants.js","../dist-esm/lib/utils/utils.common.js","../dist-esm/lib/policies/BrowserPolicy.js","../dist-esm/lib/policies/RetryPolicy.js","../dist-esm/lib/BrowserPolicyFactory.js","../dist-esm/lib/generated/lib/storageClientContext.js","../dist-esm/lib/policies/LoggingPolicy.js","../dist-esm/lib/LoggingPolicyFactory.js","../dist-esm/lib/Pipeline.js","../dist-esm/lib/RetryPolicyFactory.js","../dist-esm/lib/policies/TelemetryPolicy.js","../dist-esm/lib/TelemetryPolicyFactory.js","../dist-esm/lib/policies/UniqueRequestIDPolicy.js","../dist-esm/lib/UniqueRequestIDPolicyFactory.js","../dist-esm/lib/StorageURL.js","../dist-esm/lib/BlobURL.js","../dist-esm/lib/BlobDownloadResponse.browser.js","../dist-esm/lib/AppendBlobURL.js","../dist-esm/lib/BlockBlobURL.js","../dist-esm/lib/ContainerURL.js","../dist-esm/lib/policies/CredentialPolicy.js","../dist-esm/lib/credentials/Credential.js","../dist-esm/lib/credentials/AnonymousCredential.js","../dist-esm/lib/policies/TokenCredentialPolicy.js","../dist-esm/lib/credentials/TokenCredential.js","../node_modules/events/events.js","../dist-esm/lib/utils/Batch.js","../dist-esm/lib/PageBlobURL.js","../dist-esm/lib/ServiceURL.js","../dist-esm/lib/highlevel.browser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName) {\n    return headerName.toLowerCase();\n}\n/**\n * A collection of HTTP header key/value pairs.\n */\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders(rawHeaders) {\n        this._headersMap = {};\n        if (rawHeaders) {\n            for (var headerName in rawHeaders) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param headerName The name of the header to set. This value is case-insensitive.\n     * @param headerValue The value of the header to set.\n     */\n    HttpHeaders.prototype.set = function (headerName, headerValue) {\n        this._headersMap[getHeaderKey(headerName)] = { name: headerName, value: headerValue.toString() };\n    };\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param headerName The name of the header.\n     */\n    HttpHeaders.prototype.get = function (headerName) {\n        var header = this._headersMap[getHeaderKey(headerName)];\n        return !header ? undefined : header.value;\n    };\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     */\n    HttpHeaders.prototype.contains = function (headerName) {\n        return !!this._headersMap[getHeaderKey(headerName)];\n    };\n    /**\n     * Remove the header with the provided headerName. Return whether or not the header existed and\n     * was removed.\n     * @param headerName The name of the header to remove.\n     */\n    HttpHeaders.prototype.remove = function (headerName) {\n        var result = this.contains(headerName);\n        delete this._headersMap[getHeaderKey(headerName)];\n        return result;\n    };\n    /**\n     * Get the headers that are contained this collection as an object.\n     */\n    HttpHeaders.prototype.rawHeaders = function () {\n        var result = {};\n        for (var headerKey in this._headersMap) {\n            var header = this._headersMap[headerKey];\n            result[header.name.toLowerCase()] = header.value;\n        }\n        return result;\n    };\n    /**\n     * Get the headers that are contained in this collection as an array.\n     */\n    HttpHeaders.prototype.headersArray = function () {\n        var headers = [];\n        for (var headerKey in this._headersMap) {\n            headers.push(this._headersMap[headerKey]);\n        }\n        return headers;\n    };\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerNames = function () {\n        var headerNames = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerNames.push(headers[i].name);\n        }\n        return headerNames;\n    };\n    /**\n     * Get the header names that are contained in this collection.\n     */\n    HttpHeaders.prototype.headerValues = function () {\n        var headerValues = [];\n        var headers = this.headersArray();\n        for (var i = 0; i < headers.length; ++i) {\n            headerValues.push(headers[i].value);\n        }\n        return headerValues;\n    };\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toJson = function () {\n        return this.rawHeaders();\n    };\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    HttpHeaders.prototype.toString = function () {\n        return JSON.stringify(this.toJson());\n    };\n    /**\n     * Create a deep clone/copy of this HttpHeaders collection.\n     */\n    HttpHeaders.prototype.clone = function () {\n        return new HttpHeaders(this.rawHeaders());\n    };\n    return HttpHeaders;\n}());\nexport { HttpHeaders };\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * Encodes a string in base64 format.\n * @param value the string to encode\n */\nexport function encodeString(value) {\n    return btoa(value);\n}\n/**\n * Encodes a byte array in base64 format.\n * @param value the Uint8Aray to encode\n */\nexport function encodeByteArray(value) {\n    var str = \"\";\n    for (var i = 0; i < value.length; i++) {\n        str += String.fromCharCode(value[i]);\n    }\n    return btoa(str);\n}\n/**\n * Decodes a base64 string into a byte array.\n * @param value the base64 string to decode\n */\nexport function decodeString(value) {\n    var byteString = atob(value);\n    var arr = new Uint8Array(byteString.length);\n    for (var i = 0; i < byteString.length; i++) {\n        arr[i] = byteString.charCodeAt(i);\n    }\n    return arr;\n}\n//# sourceMappingURL=base64.browser.js.map","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nexport var Constants = {\n    /**\n     * The ms-rest version\n     * @const\n     * @type {string}\n     */\n    msRestVersion: \"0.1.0\",\n    /**\n     * Specifies HTTP.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP: \"http:\",\n    /**\n     * Specifies HTTPS.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS: \"https:\",\n    /**\n     * Specifies HTTP Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTP_PROXY: \"HTTP_PROXY\",\n    /**\n     * Specifies HTTPS Proxy.\n     *\n     * @const\n     * @type {string}\n     */\n    HTTPS_PROXY: \"HTTPS_PROXY\",\n    HttpConstants: {\n        /**\n         * Http Verbs\n         *\n         * @const\n         * @enum {string}\n         */\n        HttpVerbs: {\n            PUT: \"PUT\",\n            GET: \"GET\",\n            DELETE: \"DELETE\",\n            POST: \"POST\",\n            MERGE: \"MERGE\",\n            HEAD: \"HEAD\",\n            PATCH: \"PATCH\"\n        },\n        StatusCodes: {\n            TooManyRequests: 429\n        }\n    },\n    /**\n     * Defines constants for use with HTTP headers.\n     */\n    HeaderConstants: {\n        /**\n         * The Authorization header.\n         *\n         * @const\n         * @type {string}\n         */\n        AUTHORIZATION: \"authorization\",\n        AUTHORIZATION_SCHEME: \"Bearer\",\n        /**\n         * The Retry-After response-header field can be used with a 503 (Service\n         * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n         * the service is expected to be unavailable to the requesting client.\n         *\n         * @const\n         * @type {string}\n         */\n        RETRY_AFTER: \"Retry-After\",\n        /**\n         * The UserAgent header.\n         *\n         * @const\n         * @type {string}\n         */\n        USER_AGENT: \"User-Agent\"\n    }\n};\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport uuidv4 from \"uuid/v4\";\nimport { Constants } from \"./constants\";\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport var isNode = typeof navigator === \"undefined\" && typeof process !== \"undefined\";\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param {object} urlToCheck The url to check\n * @return {boolean} True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck) {\n    return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param {string} uri The URI to be encoded.\n * @return {string} The encoded URI.\n */\nexport function encodeUri(uri) {\n    return encodeURIComponent(uri)\n        .replace(/!/g, \"%21\")\n        .replace(/\"/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param {HttpOperationResponse} response The Http Response\n *\n * @return {object} The stripped version of Http Response.\n */\nexport function stripResponse(response) {\n    var strippedResponse = {};\n    strippedResponse.body = response.bodyAsText;\n    strippedResponse.headers = response.headers;\n    strippedResponse.status = response.status;\n    return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param {WebResource} request The Http Request object\n *\n * @return {WebResource} The stripped version of Http Request.\n */\nexport function stripRequest(request) {\n    var strippedRequest = request.clone();\n    if (strippedRequest.headers) {\n        strippedRequest.headers.remove(\"authorization\");\n    }\n    return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param {string} uuid The uuid as a string that needs to be validated\n *\n * @return {boolean} True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid) {\n    var validUuidRegex = new RegExp(\"^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$\", \"ig\");\n    return validUuidRegex.test(uuid);\n}\n/**\n * Provides an array of values of an object. For example\n * for a given object { \"a\": \"foo\", \"b\": \"bar\" }, the method returns [\"foo\", \"bar\"].\n *\n * @param {object} obj An object whose properties need to be enumerated so that it\"s values can be provided as an array\n *\n * @return {any[]} An array of values of the given object.\n */\nexport function objectValues(obj) {\n    var result = [];\n    if (obj && obj instanceof Object) {\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                result.push(obj[key]);\n            }\n        }\n    }\n    else {\n        throw new Error(\"The provided object \" + JSON.stringify(obj, undefined, 2) + \" is not a valid object that can be \" +\n            \"enumerated to provide its values as an array.\");\n    }\n    return result;\n}\n/**\n * Generated UUID\n *\n * @return {string} RFC4122 v4 UUID.\n */\nexport function generateUuid() {\n    return uuidv4();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param {Array} promiseFactories An array of promise factories(A function that return a promise)\n *\n * @param {any} [kickstart] Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n *\n * @return A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(promiseFactories, kickstart) {\n    var result = Promise.resolve(kickstart);\n    promiseFactories.forEach(function (promiseFactory) {\n        result = result.then(promiseFactory);\n    });\n    return result;\n}\n/**\n * Merges source object into the target object\n * @param {object} source The object that needs to be merged\n *\n * @param {object} target The object to be merged into\n *\n * @returns {object} Returns the merged target object.\n */\nexport function mergeObjects(source, target) {\n    Object.keys(source).forEach(function (key) {\n        target[key] = source[key];\n    });\n    return target;\n}\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param {number} t The number of milliseconds to be delayed.\n * @param {T} value The value to be resolved with after a timeout of t milliseconds.\n * @returns {Promise<T>} Resolved promise\n */\nexport function delay(t, value) {\n    return new Promise(function (resolve) { return setTimeout(function () { return resolve(value); }, t); });\n}\n/**\n * Converts a Promise to a callback.\n * @param {Promise<any>} promise The Promise to be converted to a callback\n * @returns {Function} A function that takes the callback (cb: Function): void\n * @deprecated generated code should instead depend on responseToBody\n */\nexport function promiseToCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise.then(function (data) {\n            cb(undefined, data);\n        }, function (err) {\n            cb(err);\n        });\n    };\n}\n/**\n * Converts a Promise to a service callback.\n * @param {Promise<HttpOperationResponse>} promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns {Function} A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback(promise) {\n    if (typeof promise.then !== \"function\") {\n        throw new Error(\"The provided input is not a Promise.\");\n    }\n    return function (cb) {\n        promise.then(function (data) {\n            process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n        }, function (err) {\n            process.nextTick(cb, err);\n        });\n    };\n}\nexport function prepareXMLRootList(obj, elementName) {\n    var _a;\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    return _a = {}, _a[elementName] = obj, _a;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param {object} targetCtor The target object on which the properties need to be applied.\n * @param {Array<object>} sourceCtors An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtor, sourceCtors) {\n    sourceCtors.forEach(function (sourceCtors) {\n        Object.getOwnPropertyNames(sourceCtors.prototype).forEach(function (name) {\n            targetCtor.prototype[name] = sourceCtors.prototype[name];\n        });\n    });\n}\nvar validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param {string} value The value to be validated for ISO 8601 duration format.\n * @return {boolean} `true` if valid, `false` otherwise.\n */\nexport function isDuration(value) {\n    return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param {string | undefined} value The value to search and replace in.\n * @param {string} searchValue The value to search for in the value argument.\n * @param {string} replaceValue The value to replace searchValue with in the value argument.\n * @returns {string | undefined} The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nvar Serializer = /** @class */ (function () {\n    function Serializer(modelMappers, isXML) {\n        if (modelMappers === void 0) { modelMappers = {}; }\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    Serializer.prototype.validateConstraints = function (mapper, value, objectName) {\n        var failValidation = function (constraintName, constraintValue) {\n            throw new Error(\"\\\"\" + objectName + \"\\\" with value \\\"\" + value + \"\\\" should satisfy the constraint \\\"\" + constraintName + \"\\\": \" + constraintValue + \".\");\n        };\n        if (mapper.constraints && (value != undefined)) {\n            var _a = mapper.constraints, ExclusiveMaximum = _a.ExclusiveMaximum, ExclusiveMinimum = _a.ExclusiveMinimum, InclusiveMaximum = _a.InclusiveMaximum, InclusiveMinimum = _a.InclusiveMinimum, MaxItems = _a.MaxItems, MaxLength = _a.MaxLength, MinItems = _a.MinItems, MinLength = _a.MinLength, MultipleOf = _a.MultipleOf, Pattern = _a.Pattern, UniqueItems = _a.UniqueItems;\n            if (ExclusiveMaximum != undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum != undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum != undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum != undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems != undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength != undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems != undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength != undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf != undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern && value.match(Pattern) === null) {\n                failValidation(\"Pattern\", Pattern);\n            }\n            if (UniqueItems && value.some(function (item, i, ar) { return ar.indexOf(item) !== i; })) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    };\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param {Mapper} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} object A valid Javascript object to be serialized\n     *\n     * @param {string} objectName Name of the serialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid serialized Javascript object\n     */\n    Serializer.prototype.serialize = function (mapper, object, objectName) {\n        var payload = {};\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/ig) !== null) {\n            payload = [];\n        }\n        if (object == undefined && (mapper.defaultValue != undefined || mapper.isConstant)) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        var required = mapper.required, nullable = mapper.nullable;\n        if (required && nullable && object === undefined) {\n            throw new Error(objectName + \" cannot be undefined.\");\n        }\n        if (required && !nullable && object == undefined) {\n            throw new Error(objectName + \" cannot be null or undefined.\");\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(objectName + \" cannot be null.\");\n        }\n        if (object == undefined) {\n            payload = object;\n        }\n        else {\n            // Validate Constraints if any\n            this.validateConstraints(mapper, object, objectName);\n            if (mapperType.match(/^any$/ig) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/ig) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/ig) !== null) {\n                var enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/ig) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/ig) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/ig) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/ig) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/ig) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName);\n            }\n            else if (mapperType.match(/^Composite$/ig) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName);\n            }\n        }\n        return payload;\n    };\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param {object} mapper The mapper which defines the metadata of the serializable object\n     *\n     * @param {object|string|Array|number|boolean|Date|stream} responseBody A valid Javascript entity to be deserialized\n     *\n     * @param {string} objectName Name of the deserialized object\n     *\n     * @returns {object|string|Array|number|boolean|Date|stream} A valid deserialized Javascript object\n     */\n    Serializer.prototype.deserialize = function (mapper, responseBody, objectName) {\n        if (responseBody == undefined) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            return responseBody;\n        }\n        var payload;\n        var mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/ig) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName);\n        }\n        else {\n            if (this.isXML) {\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\") and body (\"_\") properties, then just reduce the responseBody value to\n                 * the body (\"_\") property.\n                 */\n                if (responseBody[\"$\"] != undefined && responseBody[\"_\"] != undefined) {\n                    responseBody = responseBody[\"_\"];\n                }\n            }\n            if (mapperType.match(/^Number$/ig) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/ig) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/ig) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/ig) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/ig) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/ig) !== null) {\n                payload = base64.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/ig) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/ig) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName);\n            }\n            else if (mapperType.match(/^Dictionary$/ig) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    };\n    return Serializer;\n}());\nexport { Serializer };\nfunction trimEnd(str, ch) {\n    var len = str.length;\n    while ((len - 1) >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(\"Please provide an input of type Uint8Array for converting to Base64Url.\");\n    }\n    // Uint8Array to Base64.\n    var str = base64.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/\\-/g, \"+\").replace(/\\_/g, \"/\");\n    // Base64 to Uint8Array.\n    return base64.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    var classes = [];\n    var partialclass = \"\";\n    if (prop) {\n        var subwords = prop.split(\".\");\n        for (var _i = 0, subwords_1 = subwords; _i < subwords_1.length; _i++) {\n            var item = subwords_1[_i];\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/ig) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type number.\");\n            }\n        }\n        else if (typeName.match(/^String$/ig) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string.\");\n            }\n        }\n        else if (typeName.match(/^Uuid$/ig) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n                throw new Error(objectName + \" with value \\\"\" + value + \"\\\" must be of type string and a valid uuid.\");\n            }\n        }\n        else if (typeName.match(/^Boolean$/ig) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(objectName + \" with value \" + value + \" must be of type boolean.\");\n            }\n        }\n        else if (typeName.match(/^Stream$/ig) !== null) {\n            var objectType = typeof value;\n            if (objectType !== \"string\" &&\n                objectType !== \"function\" &&\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                !(typeof Blob === \"function\" && value instanceof Blob)) {\n                throw new Error(objectName + \" must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.\");\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(\"Please provide a set of allowedValues to validate \" + objectName + \" as an Enum Type.\");\n    }\n    var isPresent = allowedValues.some(function (item) {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(value + \" is not a valid value for \" + objectName + \". The valid values are: \" + JSON.stringify(allowedValues) + \".\");\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        value = base64.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value != undefined) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(objectName + \" must be of type Uint8Array.\");\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value != undefined) {\n        if (typeName.match(/^Date$/ig) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value = (value instanceof Date) ? value.toISOString().substring(0, 10) : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/ig) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in ISO8601 format.\");\n            }\n            value = (value instanceof Date) ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/ig) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123 format.\");\n            }\n            value = (value instanceof Date) ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/ig) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(objectName + \" must be an instanceof Date or a string in RFC-1123/ISO8601 format \" +\n                    \"for it to be serialized in UnixTime/Epoch format.\");\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/ig) !== null) {\n            if (!utils.isDuration(value)) {\n                throw new Error(objectName + \" must be a string in ISO 8601 format. Instead was \\\"\" + value + \"\\\".\");\n            }\n            value = value;\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName) {\n    if (!Array.isArray(object)) {\n        throw new Error(objectName + \" must be of type Array.\");\n    }\n    var elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempArray = [];\n    for (var i = 0; i < object.length; i++) {\n        tempArray[i] = serializer.serialize(elementType, object[i], objectName);\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName) {\n    if (typeof object !== \"object\") {\n        throw new Error(objectName + \" must be of type object.\");\n    }\n    var valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName + \".\"));\n    }\n    var tempDictionary = {};\n    for (var _i = 0, _a = Object.keys(object); _i < _a.length; _i++) {\n        var key = _a[_i];\n        tempDictionary[key] = serializer.serialize(valueType, object[key], objectName + \".\" + key);\n    }\n    return tempDictionary;\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer the serializer containing the entire set of mappers\n * @param mapper the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    var modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        var className = mapper.type.className;\n        if (!className) {\n            throw new Error(\"Class name for model \\\"\" + objectName + \"\\\" is not provided in the mapper \\\"\" + JSON.stringify(mapper, undefined, 2) + \"\\\".\");\n        }\n        var modelMapper = serializer.modelMappers[className];\n        if (!modelMapper) {\n            throw new Error(\"mapper() cannot be null or undefined for model \\\"\" + className + \"\\\".\");\n        }\n        modelProps = modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(\"modelProperties cannot be null or undefined in the \" +\n                (\"mapper \\\"\" + JSON.stringify(modelMapper) + \"\\\" of type \\\"\" + className + \"\\\" for object \\\"\" + objectName + \"\\\".\"));\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName) {\n    var _a;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object != undefined) {\n        var payload = {};\n        var modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (var _i = 0, _b = Object.keys(modelProps); _i < _b.length; _i++) {\n            var key = _b[_i];\n            var propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            var propName = void 0;\n            var parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                var paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (var _c = 0, paths_1 = paths; _c < paths_1.length; _c++) {\n                    var pathName = paths_1[_c];\n                    var childObject = parentObject[pathName];\n                    if ((childObject == undefined) && (object[key] != undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject != undefined) {\n                var propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                var toSerialize = object[key];\n                var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator && polymorphicDiscriminator.clientName === key && toSerialize == undefined) {\n                    toSerialize = mapper.serializedName;\n                }\n                var serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName);\n                if (serializedValue !== undefined && propName != undefined) {\n                    if (propertyMapper.xmlIsAttribute) {\n                        // $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject.$ = parentObject.$ || {};\n                        parentObject.$[propName] = serializedValue;\n                    }\n                    else if (propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = (_a = {}, _a[propertyMapper.xmlElementName] = serializedValue, _a);\n                    }\n                    else {\n                        parentObject[propName] = serializedValue;\n                    }\n                }\n            }\n        }\n        var additionalPropertiesMapper = mapper.type.additionalProperties;\n        if (additionalPropertiesMapper) {\n            var propNames = Object.keys(modelProps);\n            var _loop_1 = function (clientPropName) {\n                var isAdditionalProperty = propNames.every(function (pn) { return pn !== clientPropName; });\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]');\n                }\n            };\n            for (var clientPropName in object) {\n                _loop_1(clientPropName);\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction isSpecialXmlProperty(propertyName) {\n    return [\"$\", \"_\"].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    var modelProps = resolveModelProperties(serializer, mapper, objectName);\n    var instance = {};\n    var handledPropertyNames = [];\n    for (var _i = 0, _a = Object.keys(modelProps); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var propertyMapper = modelProps[key];\n        var paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        var serializedName = propertyMapper.serializedName, xmlName = propertyMapper.xmlName, xmlElementName = propertyMapper.xmlElementName;\n        var propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        var headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            var dictionary = {};\n            for (var _b = 0, _c = Object.keys(responseBody); _b < _c.length; _b++) {\n                var headerKey = _c[_b];\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody.$) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody.$[xmlName], propertyObjectName);\n            }\n            else {\n                var propertyName = xmlElementName || xmlName || serializedName;\n                var unwrappedProperty = responseBody[propertyName];\n                if (propertyMapper.xmlIsWrapped) {\n                    unwrappedProperty = responseBody[xmlName];\n                    unwrappedProperty = unwrappedProperty && unwrappedProperty[xmlElementName];\n                    var isEmptyWrappedList = unwrappedProperty === undefined;\n                    if (isEmptyWrappedList) {\n                        unwrappedProperty = [];\n                    }\n                }\n                instance[key] = serializer.deserialize(propertyMapper, unwrappedProperty, propertyObjectName);\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            var propertyInstance = void 0;\n            var res = responseBody;\n            // traversing the object step by step.\n            for (var _d = 0, paths_2 = paths; _d < paths_2.length; _d++) {\n                var item = paths_2[_d];\n                if (!res)\n                    break;\n                res = res[item];\n            }\n            propertyInstance = res;\n            var polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            if (polymorphicDiscriminator && propertyMapper.serializedName === polymorphicDiscriminator.serializedName && propertyInstance == undefined) {\n                propertyInstance = mapper.serializedName;\n            }\n            var serializedValue = void 0;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                instance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n            }\n            else if (propertyInstance !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    var additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        var isAdditionalProperty = function (responsePropName) {\n            for (var clientPropName in modelProps) {\n                var paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (var responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]');\n            }\n        }\n    }\n    else {\n        for (var _e = 0, _f = Object.keys(responseBody); _e < _f.length; _e++) {\n            var key = _f[_e];\n            if (instance[key] === undefined && !handledPropertyNames.includes(key) && !isSpecialXmlProperty(key)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName) {\n    /*jshint validthis: true */\n    var value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(\"\\\"value\\\" metadata for a Dictionary must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        var tempDictionary = {};\n        for (var _i = 0, _a = Object.keys(responseBody); _i < _a.length; _i++) {\n            var key = _a[_i];\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName) {\n    /*jshint validthis: true */\n    var element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(\"element\\\" metadata for an Array must be defined in the \" +\n            (\"mapper and it must of type \\\"object\\\" in \" + objectName));\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        var tempArray = [];\n        for (var i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], objectName + \"[\" + i + \"]\");\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        var discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName != undefined) {\n            var discriminatorValue = object[discriminatorName];\n            if (discriminatorValue != undefined) {\n                var typeName = mapper.type.uberParent || mapper.type.className;\n                var indexDiscriminator = discriminatorValue === typeName\n                    ? discriminatorValue\n                    : typeName + \".\" + discriminatorValue;\n                var polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return mapper.type.polymorphicDiscriminator\n        || getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent)\n        || getPolymorphicDiscriminatorSafely(serializer, mapper.type.className);\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName && serializer.modelMappers[typeName] && serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n// TODO: why is this here?\nexport function serializeObject(toSerialize) {\n    if (toSerialize == undefined)\n        return undefined;\n    if (toSerialize instanceof Uint8Array) {\n        toSerialize = base64.encodeByteArray(toSerialize);\n        return toSerialize;\n    }\n    else if (toSerialize instanceof Date) {\n        return toSerialize.toISOString();\n    }\n    else if (Array.isArray(toSerialize)) {\n        var array = [];\n        for (var i = 0; i < toSerialize.length; i++) {\n            array.push(serializeObject(toSerialize[i]));\n        }\n        return array;\n    }\n    else if (typeof toSerialize === \"object\") {\n        var dictionary = {};\n        for (var property in toSerialize) {\n            dictionary[property] = serializeObject(toSerialize[property]);\n        }\n        return dictionary;\n    }\n    return toSerialize;\n}\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum(o) {\n    var result = {};\n    for (var _i = 0, o_1 = o; _i < o_1.length; _i++) {\n        var key = o_1[_i];\n        result[key] = key;\n    }\n    return result;\n}\nexport var MapperType = strEnum([\n    \"Base64Url\",\n    \"Boolean\",\n    \"ByteArray\",\n    \"Composite\",\n    \"Date\",\n    \"DateTime\",\n    \"DateTimeRfc1123\",\n    \"Dictionary\",\n    \"Enum\",\n    \"Number\",\n    \"Object\",\n    \"Sequence\",\n    \"String\",\n    \"Stream\",\n    \"TimeSpan\",\n    \"UnixTime\"\n]);\n//# sourceMappingURL=serializer.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n *\n * @constructor\n */\nvar WebResource = /** @class */ (function () {\n    function WebResource(url, method, body, query, headers, streamResponseBody, withCredentials, abortSignal, timeout, onUploadProgress, onDownloadProgress) {\n        this.streamResponseBody = streamResponseBody;\n        this.url = url || \"\";\n        this.method = method || \"GET\";\n        this.headers = (headers instanceof HttpHeaders ? headers : new HttpHeaders(headers));\n        this.body = body;\n        this.query = query;\n        this.formData = undefined;\n        this.withCredentials = withCredentials || false;\n        this.abortSignal = abortSignal;\n        this.timeout = timeout || 0;\n        this.onUploadProgress = onUploadProgress;\n        this.onDownloadProgress = onDownloadProgress;\n    }\n    /**\n     * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n     * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n     * mentioned properties are not defined.\n     */\n    WebResource.prototype.validateRequestProperties = function () {\n        if (!this.method) {\n            throw new Error(\"WebResource.method is required.\");\n        }\n        if (!this.url) {\n            throw new Error(\"WebResource.url is required.\");\n        }\n    };\n    /**\n     * Prepares the request.\n     * @param {RequestPrepareOptions} options Options to provide for preparing the request.\n     * @returns {WebResource} Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n     */\n    WebResource.prototype.prepare = function (options) {\n        if (!options) {\n            throw new Error(\"options object is required\");\n        }\n        if (options.method == undefined || typeof options.method.valueOf() !== \"string\") {\n            throw new Error(\"options.method must be a string.\");\n        }\n        if (options.url && options.pathTemplate) {\n            throw new Error(\"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\");\n        }\n        if ((options.pathTemplate == undefined || typeof options.pathTemplate.valueOf() !== \"string\") && (options.url == undefined || typeof options.url.valueOf() !== \"string\")) {\n            throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n        }\n        // set the url if it is provided.\n        if (options.url) {\n            if (typeof options.url !== \"string\") {\n                throw new Error(\"options.url must be of type \\\"string\\\".\");\n            }\n            this.url = options.url;\n        }\n        // set the method\n        if (options.method) {\n            var validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n            if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n                throw new Error(\"The provided method \\\"\" + options.method + \"\\\" is invalid. Supported HTTP methods are: \" + JSON.stringify(validMethods));\n            }\n        }\n        this.method = options.method.toUpperCase();\n        // construct the url if path template is provided\n        if (options.pathTemplate) {\n            var pathTemplate_1 = options.pathTemplate, pathParameters_1 = options.pathParameters;\n            if (typeof pathTemplate_1 !== \"string\") {\n                throw new Error(\"options.pathTemplate must be of type \\\"string\\\".\");\n            }\n            if (!options.baseUrl) {\n                options.baseUrl = \"https://management.azure.com\";\n            }\n            var baseUrl = options.baseUrl;\n            var url_1 = baseUrl + (baseUrl.endsWith(\"/\") ? \"\" : \"/\") + (pathTemplate_1.startsWith(\"/\") ? pathTemplate_1.slice(1) : pathTemplate_1);\n            var segments = url_1.match(/({\\w*\\s*\\w*})/ig);\n            if (segments && segments.length) {\n                if (!pathParameters_1) {\n                    throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" has been provided. Hence, options.pathParameters must also be provided.\");\n                }\n                segments.forEach(function (item) {\n                    var pathParamName = item.slice(1, -1);\n                    var pathParam = pathParameters_1[pathParamName];\n                    if (pathParam === null || pathParam === undefined || !(typeof pathParam === \"string\" || typeof pathParam === \"object\")) {\n                        throw new Error(\"pathTemplate: \" + pathTemplate_1 + \" contains the path parameter \" + pathParamName +\n                            (\" however, it is not present in \" + pathParameters_1 + \" - \" + JSON.stringify(pathParameters_1, undefined, 2) + \".\") +\n                            (\"The value of the path parameter can either be a \\\"string\\\" of the form { \" + pathParamName + \": \\\"some sample value\\\" } or \") +\n                            (\"it can be an \\\"object\\\" of the form { \\\"\" + pathParamName + \"\\\": { value: \\\"some sample value\\\", skipUrlEncoding: true } }.\"));\n                    }\n                    if (typeof pathParam.valueOf() === \"string\") {\n                        url_1 = url_1.replace(item, encodeURIComponent(pathParam));\n                    }\n                    if (typeof pathParam.valueOf() === \"object\") {\n                        if (!pathParam.value) {\n                            throw new Error(\"options.pathParameters[\" + pathParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (pathParam.skipUrlEncoding) {\n                            url_1 = url_1.replace(item, pathParam.value);\n                        }\n                        else {\n                            url_1 = url_1.replace(item, encodeURIComponent(pathParam.value));\n                        }\n                    }\n                });\n            }\n            this.url = url_1;\n        }\n        // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n        if (options.queryParameters) {\n            var queryParameters = options.queryParameters;\n            if (typeof queryParameters !== \"object\") {\n                throw new Error(\"options.queryParameters must be of type object. It should be a JSON object \" +\n                    \"of \\\"query-parameter-name\\\" as the key and the \\\"query-parameter-value\\\" as the value. \" +\n                    \"The \\\"query-parameter-value\\\" may be fo type \\\"string\\\" or an \\\"object\\\" of the form { value: \\\"query-parameter-value\\\", skipUrlEncoding: true }.\");\n            }\n            // append question mark if it is not present in the url\n            if (this.url && this.url.indexOf(\"?\") === -1) {\n                this.url += \"?\";\n            }\n            // construct queryString\n            var queryParams = [];\n            // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n            this.query = {};\n            for (var queryParamName in queryParameters) {\n                var queryParam = queryParameters[queryParamName];\n                if (queryParam) {\n                    if (typeof queryParam === \"string\") {\n                        queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n                        this.query[queryParamName] = encodeURIComponent(queryParam);\n                    }\n                    else if (typeof queryParam === \"object\") {\n                        if (!queryParam.value) {\n                            throw new Error(\"options.queryParameters[\" + queryParamName + \"] is of type \\\"object\\\" but it does not contain a \\\"value\\\" property.\");\n                        }\n                        if (queryParam.skipUrlEncoding) {\n                            queryParams.push(queryParamName + \"=\" + queryParam.value);\n                            this.query[queryParamName] = queryParam.value;\n                        }\n                        else {\n                            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n                            this.query[queryParamName] = encodeURIComponent(queryParam.value);\n                        }\n                    }\n                }\n            } // end-of-for\n            // append the queryString\n            this.url += queryParams.join(\"&\");\n        }\n        // add headers to the request if they are provided\n        if (options.headers) {\n            var headers = options.headers;\n            for (var _i = 0, _a = Object.keys(options.headers); _i < _a.length; _i++) {\n                var headerName = _a[_i];\n                this.headers.set(headerName, headers[headerName]);\n            }\n        }\n        // ensure accept-language is set correctly\n        if (!this.headers.get(\"accept-language\")) {\n            this.headers.set(\"accept-language\", \"en-US\");\n        }\n        // ensure the request-id is set correctly\n        if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n            this.headers.set(\"x-ms-client-request-id\", generateUuid());\n        }\n        // default\n        if (!this.headers.get(\"Content-Type\")) {\n            this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n        }\n        // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicilty\n        this.body = options.body;\n        if (options.body != undefined) {\n            // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n            if (options.bodyIsStream) {\n                if (!this.headers.get(\"Transfer-Encoding\")) {\n                    this.headers.set(\"Transfer-Encoding\", \"chunked\");\n                }\n                if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n                    this.headers.set(\"Content-Type\", \"application/octet-stream\");\n                }\n            }\n            else {\n                if (options.serializationMapper) {\n                    this.body = new Serializer(options.mappers).serialize(options.serializationMapper, options.body, \"requestBody\");\n                }\n                if (!options.disableJsonStringifyOnBody) {\n                    this.body = JSON.stringify(options.body);\n                }\n            }\n        }\n        this.abortSignal = options.abortSignal;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.onUploadProgress = options.onUploadProgress;\n        return this;\n    };\n    /**\n     * Clone this WebResource HTTP request object.\n     * @returns {WebResource} The clone of this WebResource HTTP request object.\n     */\n    WebResource.prototype.clone = function () {\n        var result = new WebResource(this.url, this.method, this.body, this.query, this.headers && this.headers.clone(), this.streamResponseBody, this.withCredentials, this.abortSignal, this.timeout, this.onUploadProgress, this.onDownloadProgress);\n        if (this.formData) {\n            result.formData = this.formData;\n        }\n        if (this.operationSpec) {\n            result.operationSpec = this.operationSpec;\n        }\n        if (this.shouldDeserialize) {\n            result.shouldDeserialize = this.shouldDeserialize;\n        }\n        if (this.operationResponseGetter) {\n            result.operationResponseGetter = this.operationResponseGetter;\n        }\n        return result;\n    };\n    return WebResource;\n}());\nexport { WebResource };\n//# sourceMappingURL=webResource.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport var HttpPipelineLogLevel;\n(function (HttpPipelineLogLevel) {\n    /**\n     * A log level that indicates that no logs will be logged.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"OFF\"] = 0] = \"OFF\";\n    /**\n     * An error log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"ERROR\"] = 1] = \"ERROR\";\n    /**\n     * A warning log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"WARNING\"] = 2] = \"WARNING\";\n    /**\n     * An information log.\n     */\n    HttpPipelineLogLevel[HttpPipelineLogLevel[\"INFO\"] = 3] = \"INFO\";\n})(HttpPipelineLogLevel || (HttpPipelineLogLevel = {}));\n//# sourceMappingURL=httpPipelineLogLevel.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nvar RestError = /** @class */ (function (_super) {\n    tslib_1.__extends(RestError, _super);\n    function RestError(message, code, statusCode, request, response, body) {\n        var _this = _super.call(this, message) || this;\n        _this.code = code;\n        _this.statusCode = statusCode;\n        _this.request = request;\n        _this.response = response;\n        _this.body = body;\n        Object.setPrototypeOf(_this, RestError.prototype);\n        return _this;\n    }\n    RestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n    RestError.REQUEST_ABORTED_ERROR = \"REQUEST_ABORTED_ERROR\";\n    RestError.PARSE_ERROR = \"PARSE_ERROR\";\n    return RestError;\n}(Error));\nexport { RestError };\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"./httpHeaders\";\nimport { RestError } from \"./restError\";\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nvar XhrHttpClient = /** @class */ (function () {\n    function XhrHttpClient() {\n    }\n    XhrHttpClient.prototype.sendRequest = function (request) {\n        var xhr = new XMLHttpRequest();\n        var abortSignal = request.abortSignal;\n        if (abortSignal) {\n            var listener_1 = function () {\n                xhr.abort();\n            };\n            abortSignal.addEventListener(\"abort\", listener_1);\n            xhr.addEventListener(\"readystatechange\", function () {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    abortSignal.removeEventListener(\"abort\", listener_1);\n                }\n            });\n        }\n        addProgressListener(xhr.upload, request.onUploadProgress);\n        addProgressListener(xhr, request.onDownloadProgress);\n        if (request.formData) {\n            var formData = request.formData;\n            var requestForm_1 = new FormData();\n            var appendFormValue = function (key, value) {\n                if (value && value.hasOwnProperty(\"value\") && value.hasOwnProperty(\"options\")) {\n                    requestForm_1.append(key, value.value, value.options);\n                }\n                else {\n                    requestForm_1.append(key, value);\n                }\n            };\n            for (var _i = 0, _a = Object.keys(formData); _i < _a.length; _i++) {\n                var formKey = _a[_i];\n                var formValue = formData[formKey];\n                if (Array.isArray(formValue)) {\n                    for (var j = 0; j < formValue.length; j++) {\n                        appendFormValue(formKey, formValue[j]);\n                    }\n                }\n                else {\n                    appendFormValue(formKey, formValue);\n                }\n            }\n            request.body = requestForm_1;\n            request.formData = undefined;\n            var contentType = request.headers.get(\"Content-Type\");\n            if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                // browser will automatically apply a suitable content-type header\n                request.headers.remove(\"Content-Type\");\n            }\n        }\n        xhr.open(request.method, request.url);\n        xhr.timeout = request.timeout;\n        xhr.withCredentials = request.withCredentials;\n        for (var _b = 0, _c = request.headers.headersArray(); _b < _c.length; _b++) {\n            var header = _c[_b];\n            xhr.setRequestHeader(header.name, header.value);\n        }\n        xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n        // tslint:disable-next-line:no-null-keyword\n        xhr.send(request.body === undefined ? null : request.body);\n        if (request.streamResponseBody) {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"readystatechange\", function () {\n                    // Resolve as soon as headers are loaded\n                    if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n                        var blobBody = new Promise(function (resolve, reject) {\n                            xhr.addEventListener(\"load\", function () {\n                                resolve(xhr.response);\n                            });\n                            rejectOnTerminalEvent(request, xhr, reject);\n                        });\n                        resolve({\n                            request: request,\n                            status: xhr.status,\n                            headers: parseHeaders(xhr),\n                            blobBody: blobBody\n                        });\n                    }\n                });\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n        else {\n            return new Promise(function (resolve, reject) {\n                xhr.addEventListener(\"load\", function () { return resolve({\n                    request: request,\n                    status: xhr.status,\n                    headers: parseHeaders(xhr),\n                    bodyAsText: xhr.responseText\n                }); });\n                rejectOnTerminalEvent(request, xhr, reject);\n            });\n        }\n    };\n    return XhrHttpClient;\n}());\nexport { XhrHttpClient };\nfunction addProgressListener(xhr, listener) {\n    if (listener) {\n        xhr.addEventListener(\"progress\", function (rawEvent) { return listener({\n            loadedBytes: rawEvent.loaded\n        }); });\n    }\n}\n// exported locally for testing\nexport function parseHeaders(xhr) {\n    var responseHeaders = new HttpHeaders();\n    var headerLines = xhr.getAllResponseHeaders().trim().split(/[\\r\\n]+/);\n    for (var _i = 0, headerLines_1 = headerLines; _i < headerLines_1.length; _i++) {\n        var line = headerLines_1[_i];\n        var index = line.indexOf(\":\");\n        var headerName = line.slice(0, index);\n        var headerValue = line.slice(index + 2);\n        responseHeaders.set(headerName, headerValue);\n    }\n    return responseHeaders;\n}\nfunction rejectOnTerminalEvent(request, xhr, reject) {\n    xhr.addEventListener(\"error\", function () { return reject(new RestError(\"Failed to send request to \" + request.url, RestError.REQUEST_SEND_ERROR, undefined, request)); });\n    xhr.addEventListener(\"abort\", function () { return reject(new RestError(\"The request was aborted\", RestError.REQUEST_ABORTED_ERROR, undefined, request)); });\n    xhr.addEventListener(\"timeout\", function () { return reject(new RestError(\"timeout of \" + xhr.timeout + \"ms exceeded\", RestError.REQUEST_SEND_ERROR, undefined, request)); });\n}\n//# sourceMappingURL=xhrHttpClient.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n    var result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { MapperType } from \"./serializer\";\nexport function isStreamOperation(operationSpec) {\n    var result = false;\n    for (var statusCode in operationSpec.responses) {\n        var operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper && operationResponse.bodyMapper.type.name === MapperType.Stream) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=operationSpec.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nvar parser = new DOMParser();\nexport function parseXML(str) {\n    try {\n        var dom = parser.parseFromString(str, \"application/xml\");\n        throwIfError(dom);\n        var obj = domToObject(dom.childNodes[0]);\n        return Promise.resolve(obj);\n    }\n    catch (err) {\n        return Promise.reject(err);\n    }\n}\nvar errorNS = \"\";\ntry {\n    errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0].namespaceURI;\n}\ncatch (ignored) {\n    // Most browsers will return a document containing <parsererror>, but IE will throw.\n}\nfunction throwIfError(dom) {\n    if (errorNS) {\n        var parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n        if (parserErrors.length) {\n            throw new Error(parserErrors.item(0).innerHTML);\n        }\n    }\n}\nfunction isElement(node) {\n    return !!node.attributes;\n}\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node) {\n    return isElement(node) && node.hasAttributes() ? node : undefined;\n}\nfunction domToObject(node) {\n    var result = {};\n    var childNodeCount = node.childNodes.length;\n    var firstChildNode = node.childNodes[0];\n    var onlyChildTextValue = (firstChildNode && childNodeCount === 1 && firstChildNode.nodeType === Node.TEXT_NODE && firstChildNode.nodeValue) || undefined;\n    var elementWithAttributes = asElementWithAttributes(node);\n    if (elementWithAttributes) {\n        result[\"$\"] = {};\n        for (var i = 0; i < elementWithAttributes.attributes.length; i++) {\n            var attr = elementWithAttributes.attributes[i];\n            result[\"$\"][attr.nodeName] = attr.nodeValue;\n        }\n        if (onlyChildTextValue) {\n            result[\"_\"] = onlyChildTextValue;\n        }\n    }\n    else if (childNodeCount === 0) {\n        result = \"\";\n    }\n    else if (onlyChildTextValue) {\n        result = onlyChildTextValue;\n    }\n    if (!onlyChildTextValue) {\n        for (var i = 0; i < childNodeCount; i++) {\n            var child = node.childNodes[i];\n            // Ignore leading/trailing whitespace nodes\n            if (child.nodeType !== Node.TEXT_NODE) {\n                var childObject = domToObject(child);\n                if (!result[child.nodeName]) {\n                    result[child.nodeName] = childObject;\n                }\n                else if (Array.isArray(result[child.nodeName])) {\n                    result[child.nodeName].push(childObject);\n                }\n                else {\n                    result[child.nodeName] = [result[child.nodeName], childObject];\n                }\n            }\n        }\n    }\n    return result;\n}\n// tslint:disable-next-line:no-null-keyword\nvar doc = document.implementation.createDocument(null, null, null);\nvar serializer = new XMLSerializer();\nexport function stringifyXML(obj, opts) {\n    var rootName = opts && opts.rootName || \"root\";\n    var dom = buildNode(obj, rootName)[0];\n    return '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom);\n}\nfunction buildAttributes(attrs) {\n    var result = [];\n    for (var _i = 0, _a = Object.keys(attrs); _i < _a.length; _i++) {\n        var key = _a[_i];\n        var attr = doc.createAttribute(key);\n        attr.value = attrs[key].toString();\n        result.push(attr);\n    }\n    return result;\n}\nfunction buildNode(obj, elementName) {\n    if (typeof obj === \"string\" || typeof obj === \"number\" || typeof obj === \"boolean\") {\n        var elem = doc.createElement(elementName);\n        elem.textContent = obj.toString();\n        return [elem];\n    }\n    else if (Array.isArray(obj)) {\n        var result = [];\n        for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n            var arrayElem = obj_1[_i];\n            for (var _a = 0, _b = buildNode(arrayElem, elementName); _a < _b.length; _a++) {\n                var child = _b[_a];\n                result.push(child);\n            }\n        }\n        return result;\n    }\n    else if (typeof obj === \"object\") {\n        var elem = doc.createElement(elementName);\n        for (var _c = 0, _d = Object.keys(obj); _c < _d.length; _c++) {\n            var key = _d[_c];\n            if (key === \"$\") {\n                for (var _e = 0, _f = buildAttributes(obj[key]); _e < _f.length; _e++) {\n                    var attr = _f[_e];\n                    elem.attributes.setNamedItem(attr);\n                }\n            }\n            else {\n                for (var _g = 0, _h = buildNode(obj[key], key); _g < _h.length; _g++) {\n                    var child = _h[_g];\n                    elem.appendChild(child);\n                }\n            }\n        }\n        return [elem];\n    }\n    else {\n        throw new Error(\"Illegal value passed to buildObject: \" + obj);\n    }\n}\n//# sourceMappingURL=xml.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nvar BaseRequestPolicy = /** @class */ (function () {\n    function BaseRequestPolicy(_nextPolicy, _options) {\n        this._nextPolicy = _nextPolicy;\n        this._options = _options;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    BaseRequestPolicy.prototype.shouldLog = function (logLevel) {\n        return this._options.shouldLog(logLevel);\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    BaseRequestPolicy.prototype.log = function (logLevel, message) {\n        this._options.log(logLevel, message);\n    };\n    return BaseRequestPolicy;\n}());\nexport { BaseRequestPolicy };\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nvar RequestPolicyOptions = /** @class */ (function () {\n    function RequestPolicyOptions(_logger) {\n        this._logger = _logger;\n    }\n    /**\n     * Get whether or not a log with the provided log level should be logged.\n     * @param logLevel The log level of the log that will be logged.\n     * @returns Whether or not a log with the provided log level should be logged.\n     */\n    RequestPolicyOptions.prototype.shouldLog = function (logLevel) {\n        return !!this._logger &&\n            logLevel !== HttpPipelineLogLevel.OFF &&\n            logLevel <= this._logger.minimumLogLevel;\n    };\n    /**\n     * Attempt to log the provided message to the provided logger. If no logger was provided or if\n     * the log level does not meat the logger's threshold, then nothing will be logged.\n     * @param logLevel The log level of this log.\n     * @param message The message of this log.\n     */\n    RequestPolicyOptions.prototype.log = function (logLevel, message) {\n        if (this._logger && this.shouldLog(logLevel)) {\n            this._logger.log(logLevel, message);\n        }\n    };\n    return RequestPolicyOptions;\n}());\nexport { RequestPolicyOptions };\n//# sourceMappingURL=requestPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { isStreamOperation } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { MapperType } from \"../serializer\";\nimport * as utils from \"../util/utils\";\nimport { parseXML } from \"../util/xml\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(deserializationContentTypes) {\n    return {\n        create: function (nextPolicy, options) {\n            return new DeserializationPolicy(nextPolicy, deserializationContentTypes, options);\n        }\n    };\n}\nexport var defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport var defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nvar DeserializationPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(DeserializationPolicy, _super);\n    function DeserializationPolicy(nextPolicy, deserializationContentTypes, options) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.jsonContentTypes = deserializationContentTypes && deserializationContentTypes.json || defaultJsonContentTypes;\n        _this.xmlContentTypes = deserializationContentTypes && deserializationContentTypes.xml || defaultXmlContentTypes;\n        return _this;\n    }\n    DeserializationPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy.sendRequest(request).then(function (response) { return deserializeResponseBody(_this.jsonContentTypes, _this.xmlContentTypes, response); })];\n            });\n        });\n    };\n    return DeserializationPolicy;\n}(BaseRequestPolicy));\nexport { DeserializationPolicy };\nfunction getOperationResponse(parsedResponse) {\n    var result;\n    var request = parsedResponse.request;\n    var operationSpec = request.operationSpec;\n    if (operationSpec) {\n        var operationResponseGetter = request.operationResponseGetter;\n        if (!operationResponseGetter) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    var shouldDeserialize = parsedResponse.request.shouldDeserialize;\n    var result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nexport function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response) {\n    return parse(jsonContentTypes, xmlContentTypes, response).then(function (parsedResponse) {\n        var shouldDeserialize = shouldDeserializeResponse(parsedResponse);\n        if (shouldDeserialize) {\n            var operationSpec = parsedResponse.request.operationSpec;\n            if (operationSpec && operationSpec.responses) {\n                var statusCode = parsedResponse.status;\n                var expectedStatusCodes = Object.keys(operationSpec.responses);\n                var hasNoExpectedStatusCodes = (expectedStatusCodes.length === 0 || (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n                var responseSpec = getOperationResponse(parsedResponse);\n                var isExpectedStatusCode = hasNoExpectedStatusCodes ? (200 <= statusCode && statusCode < 300) : !!responseSpec;\n                if (!isExpectedStatusCode) {\n                    var defaultResponseSpec = operationSpec.responses.default;\n                    if (defaultResponseSpec) {\n                        var initialErrorMessage = isStreamOperation(operationSpec)\n                            ? \"Unexpected status code: \" + statusCode\n                            : parsedResponse.bodyAsText;\n                        var error = new RestError(initialErrorMessage);\n                        error.statusCode = statusCode;\n                        error.request = utils.stripRequest(parsedResponse.request);\n                        error.response = utils.stripResponse(parsedResponse);\n                        var parsedErrorResponse = parsedResponse.parsedBody;\n                        try {\n                            if (parsedErrorResponse) {\n                                var defaultResponseBodyMapper = defaultResponseSpec.bodyMapper;\n                                if (defaultResponseBodyMapper && defaultResponseBodyMapper.serializedName === \"CloudError\") {\n                                    if (parsedErrorResponse.error) {\n                                        parsedErrorResponse = parsedErrorResponse.error;\n                                    }\n                                    if (parsedErrorResponse.code) {\n                                        error.code = parsedErrorResponse.code;\n                                    }\n                                    if (parsedErrorResponse.message) {\n                                        error.message = parsedErrorResponse.message;\n                                    }\n                                }\n                                else {\n                                    var internalError = parsedErrorResponse;\n                                    if (parsedErrorResponse.error) {\n                                        internalError = parsedErrorResponse.error;\n                                    }\n                                    error.code = internalError.code;\n                                    if (internalError.message) {\n                                        error.message = internalError.message;\n                                    }\n                                }\n                                if (defaultResponseBodyMapper) {\n                                    var valueToDeserialize = parsedErrorResponse;\n                                    if (operationSpec.isXML && defaultResponseBodyMapper.type.name === MapperType.Sequence) {\n                                        valueToDeserialize = typeof parsedErrorResponse === \"object\"\n                                            ? parsedErrorResponse[defaultResponseBodyMapper.xmlElementName]\n                                            : [];\n                                    }\n                                    error.body = operationSpec.serializer.deserialize(defaultResponseBodyMapper, valueToDeserialize, \"error.body\");\n                                }\n                            }\n                        }\n                        catch (defaultError) {\n                            error.message = \"Error \\\"\" + defaultError.message + \"\\\" occurred in deserializing the responseBody - \\\"\" + parsedResponse.bodyAsText + \"\\\" for the default response.\";\n                        }\n                        return Promise.reject(error);\n                    }\n                }\n                else if (responseSpec) {\n                    if (responseSpec.bodyMapper) {\n                        var valueToDeserialize = parsedResponse.parsedBody;\n                        if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n                            valueToDeserialize = typeof valueToDeserialize === \"object\" ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName] : [];\n                        }\n                        try {\n                            parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\");\n                        }\n                        catch (error) {\n                            var restError = new RestError(\"Error \" + error + \" occurred in deserializing the responseBody - \" + parsedResponse.bodyAsText);\n                            restError.request = utils.stripRequest(parsedResponse.request);\n                            restError.response = utils.stripResponse(parsedResponse);\n                            return Promise.reject(restError);\n                        }\n                    }\n                    else if (operationSpec.httpMethod === \"HEAD\") {\n                        // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n                        parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n                    }\n                    if (responseSpec.headersMapper) {\n                        parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.rawHeaders(), \"operationRes.parsedHeaders\");\n                    }\n                }\n            }\n        }\n        return Promise.resolve(parsedResponse);\n    });\n}\nfunction parse(jsonContentTypes, xmlContentTypes, operationResponse) {\n    var errorHandler = function (err) {\n        var msg = \"Error \\\"\" + err + \"\\\" occurred while parsing the response body - \" + operationResponse.bodyAsText + \".\";\n        var errCode = err.code || RestError.PARSE_ERROR;\n        var e = new RestError(msg, errCode, operationResponse.status, operationResponse.request, operationResponse, operationResponse.bodyAsText);\n        return Promise.reject(e);\n    };\n    if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n        var text_1 = operationResponse.bodyAsText;\n        var contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        var contentComponents = !contentType ? [] : contentType.split(\";\").map(function (component) { return component.toLowerCase(); });\n        if (contentComponents.length === 0 || contentComponents.some(function (component) { return jsonContentTypes.indexOf(component) !== -1; })) {\n            return new Promise(function (resolve) {\n                operationResponse.parsedBody = JSON.parse(text_1);\n                resolve(operationResponse);\n            }).catch(errorHandler);\n        }\n        else if (contentComponents.some(function (component) { return xmlContentTypes.indexOf(component) !== -1; })) {\n            return parseXML(text_1)\n                .then(function (body) {\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            })\n                .catch(errorHandler);\n        }\n    }\n    return Promise.resolve(operationResponse);\n}\n//# sourceMappingURL=deserializationPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { RestError } from \"../restError\";\nexport function exponentialRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        }\n    };\n}\nvar DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nvar DEFAULT_CLIENT_RETRY_COUNT = 3;\nvar DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nvar DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nvar ExponentialRetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(ExponentialRetryPolicy, _super);\n    /**\n     * @constructor\n     * @param {RequestPolicy} nextPolicy The next RequestPolicy in the pipeline chain.\n     * @param {RequestPolicyOptions} options The options for this RequestPolicy.\n     * @param {number} [retryCount]        The client retry count.\n     * @param {number} [retryInterval]     The client retry interval, in milliseconds.\n     * @param {number} [minRetryInterval]  The minimum retry interval, in milliseconds.\n     * @param {number} [maxRetryInterval]  The maximum retry interval, in milliseconds.\n     */\n    function ExponentialRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        function isNumber(n) { return typeof n === \"number\"; }\n        _this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.minRetryInterval = isNumber(minRetryInterval) ? minRetryInterval : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        _this.maxRetryInterval = isNumber(maxRetryInterval) ? maxRetryInterval : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    ExponentialRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy.sendRequest(request.clone())\n            .then(function (response) { return retry(_this, request, response); })\n            .catch(function (error) { return retry(_this, request, error.response, undefined, error); });\n    };\n    return ExponentialRetryPolicy;\n}(BaseRequestPolicy));\nexport { ExponentialRetryPolicy };\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(policy, statusCode, retryData) {\n    if (statusCode == undefined || (statusCode < 500 && statusCode !== 408) || statusCode === 501 || statusCode === 505) {\n        return false;\n    }\n    var currentCount;\n    if (!retryData) {\n        throw new Error(\"retryData for the ExponentialRetryPolicyFilter cannot be null.\");\n    }\n    else {\n        currentCount = (retryData && retryData.retryCount);\n    }\n    return (currentCount < policy.retryCount);\n}\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {ExponentialRetryPolicy} policy The ExponentialRetryPolicy that this function is being called against.\n * @param {RetryData} retryData  The retry data.\n * @param {RetryError} [err] The operation\"s error, if any.\n */\nfunction updateRetryData(policy, retryData, err) {\n    if (!retryData) {\n        retryData = {\n            retryCount: 0,\n            retryInterval: 0\n        };\n    }\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n    var boundedRandDelta = policy.retryInterval * 0.8 +\n        Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n    return retryData;\n}\nfunction retry(policy, request, response, retryData, requestError) {\n    retryData = updateRetryData(policy, retryData, requestError);\n    var isAborted = request.abortSignal && request.abortSignal.aborted;\n    if (!isAborted && shouldRetry(policy, response && response.status, retryData)) {\n        return utils.delay(retryData.retryInterval)\n            .then(function () { return policy._nextPolicy.sendRequest(request.clone()); })\n            .then(function (res) { return retry(policy, request, res, retryData, undefined); })\n            .catch(function (err) { return retry(policy, request, response, retryData, err); });\n    }\n    else if (isAborted || requestError || !response) {\n        // If the operation failed in the end, return all errors instead of just the last one\n        var err = retryData.error ||\n            new RestError(\"Failed to send the request.\", RestError.REQUEST_SEND_ERROR, response && response.status, response && response.request, response);\n        return Promise.reject(err);\n    }\n    else {\n        return Promise.resolve(response);\n    }\n}\n//# sourceMappingURL=exponentialRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n    if (requestIdHeaderName === void 0) { requestIdHeaderName = \"x-ms-client-request-id\"; }\n    return {\n        create: function (nextPolicy, options) {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        }\n    };\n}\nvar GenerateClientRequestIdPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(GenerateClientRequestIdPolicy, _super);\n    function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._requestIdHeaderName = _requestIdHeaderName;\n        return _this;\n    }\n    GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n        }\n        return this._nextPolicy.sendRequest(request);\n    };\n    return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy));\nexport { GenerateClientRequestIdPolicy };\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { Constants } from \"../util/constants\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nfunction getRuntimeInfo() {\n    var msRestRuntime = {\n        key: \"ms-rest-js\",\n        value: Constants.msRestVersion\n    };\n    return [msRestRuntime];\n}\nfunction getUserAgentString(telemetryInfo, keySeparator, valueSeparator) {\n    if (keySeparator === void 0) { keySeparator = \" \"; }\n    if (valueSeparator === void 0) { valueSeparator = \"/\"; }\n    return telemetryInfo.map(function (info) {\n        var value = info.value ? \"\" + valueSeparator + info.value : \"\";\n        return \"\" + info.key + value;\n    }).join(keySeparator);\n}\nexport function getDefaultUserAgentValue() {\n    var runtimeInfo = getRuntimeInfo();\n    var platformSpecificData = getPlatformSpecificData();\n    var userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n    return userAgent;\n}\nexport function userAgentPolicy(userAgentData) {\n    var key = (!userAgentData || userAgentData.key == undefined) ? getDefaultUserAgentKey() : userAgentData.key;\n    var value = (!userAgentData || userAgentData.value == undefined) ? getDefaultUserAgentValue() : userAgentData.value;\n    return {\n        create: function (nextPolicy, options) {\n            return new UserAgentPolicy(nextPolicy, options, key, value);\n        }\n    };\n}\nvar UserAgentPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(UserAgentPolicy, _super);\n    function UserAgentPolicy(_nextPolicy, _options, headerKey, headerValue) {\n        var _this = _super.call(this, _nextPolicy, _options) || this;\n        _this._nextPolicy = _nextPolicy;\n        _this._options = _options;\n        _this.headerKey = headerKey;\n        _this.headerValue = headerValue;\n        return _this;\n    }\n    UserAgentPolicy.prototype.sendRequest = function (request) {\n        this.addUserAgentHeader(request);\n        return this._nextPolicy.sendRequest(request);\n    };\n    UserAgentPolicy.prototype.addUserAgentHeader = function (request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        if (!request.headers.get(this.headerKey) && this.headerValue) {\n            request.headers.set(this.headerKey, this.headerValue);\n        }\n    };\n    return UserAgentPolicy;\n}(BaseRequestPolicy));\nexport { UserAgentPolicy };\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nexport function getDefaultUserAgentKey() {\n    return \"x-ms-command-name\";\n}\nexport function getPlatformSpecificData() {\n    var navigator = window.navigator;\n    var osInfo = {\n        key: \"OS\",\n        value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n    };\n    return [osInfo];\n}\n//# sourceMappingURL=msRestUserAgentPolicy.browser.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { replaceAll } from \"./util/utils\";\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nvar URLQuery = /** @class */ (function () {\n    function URLQuery() {\n        this._rawQuery = {};\n    }\n    /**\n     * Get whether or not there any query parameters in this URLQuery.\n     */\n    URLQuery.prototype.any = function () {\n        return Object.keys(this._rawQuery).length > 0;\n    };\n    /**\n     * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n     * empty, then this will attempt to remove an existing query parameter with the provided\n     * parameterName.\n     */\n    URLQuery.prototype.set = function (parameterName, parameterValue) {\n        if (parameterName) {\n            if (parameterValue != undefined) {\n                var newValue = Array.isArray(parameterValue) ? parameterValue : parameterValue.toString();\n                this._rawQuery[parameterName] = newValue;\n            }\n            else {\n                delete this._rawQuery[parameterName];\n            }\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided name. If no parameter exists with the\n     * provided parameter name, then undefined will be returned.\n     */\n    URLQuery.prototype.get = function (parameterName) {\n        return parameterName ? this._rawQuery[parameterName] : undefined;\n    };\n    /**\n     * Get the string representation of this query. The return value will not start with a \"?\".\n     */\n    URLQuery.prototype.toString = function () {\n        var result = \"\";\n        for (var parameterName in this._rawQuery) {\n            if (result) {\n                result += \"&\";\n            }\n            var parameterValue = this._rawQuery[parameterName];\n            if (Array.isArray(parameterValue)) {\n                var parameterStrings = [];\n                for (var _i = 0, parameterValue_1 = parameterValue; _i < parameterValue_1.length; _i++) {\n                    var parameterValueElement = parameterValue_1[_i];\n                    parameterStrings.push(parameterName + \"=\" + parameterValueElement);\n                }\n                result += parameterStrings.join(\"&\");\n            }\n            else {\n                result += parameterName + \"=\" + parameterValue;\n            }\n        }\n        return result;\n    };\n    /**\n     * Parse a URLQuery from the provided text.\n     */\n    URLQuery.parse = function (text) {\n        var result = new URLQuery();\n        if (text) {\n            if (text.startsWith(\"?\")) {\n                text = text.substring(1);\n            }\n            var currentState = \"ParameterName\";\n            var parameterName = \"\";\n            var parameterValue = \"\";\n            for (var i = 0; i < text.length; ++i) {\n                var currentCharacter = text[i];\n                switch (currentState) {\n                    case \"ParameterName\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                currentState = \"ParameterValue\";\n                                break;\n                            case \"&\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                break;\n                            default:\n                                parameterName += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"ParameterValue\":\n                        switch (currentCharacter) {\n                            case \"=\":\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"Invalid\";\n                                break;\n                            case \"&\":\n                                result.set(parameterName, parameterValue);\n                                parameterName = \"\";\n                                parameterValue = \"\";\n                                currentState = \"ParameterName\";\n                                break;\n                            default:\n                                parameterValue += currentCharacter;\n                                break;\n                        }\n                        break;\n                    case \"Invalid\":\n                        if (currentCharacter === \"&\") {\n                            currentState = \"ParameterName\";\n                        }\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n                }\n            }\n            if (currentState === \"ParameterValue\") {\n                result.set(parameterName, parameterValue);\n            }\n        }\n        return result;\n    };\n    return URLQuery;\n}());\nexport { URLQuery };\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nvar URLBuilder = /** @class */ (function () {\n    function URLBuilder() {\n    }\n    /**\n     * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n     * (such as a host, port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setScheme = function (scheme) {\n        if (!scheme) {\n            this._scheme = undefined;\n        }\n        else {\n            this.set(scheme, \"SCHEME\");\n        }\n    };\n    /**\n     * Get the scheme that has been set in this URL.\n     */\n    URLBuilder.prototype.getScheme = function () {\n        return this._scheme;\n    };\n    /**\n     * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n     * port, path, or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setHost = function (host) {\n        if (!host) {\n            this._host = undefined;\n        }\n        else {\n            this.set(host, \"SCHEME_OR_HOST\");\n        }\n    };\n    /**\n     * Get the host that has been set in this URL.\n     */\n    URLBuilder.prototype.getHost = function () {\n        return this._host;\n    };\n    /**\n     * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n     * path or query), those parts will be added to this URL as well.\n     */\n    URLBuilder.prototype.setPort = function (port) {\n        if (port == undefined || port === \"\") {\n            this._port = undefined;\n        }\n        else {\n            this.set(port.toString(), \"PORT\");\n        }\n    };\n    /**\n     * Get the port that has been set in this URL.\n     */\n    URLBuilder.prototype.getPort = function () {\n        return this._port;\n    };\n    /**\n     * Set the path for this URL. If the provided path contains a query, then it will be added to\n     * this URL as well.\n     */\n    URLBuilder.prototype.setPath = function (path) {\n        if (!path) {\n            this._path = undefined;\n        }\n        else {\n            if (path.indexOf(\"://\") !== -1) {\n                this.set(path, \"SCHEME\");\n            }\n            else {\n                this.set(path, \"PATH\");\n            }\n        }\n    };\n    /**\n     * Append the provided path to this URL's existing path. If the provided path contains a query,\n     * then it will be added to this URL as well.\n     */\n    URLBuilder.prototype.appendPath = function (path) {\n        if (path) {\n            var currentPath = this.getPath();\n            if (currentPath) {\n                if (!currentPath.endsWith(\"/\")) {\n                    currentPath += \"/\";\n                }\n                if (path.startsWith(\"/\")) {\n                    path = path.substring(1);\n                }\n                path = currentPath + path;\n            }\n            this.set(path, \"PATH\");\n        }\n    };\n    /**\n     * Get the path that has been set in this URL.\n     */\n    URLBuilder.prototype.getPath = function () {\n        return this._path;\n    };\n    /**\n     * Set the query in this URL.\n     */\n    URLBuilder.prototype.setQuery = function (query) {\n        if (!query) {\n            this._query = undefined;\n        }\n        else {\n            this._query = URLQuery.parse(query);\n        }\n    };\n    /**\n     * Set a query parameter with the provided name and value in this URL's query. If the provided\n     * query parameter value is undefined or empty, then the query parameter will be removed if it\n     * existed.\n     */\n    URLBuilder.prototype.setQueryParameter = function (queryParameterName, queryParameterValue) {\n        if (queryParameterName) {\n            if (!this._query) {\n                this._query = new URLQuery();\n            }\n            this._query.set(queryParameterName, queryParameterValue);\n        }\n    };\n    /**\n     * Get the value of the query parameter with the provided query parameter name. If no query\n     * parameter exists with the provided name, then undefined will be returned.\n     */\n    URLBuilder.prototype.getQueryParameterValue = function (queryParameterName) {\n        return this._query ? this._query.get(queryParameterName) : undefined;\n    };\n    /**\n     * Get the query in this URL.\n     */\n    URLBuilder.prototype.getQuery = function () {\n        return this._query ? this._query.toString() : undefined;\n    };\n    /**\n     * Set the parts of this URL by parsing the provided text using the provided startState.\n     */\n    URLBuilder.prototype.set = function (text, startState) {\n        var tokenizer = new URLTokenizer(text, startState);\n        while (tokenizer.next()) {\n            var token = tokenizer.current();\n            if (token) {\n                switch (token.type) {\n                    case \"SCHEME\":\n                        this._scheme = token.text || undefined;\n                        break;\n                    case \"HOST\":\n                        this._host = token.text || undefined;\n                        break;\n                    case \"PORT\":\n                        this._port = token.text || undefined;\n                        break;\n                    case \"PATH\":\n                        var tokenPath = token.text || undefined;\n                        if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n                            this._path = tokenPath;\n                        }\n                        break;\n                    case \"QUERY\":\n                        this._query = URLQuery.parse(token.text);\n                        break;\n                    default:\n                        throw new Error(\"Unrecognized URLTokenType: \" + token.type);\n                }\n            }\n        }\n    };\n    URLBuilder.prototype.toString = function () {\n        var result = \"\";\n        if (this._scheme) {\n            result += this._scheme + \"://\";\n        }\n        if (this._host) {\n            result += this._host;\n        }\n        if (this._port) {\n            result += \":\" + this._port;\n        }\n        if (this._path) {\n            if (!this._path.startsWith(\"/\")) {\n                result += \"/\";\n            }\n            result += this._path;\n        }\n        if (this._query && this._query.any()) {\n            result += \"?\" + this._query.toString();\n        }\n        return result;\n    };\n    /**\n     * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n     * replaceValue.\n     */\n    URLBuilder.prototype.replaceAll = function (searchValue, replaceValue) {\n        if (searchValue) {\n            this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n            this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n            this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n            this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n            this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n        }\n    };\n    URLBuilder.parse = function (text) {\n        var result = new URLBuilder();\n        result.set(text, \"SCHEME_OR_HOST\");\n        return result;\n    };\n    return URLBuilder;\n}());\nexport { URLBuilder };\nvar URLToken = /** @class */ (function () {\n    function URLToken(text, type) {\n        this.text = text;\n        this.type = type;\n    }\n    URLToken.scheme = function (text) {\n        return new URLToken(text, \"SCHEME\");\n    };\n    URLToken.host = function (text) {\n        return new URLToken(text, \"HOST\");\n    };\n    URLToken.port = function (text) {\n        return new URLToken(text, \"PORT\");\n    };\n    URLToken.path = function (text) {\n        return new URLToken(text, \"PATH\");\n    };\n    URLToken.query = function (text) {\n        return new URLToken(text, \"QUERY\");\n    };\n    return URLToken;\n}());\nexport { URLToken };\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character) {\n    var characterCode = character.charCodeAt(0);\n    return (48 /* '0' */ <= characterCode && characterCode <= 57 /* '9' */) ||\n        (65 /* 'A' */ <= characterCode && characterCode <= 90 /* 'Z' */) ||\n        (97 /* 'a' */ <= characterCode && characterCode <= 122 /* 'z' */);\n}\n/**\n * A class that tokenizes URL strings.\n */\nvar URLTokenizer = /** @class */ (function () {\n    function URLTokenizer(_text, state) {\n        this._text = _text;\n        this._textLength = _text ? _text.length : 0;\n        this._currentState = state != undefined ? state : \"SCHEME_OR_HOST\";\n        this._currentIndex = 0;\n    }\n    /**\n     * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n     * hasn't started or has finished tokenizing.\n     */\n    URLTokenizer.prototype.current = function () {\n        return this._currentToken;\n    };\n    /**\n     * Advance to the next URLToken and return whether or not a URLToken was found.\n     */\n    URLTokenizer.prototype.next = function () {\n        if (!hasCurrentCharacter(this)) {\n            this._currentToken = undefined;\n        }\n        else {\n            switch (this._currentState) {\n                case \"SCHEME\":\n                    nextScheme(this);\n                    break;\n                case \"SCHEME_OR_HOST\":\n                    nextSchemeOrHost(this);\n                    break;\n                case \"HOST\":\n                    nextHost(this);\n                    break;\n                case \"PORT\":\n                    nextPort(this);\n                    break;\n                case \"PATH\":\n                    nextPath(this);\n                    break;\n                case \"QUERY\":\n                    nextQuery(this);\n                    break;\n                default:\n                    throw new Error(\"Unrecognized URLTokenizerState: \" + this._currentState);\n            }\n        }\n        return !!this._currentToken;\n    };\n    return URLTokenizer;\n}());\nexport { URLTokenizer };\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer) {\n    var result = \"\";\n    if (tokenizer._currentIndex < tokenizer._textLength) {\n        result = tokenizer._text.substring(tokenizer._currentIndex);\n        tokenizer._currentIndex = tokenizer._textLength;\n    }\n    return result;\n}\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer) {\n    return tokenizer._currentIndex < tokenizer._textLength;\n}\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer) {\n    return tokenizer._text[tokenizer._currentIndex];\n}\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer, step) {\n    if (hasCurrentCharacter(tokenizer)) {\n        if (!step) {\n            step = 1;\n        }\n        tokenizer._currentIndex += step;\n    }\n}\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer, charactersToPeek) {\n    var endIndex = tokenizer._currentIndex + charactersToPeek;\n    if (tokenizer._textLength < endIndex) {\n        endIndex = tokenizer._textLength;\n    }\n    return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer, condition) {\n    var result = \"\";\n    while (hasCurrentCharacter(tokenizer)) {\n        var currentCharacter = getCurrentCharacter(tokenizer);\n        if (!condition(currentCharacter)) {\n            break;\n        }\n        else {\n            result += currentCharacter;\n            nextCharacter(tokenizer);\n        }\n    }\n    return result;\n}\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer) {\n    return readWhile(tokenizer, function (character) { return isAlphaNumericCharacter(character); });\n}\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer) {\n    var terminatingCharacters = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        terminatingCharacters[_i - 1] = arguments[_i];\n    }\n    return readWhile(tokenizer, function (character) { return terminatingCharacters.indexOf(character) === -1; });\n}\nfunction nextScheme(tokenizer) {\n    var scheme = readWhileLetterOrDigit(tokenizer);\n    tokenizer._currentToken = URLToken.scheme(scheme);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"HOST\";\n    }\n}\nfunction nextSchemeOrHost(tokenizer) {\n    var schemeOrHost = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        if (peekCharacters(tokenizer, 3) === \"://\") {\n            tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n            tokenizer._currentState = \"HOST\";\n        }\n        else {\n            tokenizer._currentToken = URLToken.host(schemeOrHost);\n            tokenizer._currentState = \"PORT\";\n        }\n    }\n    else {\n        tokenizer._currentToken = URLToken.host(schemeOrHost);\n        if (getCurrentCharacter(tokenizer) === \"/\") {\n            tokenizer._currentState = \"PATH\";\n        }\n        else {\n            tokenizer._currentState = \"QUERY\";\n        }\n    }\n}\nfunction nextHost(tokenizer) {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n        nextCharacter(tokenizer, 3);\n    }\n    var host = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n    tokenizer._currentToken = URLToken.host(host);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \":\") {\n        tokenizer._currentState = \"PORT\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPort(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \":\") {\n        nextCharacter(tokenizer);\n    }\n    var port = readUntilCharacter(tokenizer, \"/\", \"?\");\n    tokenizer._currentToken = URLToken.port(port);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else if (getCurrentCharacter(tokenizer) === \"/\") {\n        tokenizer._currentState = \"PATH\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextPath(tokenizer) {\n    var path = readUntilCharacter(tokenizer, \"?\");\n    tokenizer._currentToken = URLToken.path(path);\n    if (!hasCurrentCharacter(tokenizer)) {\n        tokenizer._currentState = \"DONE\";\n    }\n    else {\n        tokenizer._currentState = \"QUERY\";\n    }\n}\nfunction nextQuery(tokenizer) {\n    if (getCurrentCharacter(tokenizer) === \"?\") {\n        nextCharacter(tokenizer);\n    }\n    var query = readRemaining(tokenizer);\n    tokenizer._currentToken = URLToken.query(query);\n    tokenizer._currentState = \"DONE\";\n}\n//# sourceMappingURL=url.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { URLBuilder } from \"../url\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function redirectPolicy(maximumRetries) {\n    if (maximumRetries === void 0) { maximumRetries = 20; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RedirectPolicy(nextPolicy, options, maximumRetries);\n        }\n    };\n}\nvar RedirectPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(RedirectPolicy, _super);\n    function RedirectPolicy(nextPolicy, options, maxRetries) {\n        if (maxRetries === void 0) { maxRetries = 20; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.maxRetries = maxRetries;\n        return _this;\n    }\n    RedirectPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy.sendRequest(request).then(function (response) { return handleRedirect(_this, response, 0); });\n    };\n    return RedirectPolicy;\n}(BaseRequestPolicy));\nexport { RedirectPolicy };\nfunction handleRedirect(policy, response, currentRetries) {\n    var request = response.request, status = response.status;\n    var locationHeader = response.headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 || status === 307 || (status === 303 && request.method === \"POST\")) &&\n        (!policy.maxRetries || currentRetries < policy.maxRetries)) {\n        var builder = URLBuilder.parse(request.url);\n        builder.setPath(locationHeader);\n        request.url = builder.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n        }\n        return policy._nextPolicy.sendRequest(request)\n            .then(function (res) { return handleRedirect(policy, res, currentRetries + 1); });\n    }\n    return Promise.resolve(response);\n}\n//# sourceMappingURL=redirectPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function rpRegistrationPolicy(retryTimeout) {\n    if (retryTimeout === void 0) { retryTimeout = 30; }\n    return {\n        create: function (nextPolicy, options) {\n            return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n        }\n    };\n}\nvar RPRegistrationPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(RPRegistrationPolicy, _super);\n    function RPRegistrationPolicy(nextPolicy, options, _retryTimeout) {\n        if (_retryTimeout === void 0) { _retryTimeout = 30; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._retryTimeout = _retryTimeout;\n        return _this;\n    }\n    RPRegistrationPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy.sendRequest(request.clone())\n            .then(function (response) { return registerIfNeeded(_this, request, response); });\n    };\n    return RPRegistrationPolicy;\n}(BaseRequestPolicy));\nexport { RPRegistrationPolicy };\nfunction registerIfNeeded(policy, request, response) {\n    if (response.status === 409) {\n        var rpName = checkRPNotRegisteredError(response.bodyAsText);\n        if (rpName) {\n            var urlPrefix = extractSubscriptionUrl(request.url);\n            return registerRP(policy, urlPrefix, rpName, request)\n                // Autoregistration of ${provider} failed for some reason. We will not return this error\n                // instead will return the initial response with 409 status code back to the user.\n                // do nothing here as we are returning the original response at the end of this method.\n                .catch(function () { return false; })\n                .then(function (registrationStatus) {\n                if (registrationStatus) {\n                    // Retry the original request. We have to change the x-ms-client-request-id\n                    // otherwise Azure endpoint will return the initial 409 (cached) response.\n                    request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n                    return policy._nextPolicy.sendRequest(request.clone());\n                }\n                return response;\n            });\n        }\n    }\n    return Promise.resolve(response);\n}\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param {WebResource} originalRequest The original request\n * @param {boolean} reuseUrlToo Should the url from the original request be reused as well. Default false.\n * @returns {object} A new request object with desired headers.\n */\nfunction getRequestEssentials(originalRequest, reuseUrlToo) {\n    if (reuseUrlToo === void 0) { reuseUrlToo = false; }\n    var reqOptions = {\n        headers: {}\n    };\n    if (reuseUrlToo) {\n        reqOptions.url = originalRequest.url;\n    }\n    // Copy over the original request headers. This will get us the auth token and other useful stuff from\n    // the original request header. Thus making it easier to make requests from this filter.\n    for (var h in originalRequest.headers) {\n        reqOptions.headers.set(h, originalRequest.headers.get(h));\n    }\n    // We have to change the x-ms-client-request-id otherwise Azure endpoint\n    // will return the initial 409 (cached) response.\n    reqOptions.headers[\"x-ms-client-request-id\"] = utils.generateUuid();\n    // Set content-type to application/json\n    reqOptions.headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n    return reqOptions;\n}\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param {string} body The response body received after making the original request.\n * @returns {string} The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body) {\n    var result, responseBody;\n    if (body) {\n        try {\n            responseBody = JSON.parse(body);\n        }\n        catch (err) {\n            // do nothing;\n        }\n        if (responseBody && responseBody.error && responseBody.error.message &&\n            responseBody.error.code && responseBody.error.code === \"MissingSubscriptionRegistration\") {\n            var matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n            if (matchRes) {\n                result = matchRes.pop();\n            }\n        }\n    }\n    return result;\n}\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} url The original request url\n * @returns {string} The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url) {\n    var result;\n    var matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//ig);\n    if (matchRes && matchRes[0]) {\n        result = matchRes[0];\n    }\n    else {\n        throw new Error(\"Unable to extract subscriptionId from the given url - \" + url + \".\");\n    }\n    return result;\n}\n/**\n * Registers the given provider.\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} urlPrefix https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param {string} provider The provider name to be registered.\n * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param {registrationCallback} callback The callback that handles the RP registration\n */\nfunction registerRP(policy, urlPrefix, provider, originalRequest) {\n    var postUrl = urlPrefix + \"providers/\" + provider + \"/register?api-version=2016-02-01\";\n    var getUrl = urlPrefix + \"providers/\" + provider + \"?api-version=2016-02-01\";\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.method = \"POST\";\n    reqOptions.url = postUrl;\n    return policy._nextPolicy.sendRequest(reqOptions)\n        .then(function (response) {\n        if (response.status !== 200) {\n            throw new Error(\"Autoregistration of \" + provider + \" failed. Please try registering manually.\");\n        }\n        return getRegistrationStatus(policy, getUrl, originalRequest);\n    });\n}\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param {RPRegistrationPolicy} policy The RPRegistrationPolicy this function is being called against.\n * @param {string} url The request url for polling\n * @param {WebResource} originalRequest The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns {Promise<boolean>} True if RP Registration is successful.\n */\nfunction getRegistrationStatus(policy, url, originalRequest) {\n    var reqOptions = getRequestEssentials(originalRequest);\n    reqOptions.url = url;\n    reqOptions.method = \"GET\";\n    return policy._nextPolicy.sendRequest(reqOptions).then(function (res) {\n        var obj = res.parsedBody;\n        if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n            return true;\n        }\n        else {\n            return utils.delay(policy._retryTimeout * 1000).then(function () { return getRegistrationStatus(policy, url, originalRequest); });\n        }\n    });\n}\n//# sourceMappingURL=rpRegistrationPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SigningPolicy(nextPolicy, options, authenticationProvider);\n        }\n    };\n}\nvar SigningPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(SigningPolicy, _super);\n    function SigningPolicy(nextPolicy, options, authenticationProvider) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.authenticationProvider = authenticationProvider;\n        return _this;\n    }\n    SigningPolicy.prototype.signRequest = function (request) {\n        return this.authenticationProvider.signRequest(request);\n    };\n    SigningPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this.signRequest(request).then(function (nextRequest) { return _this._nextPolicy.sendRequest(nextRequest); });\n    };\n    return SigningPolicy;\n}(BaseRequestPolicy));\nexport { SigningPolicy };\n//# sourceMappingURL=signingPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function systemErrorRetryPolicy(retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n    return {\n        create: function (nextPolicy, options) {\n            return new SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval);\n        }\n    };\n}\n/**\n * @class\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n *\n * @constructor\n * @param {number} retryCount        The client retry count.\n * @param {number} retryInterval     The client retry interval, in milliseconds.\n * @param {number} minRetryInterval  The minimum retry interval, in milliseconds.\n * @param {number} maxRetryInterval  The maximum retry interval, in milliseconds.\n */\nvar SystemErrorRetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(SystemErrorRetryPolicy, _super);\n    function SystemErrorRetryPolicy(nextPolicy, options, retryCount, retryInterval, minRetryInterval, maxRetryInterval) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\n        _this.DEFAULT_CLIENT_RETRY_COUNT = 3;\n        _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\n        _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n        _this.retryCount = typeof retryCount === \"number\" ? retryCount : _this.DEFAULT_CLIENT_RETRY_COUNT;\n        _this.retryInterval = typeof retryInterval === \"number\" ? retryInterval : _this.DEFAULT_CLIENT_RETRY_INTERVAL;\n        _this.minRetryInterval = typeof minRetryInterval === \"number\" ? minRetryInterval : _this.DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n        _this.maxRetryInterval = typeof maxRetryInterval === \"number\" ? maxRetryInterval : _this.DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n        return _this;\n    }\n    SystemErrorRetryPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy.sendRequest(request.clone()).then(function (response) { return retry(_this, request, response); });\n    };\n    return SystemErrorRetryPolicy;\n}(BaseRequestPolicy));\nexport { SystemErrorRetryPolicy };\n/**\n * Determines if the operation should be retried and how long to wait until the next retry.\n *\n * @param {number} statusCode The HTTP status code.\n * @param {RetryData} retryData  The retry data.\n * @return {boolean} True if the operation qualifies for a retry; false otherwise.\n */\nfunction shouldRetry(policy, retryData) {\n    var currentCount;\n    if (!retryData) {\n        throw new Error(\"retryData for the SystemErrorRetryPolicyFilter cannot be null.\");\n    }\n    else {\n        currentCount = (retryData && retryData.retryCount);\n    }\n    return (currentCount < policy.retryCount);\n}\n/**\n * Updates the retry data for the next attempt.\n *\n * @param {RetryData} retryData  The retry data.\n * @param {object} err        The operation\"s error, if any.\n */\nfunction updateRetryData(policy, retryData, err) {\n    if (!retryData) {\n        retryData = {\n            retryCount: 0,\n            retryInterval: 0\n        };\n    }\n    if (err) {\n        if (retryData.error) {\n            err.innerError = retryData.error;\n        }\n        retryData.error = err;\n    }\n    // Adjust retry count\n    retryData.retryCount++;\n    // Adjust retry interval\n    var incrementDelta = Math.pow(2, retryData.retryCount) - 1;\n    var boundedRandDelta = policy.retryInterval * 0.8 +\n        Math.floor(Math.random() * (policy.retryInterval * 1.2 - policy.retryInterval * 0.8));\n    incrementDelta *= boundedRandDelta;\n    retryData.retryInterval = Math.min(policy.minRetryInterval + incrementDelta, policy.maxRetryInterval);\n    return retryData;\n}\nfunction retry(policy, request, operationResponse, retryData, err) {\n    retryData = updateRetryData(policy, retryData, err);\n    if (err && err.code && shouldRetry(policy, retryData) &&\n        (err.code === \"ETIMEDOUT\" || err.code === \"ESOCKETTIMEDOUT\" || err.code === \"ECONNREFUSED\" ||\n            err.code === \"ECONNRESET\" || err.code === \"ENOENT\")) {\n        // If previous operation ended with an error and the policy allows a retry, do that\n        return utils.delay(retryData.retryInterval)\n            .then(function () { return policy._nextPolicy.sendRequest(request.clone()); })\n            .then(function (res) { return retry(policy, request, res, retryData, err); })\n            .catch(function (err) { return retry(policy, request, operationResponse, retryData, err); });\n    }\n    else {\n        if (err != undefined) {\n            // If the operation failed in the end, return all errors instead of just the last one\n            err = retryData.error;\n            return Promise.reject(err);\n        }\n        return Promise.resolve(operationResponse);\n    }\n}\n//# sourceMappingURL=systemErrorRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport var QueryCollectionFormat;\n(function (QueryCollectionFormat) {\n    QueryCollectionFormat[\"Csv\"] = \",\";\n    QueryCollectionFormat[\"Ssv\"] = \" \";\n    QueryCollectionFormat[\"Tsv\"] = \"\\t\";\n    QueryCollectionFormat[\"Pipes\"] = \"|\";\n    QueryCollectionFormat[\"Multi\"] = \"Multi\";\n})(QueryCollectionFormat || (QueryCollectionFormat = {}));\n//# sourceMappingURL=queryCollectionFormat.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nimport { Constants } from \"../util/constants\";\nvar StatusCodes = Constants.HttpConstants.StatusCodes;\nexport function throttlingRetryPolicy() {\n    return {\n        create: function (nextPolicy, options) {\n            return new ThrottlingRetryPolicy(nextPolicy, options);\n        }\n    };\n}\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nvar ThrottlingRetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(ThrottlingRetryPolicy, _super);\n    function ThrottlingRetryPolicy(nextPolicy, options, _handleResponse) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._handleResponse = _handleResponse || _this._defaultResponseHandler;\n        return _this;\n    }\n    ThrottlingRetryPolicy.prototype.sendRequest = function (httpRequest) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this._nextPolicy.sendRequest(httpRequest.clone()).then(function (response) {\n                        if (response.status !== StatusCodes.TooManyRequests) {\n                            return response;\n                        }\n                        else {\n                            return _this._handleResponse(httpRequest, response);\n                        }\n                    })];\n            });\n        });\n    };\n    ThrottlingRetryPolicy.prototype._defaultResponseHandler = function (httpRequest, httpResponse) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var retryAfterHeader, delayInMs;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                retryAfterHeader = httpResponse.headers.get(Constants.HeaderConstants.RETRY_AFTER);\n                if (retryAfterHeader) {\n                    delayInMs = ThrottlingRetryPolicy.parseRetryAfterHeader(retryAfterHeader);\n                    if (delayInMs) {\n                        return [2 /*return*/, delay(delayInMs).then(function (_) { return _this._nextPolicy.sendRequest(httpRequest); })];\n                    }\n                }\n                return [2 /*return*/, httpResponse];\n            });\n        });\n    };\n    ThrottlingRetryPolicy.parseRetryAfterHeader = function (headerValue) {\n        var retryAfterInSeconds = Number(headerValue);\n        if (Number.isNaN(retryAfterInSeconds)) {\n            return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n        }\n        else {\n            return retryAfterInSeconds * 1000;\n        }\n    };\n    ThrottlingRetryPolicy.parseDateRetryAfterHeader = function (headerValue) {\n        try {\n            var now = Date.now();\n            var date = Date.parse(headerValue);\n            var diff = date - now;\n            return Number.isNaN(diff) ? undefined : diff;\n        }\n        catch (error) {\n            return undefined;\n        }\n    };\n    return ThrottlingRetryPolicy;\n}(BaseRequestPolicy));\nexport { ThrottlingRetryPolicy };\n//# sourceMappingURL=throttlingRetryPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\nimport { getPathStringFromParameter, getPathStringFromParameterPath } from \"./operationParameter\";\nimport { isStreamOperation } from \"./operationSpec\";\nimport { deserializationPolicy } from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy\";\nimport { redirectPolicy } from \"./policies/redirectPolicy\";\nimport { RequestPolicyOptions } from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { MapperType } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport { WebResource } from \"./webResource\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\n/**\n * @class\n * Initializes a new instance of the ServiceClient.\n */\nvar ServiceClient = /** @class */ (function () {\n    /**\n     * The ServiceClient constructor\n     * @constructor\n     * @param {ServiceClientCredentials} [credentials] The credentials object used for authentication.\n     * @param {ServiceClientOptions} [options] The service client options that govern the behavior of the client.\n     */\n    function ServiceClient(credentials, options) {\n        if (!options) {\n            options = {};\n        }\n        if (credentials && !credentials.signRequest) {\n            throw new Error(\"credentials argument needs to implement signRequest method\");\n        }\n        this._withCredentials = options.withCredentials || false;\n        this._httpClient = options.httpClient || new DefaultHttpClient();\n        this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n        this._requestPolicyFactories = options.requestPolicyFactories || createDefaultRequestPolicyFactories(credentials, options);\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    ServiceClient.prototype.sendRequest = function (options) {\n        if (options === null || options === undefined || typeof options !== \"object\") {\n            throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n        }\n        var httpRequest;\n        try {\n            if (options instanceof WebResource) {\n                options.validateRequestProperties();\n                httpRequest = options;\n            }\n            else {\n                httpRequest = new WebResource();\n                httpRequest = httpRequest.prepare(options);\n            }\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n        var httpPipeline = this._httpClient;\n        if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n            for (var i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n                httpPipeline = this._requestPolicyFactories[i].create(httpPipeline, this._requestPolicyOptions);\n            }\n        }\n        return httpPipeline.sendRequest(httpRequest);\n    };\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @param {OperationArguments} operationArguments The arguments that the HTTP request's templated values will be populated from.\n     * @param {OperationSpec} operationSpec The OperationSpec to use to populate the httpRequest.\n     * @param {ServiceCallback} callback The callback to call when the response is received.\n     */\n    ServiceClient.prototype.sendOperationRequest = function (operationArguments, operationSpec, callback) {\n        if (typeof operationArguments.options === \"function\") {\n            callback = operationArguments.options;\n            operationArguments.options = undefined;\n        }\n        var httpRequest = new WebResource();\n        var result;\n        try {\n            var baseUri = operationSpec.baseUrl || this.baseUri;\n            if (!baseUri) {\n                throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\");\n            }\n            httpRequest.method = operationSpec.httpMethod;\n            httpRequest.operationSpec = operationSpec;\n            var requestUrl = URLBuilder.parse(baseUri);\n            if (operationSpec.path) {\n                requestUrl.appendPath(operationSpec.path);\n            }\n            if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n                for (var _i = 0, _a = operationSpec.urlParameters; _i < _a.length; _i++) {\n                    var urlParameter = _a[_i];\n                    var urlParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, urlParameter, operationSpec.serializer);\n                    urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, getPathStringFromParameter(urlParameter));\n                    if (!urlParameter.skipEncoding) {\n                        urlParameterValue = encodeURIComponent(urlParameterValue);\n                    }\n                    requestUrl.replaceAll(\"{\" + (urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)) + \"}\", urlParameterValue);\n                }\n            }\n            if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n                for (var _b = 0, _c = operationSpec.queryParameters; _b < _c.length; _b++) {\n                    var queryParameter = _c[_b];\n                    var queryParameterValue = getOperationArgumentValueFromParameter(this, operationArguments, queryParameter, operationSpec.serializer);\n                    if (queryParameterValue != undefined) {\n                        queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n                        if (queryParameter.collectionFormat != undefined) {\n                            if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                                if (queryParameterValue.length === 0) {\n                                    queryParameterValue = \"\";\n                                }\n                                else {\n                                    for (var index in queryParameterValue) {\n                                        var item = queryParameterValue[index];\n                                        queryParameterValue[index] = item == undefined ? \"\" : item.toString();\n                                    }\n                                }\n                            }\n                            else {\n                                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n                            }\n                        }\n                        if (!queryParameter.skipEncoding) {\n                            if (Array.isArray(queryParameterValue)) {\n                                for (var index in queryParameterValue) {\n                                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                                }\n                            }\n                            else {\n                                queryParameterValue = encodeURIComponent(queryParameterValue);\n                            }\n                        }\n                        requestUrl.setQueryParameter(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n                    }\n                }\n            }\n            httpRequest.url = requestUrl.toString();\n            var contentType = operationSpec.contentType || this.requestContentType;\n            if (contentType) {\n                httpRequest.headers.set(\"Content-Type\", contentType);\n            }\n            if (operationSpec.headerParameters) {\n                for (var _d = 0, _e = operationSpec.headerParameters; _d < _e.length; _d++) {\n                    var headerParameter = _e[_d];\n                    var headerValue = getOperationArgumentValueFromParameter(this, operationArguments, headerParameter, operationSpec.serializer);\n                    if (headerValue != undefined) {\n                        headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n                        var headerCollectionPrefix = headerParameter.mapper.headerCollectionPrefix;\n                        if (headerCollectionPrefix) {\n                            for (var _f = 0, _g = Object.keys(headerValue); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                            }\n                        }\n                        else {\n                            httpRequest.headers.set(headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter), headerValue);\n                        }\n                    }\n                }\n            }\n            var options = operationArguments.options;\n            if (options) {\n                if (options.customHeaders) {\n                    for (var customHeaderName in options.customHeaders) {\n                        httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n                    }\n                }\n                if (options.abortSignal) {\n                    httpRequest.abortSignal = options.abortSignal;\n                }\n                if (options.timeout) {\n                    httpRequest.timeout = options.timeout;\n                }\n                if (options.onUploadProgress) {\n                    httpRequest.onUploadProgress = options.onUploadProgress;\n                }\n                if (options.onDownloadProgress) {\n                    httpRequest.onDownloadProgress = options.onDownloadProgress;\n                }\n            }\n            httpRequest.withCredentials = this._withCredentials;\n            serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n            if (httpRequest.streamResponseBody == undefined) {\n                httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n            }\n            result = this.sendRequest(httpRequest)\n                .then(function (res) { return flattenResponse(res, operationSpec.responses[res.status]); });\n        }\n        catch (error) {\n            result = Promise.reject(error);\n        }\n        var cb = callback;\n        if (cb) {\n            result\n                // tslint:disable-next-line:no-null-keyword\n                .then(function (res) { return cb(null, res._response.parsedBody, res._response.request, res._response); })\n                .catch(function (err) { return cb(err); });\n        }\n        return result;\n    };\n    return ServiceClient;\n}());\nexport { ServiceClient };\nexport function serializeRequestBody(serviceClient, httpRequest, operationArguments, operationSpec) {\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        httpRequest.body = getOperationArgumentValueFromParameter(serviceClient, operationArguments, operationSpec.requestBody, operationSpec.serializer);\n        var bodyMapper = operationSpec.requestBody.mapper;\n        var required = bodyMapper.required, xmlName = bodyMapper.xmlName, xmlElementName = bodyMapper.xmlElementName, serializedName = bodyMapper.serializedName;\n        var typeName = bodyMapper.type.name;\n        try {\n            if (httpRequest.body != undefined || required) {\n                var requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                httpRequest.body = operationSpec.serializer.serialize(bodyMapper, httpRequest.body, requestBodyParameterPathString);\n                var isStream = typeName === MapperType.Stream;\n                if (operationSpec.isXML) {\n                    if (typeName === MapperType.Sequence) {\n                        httpRequest.body = stringifyXML(utils.prepareXMLRootList(httpRequest.body, xmlElementName || xmlName || serializedName), { rootName: xmlName || serializedName });\n                    }\n                    else if (!isStream) {\n                        httpRequest.body = stringifyXML(httpRequest.body, { rootName: xmlName || serializedName });\n                    }\n                }\n                else if (!isStream) {\n                    httpRequest.body = JSON.stringify(httpRequest.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(\"Error \\\"\" + error.message + \"\\\" occurred in serializing the payload - \" + JSON.stringify(serializedName, undefined, \"  \") + \".\");\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        httpRequest.formData = {};\n        for (var _i = 0, _a = operationSpec.formDataParameters; _i < _a.length; _i++) {\n            var formDataParameter = _a[_i];\n            var formDataParameterValue = getOperationArgumentValueFromParameter(serviceClient, operationArguments, formDataParameter, operationSpec.serializer);\n            if (formDataParameterValue != undefined) {\n                var formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter));\n            }\n        }\n    }\n}\nfunction isRequestPolicyFactory(instance) {\n    return typeof instance.create === \"function\";\n}\nfunction createDefaultRequestPolicyFactories(credentials, options) {\n    var factories = [];\n    if (options.generateClientRequestIdHeader) {\n        factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n    }\n    if (credentials) {\n        if (isRequestPolicyFactory(credentials)) {\n            factories.push(credentials);\n        }\n        else {\n            factories.push(signingPolicy(credentials));\n        }\n    }\n    factories.push(userAgentPolicy({ value: options.userAgent }));\n    factories.push(redirectPolicy());\n    factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n    if (!options.noRetryPolicy) {\n        factories.push(exponentialRetryPolicy());\n        factories.push(systemErrorRetryPolicy());\n        factories.push(throttlingRetryPolicy());\n    }\n    factories.push(deserializationPolicy(options.deserializationContentTypes));\n    return factories;\n}\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent, propertyPath) {\n    if (parent && propertyPath) {\n        var propertyPathLength = propertyPath.length;\n        for (var i = 0; i < propertyPathLength - 1; ++i) {\n            var propertyName = propertyPath[i];\n            if (!parent[propertyName]) {\n                parent[propertyName] = {};\n            }\n            parent = parent[propertyName];\n        }\n    }\n    return parent;\n}\nfunction getOperationArgumentValueFromParameter(serviceClient, operationArguments, parameter, serializer) {\n    return getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameter.parameterPath, parameter.mapper, serializer);\n}\nexport function getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, parameterPath, parameterMapper, serializer) {\n    var value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                var propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound) {\n                    propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n                }\n                var useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue = parameterMapper.required || (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n            // Serialize just for validation purposes.\n            var parameterPathString = getPathStringFromParameterPath(parameterPath, parameterMapper);\n            serializer.serialize(parameterMapper, value, parameterPathString);\n        }\n    }\n    else {\n        for (var propertyName in parameterPath) {\n            var propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            var propertyPath = parameterPath[propertyName];\n            var propertyValue = getOperationArgumentValueFromParameterPath(serviceClient, operationArguments, propertyPath, propertyMapper, serializer);\n            // Serialize just for validation purposes.\n            var propertyPathString = getPathStringFromParameterPath(propertyPath, propertyMapper);\n            serializer.serialize(propertyMapper, propertyValue, propertyPathString);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    var result = { propertyFound: false };\n    var i = 0;\n    for (; i < parameterPath.length; ++i) {\n        var parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent != undefined && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nexport function flattenResponse(_response, responseSpec) {\n    var parsedHeaders = _response.parsedHeaders;\n    var bodyMapper = responseSpec && responseSpec.bodyMapper;\n    var addOperationResponse = function (obj) {\n        return Object.defineProperty(obj, \"_response\", {\n            value: _response\n        });\n    };\n    if (bodyMapper) {\n        var typeName = bodyMapper.type.name;\n        if (typeName === \"Stream\") {\n            return addOperationResponse(tslib_1.__assign({}, parsedHeaders, { blobBody: _response.blobBody, readableStreamBody: _response.readableStreamBody }));\n        }\n        var modelProperties_1 = typeName === \"Composite\" && bodyMapper.type.modelProperties || {};\n        var isPageableResponse = Object.keys(modelProperties_1).some(function (k) { return modelProperties_1[k].serializedName === \"\"; });\n        if (typeName === \"Sequence\" || isPageableResponse) {\n            var arrayResponse = (_response.parsedBody || []).slice();\n            for (var _i = 0, _a = Object.keys(modelProperties_1); _i < _a.length; _i++) {\n                var key = _a[_i];\n                if (modelProperties_1[key].serializedName) {\n                    arrayResponse[key] = _response.parsedBody[key];\n                }\n            }\n            if (parsedHeaders) {\n                for (var _b = 0, _c = Object.keys(parsedHeaders); _b < _c.length; _b++) {\n                    var key = _c[_b];\n                    arrayResponse[key] = parsedHeaders[key];\n                }\n            }\n            addOperationResponse(arrayResponse);\n            return arrayResponse;\n        }\n        if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n            return addOperationResponse(tslib_1.__assign({}, parsedHeaders, _response.parsedBody));\n        }\n    }\n    if (bodyMapper || _response.request.method === \"HEAD\") {\n        // primitive body types and HEAD booleans\n        return addOperationResponse(tslib_1.__assign({}, parsedHeaders, { body: _response.parsedBody }));\n    }\n    return addOperationResponse(tslib_1.__assign({}, parsedHeaders, _response.parsedBody));\n}\n//# sourceMappingURL=serviceClient.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function logPolicy(logger) {\n    if (logger === void 0) { logger = console.log; }\n    return {\n        create: function (nextPolicy, options) {\n            return new LogPolicy(nextPolicy, options, logger);\n        }\n    };\n}\nvar LogPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(LogPolicy, _super);\n    function LogPolicy(nextPolicy, options, logger) {\n        if (logger === void 0) { logger = console.log; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.logger = logger;\n        return _this;\n    }\n    LogPolicy.prototype.sendRequest = function (request) {\n        var _this = this;\n        return this._nextPolicy.sendRequest(request).then(function (response) { return logResponse(_this, response); });\n    };\n    return LogPolicy;\n}(BaseRequestPolicy));\nexport { LogPolicy };\nfunction logResponse(policy, response) {\n    policy.logger(\">> Request: \" + JSON.stringify(response.request, undefined, 2));\n    policy.logger(\">> Response status code: \" + response.status);\n    var responseBody = response.bodyAsText;\n    policy.logger(\">> Body: \" + responseBody);\n    return Promise.resolve(response);\n}\n//# sourceMappingURL=logPolicy.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\nvar TopicCredentials = /** @class */ (function (_super) {\n    tslib_1.__extends(TopicCredentials, _super);\n    /**\n     * Creates a new EventGrid TopicCredentials object.\n     *\n     * @constructor\n     * @param {string} topicKey   The EventGrid topic key\n     */\n    function TopicCredentials(topicKey) {\n        var _this = this;\n        if (!topicKey || (topicKey && typeof topicKey !== \"string\")) {\n            throw new Error(\"topicKey cannot be null or undefined and must be of type string.\");\n        }\n        var options = {\n            inHeader: {\n                \"aeg-sas-key\": topicKey\n            }\n        };\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return TopicCredentials;\n}(ApiKeyCredentials));\nexport { TopicCredentials };\n//# sourceMappingURL=topicCredentials.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { HttpHeaders } from \"../httpHeaders\";\n/**\n * Authenticates to a service using an API key.\n */\nvar ApiKeyCredentials = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {object} options   Specifies the options to be provided for auth. Either header or query needs to be provided.\n     */\n    function ApiKeyCredentials(options) {\n        if (!options || (options && !options.inHeader && !options.inQuery)) {\n            throw new Error(\"options cannot be null or undefined. Either \\\"inHeader\\\" or \\\"inQuery\\\" property of the options object needs to be provided.\");\n        }\n        this.inHeader = options.inHeader;\n        this.inQuery = options.inQuery;\n    }\n    /**\n     * Signs a request with the values provided in the inHeader and inQuery parameter.\n     *\n     * @param {WebResource} webResource The WebResource to be signed.\n     * @returns {Promise<WebResource>} The signed request object.\n     */\n    ApiKeyCredentials.prototype.signRequest = function (webResource) {\n        if (!webResource) {\n            return Promise.reject(new Error(\"webResource cannot be null or undefined and must be of type \\\"object\\\".\"));\n        }\n        if (this.inHeader) {\n            if (!webResource.headers) {\n                webResource.headers = new HttpHeaders();\n            }\n            for (var headerName in this.inHeader) {\n                webResource.headers.set(headerName, this.inHeader[headerName]);\n            }\n        }\n        if (this.inQuery) {\n            if (!webResource.url) {\n                return Promise.reject(new Error(\"url cannot be null in the request object.\"));\n            }\n            if (webResource.url.indexOf(\"?\") < 0) {\n                webResource.url += \"?\";\n            }\n            for (var key in this.inQuery) {\n                if (!webResource.url.endsWith(\"?\")) {\n                    webResource.url += \"&\";\n                }\n                webResource.url += key + \"=\" + this.inQuery[key];\n            }\n        }\n        return Promise.resolve(webResource);\n    };\n    return ApiKeyCredentials;\n}());\nexport { ApiKeyCredentials };\n//# sourceMappingURL=apiKeyCredentials.js.map","import { isNode } from \"@azure/ms-rest-js\";\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call Aborter.none to create a new Aborter instance without timeout.\n * - Call Aborter.timeout() to create a new Aborter instance with timeout.\n *\n * For an existing instance aborter:\n * - Call aborter.withTimeout() to create and return a child Aborter instance with timeout.\n * - Call aborter.withValue(key, value) to create and return a child Aborter instance with key/value pair.\n * - Call aborter.abort() to abort current instance and all children instances.\n * - Call aborter.getValue(key) to search and get value with corresponding key from current aborter to all parents.\n *\n * @example\n * // Abort without timeout\n * await blockBlobURL.upload(Aborter.none, buf, buf.length);\n *\n * @example\n * // Abort container create in 1000ms\n * await blockBlobURL.upload(Aborter.timeout(1000), buf, buf.length);\n *\n * @example\n * // Share aborter cross multiple operations in 30s\n * // Upload the same data to 2 different data centers at the same time, abort another when any of them is finished\n * const aborter = Aborter.timeout(30 * 1000);\n * blockBlobURL1.upload(aborter, buf, buf.length).then(aborter.abort);\n * blockBlobURL2.upload(aborter, buf, buf.length).then(aborter.abort);\n *\n * @example\n * // Cascaded aborting\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n * await blockBlobURL.upload(aborter.withTimeout(25 * 1000), buf, buf.length);\n *\n * @export\n * @class Aborter\n * @implements {AbortSignalLike}\n */\nvar Aborter = /** @class */ (function () {\n    // private disposed: boolean = false;\n    /**\n     * Private constructor for internal usage, creates an instance of Aborter.\n     *\n     * @param {Aborter} [parent] Optional. Parent aborter.\n     * @param {number} [timeout=0] Optional. Timeout before abort in millisecond, 0 means no timeout.\n     * @param {string} [key] Optional. Immutable key in string.\n     * @param {(string | number | boolean | null)} [value] Optional. Immutable value.\n     * @memberof Aborter\n     */\n    function Aborter(parent, timeout, key, value) {\n        if (timeout === void 0) { timeout = 0; }\n        var _this = this;\n        // tslint:disable-next-line:variable-name\n        this._aborted = false;\n        this.children = []; // When child object calls dispose(), remove child from here\n        this.abortEventListeners = [];\n        this.parent = parent;\n        this.key = key;\n        this.value = value;\n        if (timeout > 0) {\n            this.timer = setTimeout(function () {\n                _this.abort.call(_this);\n            }, timeout);\n            // When called, the active Timeout object will not require the Node.js event loop\n            // to remain active. If there is no other activity keeping the event loop running,\n            // the process may exit before the Timeout object's callback is invoked.\n            if (this.timer && isNode) {\n                this.timer.unref();\n            }\n        }\n    }\n    Object.defineProperty(Aborter.prototype, \"aborted\", {\n        /**\n         * Status of whether aborted or not.\n         *\n         * @readonly\n         * @type {boolean}\n         * @memberof Aborter\n         */\n        get: function () {\n            return this._aborted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Aborter, \"none\", {\n        /**\n         * Creates a new Aborter instance without timeout.\n         *\n         * @readonly\n         * @static\n         * @type {Aborter}\n         * @memberof Aborter\n         */\n        get: function () {\n            return new Aborter(undefined, 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new Aborter instance with timeout in milliseconds.\n     * Set parameter timeout to 0 will not create a timer.\n     *\n     * @static\n     * @param {number} {timeout} in milliseconds\n     * @returns {Aborter}\n     * @memberof Aborter\n     */\n    Aborter.timeout = function (timeout) {\n        return new Aborter(undefined, timeout);\n    };\n    /**\n     * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n     * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n     * triggers timeout event, all children nodes abort event will be triggered too.\n     *\n     * When timeout parameter (in millisecond) is larger than 0, the abort event will be triggered when timeout.\n     * Otherwise, call abort() method to manually abort.\n     *\n     * @param {number} {timeout} Timeout in millisecond.\n     * @returns {Aborter} The new Aborter instance created.\n     * @memberof Aborter\n     */\n    Aborter.prototype.withTimeout = function (timeout) {\n        var childCancelContext = new Aborter(this, timeout);\n        this.children.push(childCancelContext);\n        return childCancelContext;\n    };\n    /**\n     * Create and return a new Aborter instance, which will be appended as a child node of current Aborter.\n     * Current Aborter instance becomes father node of the new instance. When current or father Aborter node\n     * triggers timeout event, all children nodes abort event will be triggered too.\n     *\n     * Immutable key value pair will be set into the new created Aborter instance.\n     * Call getValue() to find out latest value with corresponding key in the chain of\n     * [current node] -> [parent node] and [grand parent node]....\n     *\n     * @param {string} key\n     * @param {(string | number | boolean | null)} [value]\n     * @returns {Aborter}\n     * @memberof Aborter\n     */\n    Aborter.prototype.withValue = function (key, value) {\n        var childCancelContext = new Aborter(this, 0, key, value);\n        this.children.push(childCancelContext);\n        return childCancelContext;\n    };\n    /**\n     * Find out latest value with corresponding key in the chain of\n     * [current node] -> [parent node] -> [grand parent node] -> ... -> [root node].\n     *\n     * If key is not found, undefined will be returned.\n     *\n     * @param {string} key\n     * @returns {(string | number | boolean | null | undefined)}\n     * @memberof Aborter\n     */\n    Aborter.prototype.getValue = function (key) {\n        for (var parent_1 = this; parent_1; parent_1 = parent_1.parent) {\n            if (parent_1.key === key) {\n                return parent_1.value;\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Trigger abort event immediately, the onabort and all abort event listeners will be triggered.\n     * Will try to trigger abort event for all children Aborter nodes.\n     *\n     * - If there is a timeout, the timer will be cancelled.\n     * - If aborted is true, nothing will happen.\n     *\n     * @returns\n     * @memberof Aborter\n     */\n    Aborter.prototype.abort = function () {\n        var _this = this;\n        if (this.aborted) {\n            return;\n        }\n        this.cancelTimer();\n        if (this.onabort) {\n            this.onabort.call(this);\n        }\n        this.abortEventListeners.forEach(function (listener) {\n            listener.call(_this);\n        });\n        this.children.forEach(function (child) { return child.cancelByParent(); });\n        this._aborted = true;\n    };\n    // public dispose() {\n    //   if (this.disposed || this.aborted) {\n    //     return;\n    //   }\n    //   this.cancelTimer();\n    //   // (parent)A <- B <- C(child), if B disposes, when A abort, C will not abort\n    //   if (this.parent) {\n    //     const index = this.parent.children.indexOf(this);\n    //     if (index > -1) {\n    //       this.parent.children.splice(index, 1);\n    //     }\n    //   }\n    //   this.disposed = true;\n    // }\n    /**\n     * Added new \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param {\"abort\"} _type Only support \"abort\" event\n     * @param {(this: AbortSignalLike, ev: any) => any} listener\n     * @memberof Aborter\n     */\n    Aborter.prototype.addEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        this.abortEventListeners.push(listener);\n    };\n    /**\n     * Remove \"abort\" event listener, only support \"abort\" event.\n     *\n     * @param {\"abort\"} _type Only support \"abort\" event\n     * @param {(this: AbortSignalLike, ev: any) => any} listener\n     * @memberof Aborter\n     */\n    Aborter.prototype.removeEventListener = function (\n    // tslint:disable-next-line:variable-name\n    _type, listener) {\n        var index = this.abortEventListeners.indexOf(listener);\n        if (index > -1) {\n            this.abortEventListeners.splice(index, 1);\n        }\n    };\n    Aborter.prototype.cancelByParent = function () {\n        // if (!this.disposed) {\n        this.abort();\n        // }\n    };\n    Aborter.prototype.cancelTimer = function () {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n    };\n    return Aborter;\n}());\nexport { Aborter };\n//# sourceMappingURL=Aborter.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nexport var StorageError = {\n    serializedName: \"StorageError\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageError\",\n        modelProperties: {\n            message: {\n                xmlName: \"Message\",\n                serializedName: \"Message\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AccessPolicy = {\n    serializedName: \"AccessPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"AccessPolicy\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            expiry: {\n                xmlName: \"Expiry\",\n                required: true,\n                serializedName: \"Expiry\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            permission: {\n                xmlName: \"Permission\",\n                required: true,\n                serializedName: \"Permission\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobProperties = {\n    xmlName: \"Properties\",\n    serializedName: \"BlobProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobProperties\",\n        modelProperties: {\n            creationTime: {\n                xmlName: \"Creation-Time\",\n                serializedName: \"Creation-Time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            lastModified: {\n                xmlName: \"Last-Modified\",\n                required: true,\n                serializedName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                xmlName: \"Etag\",\n                required: true,\n                serializedName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLength: {\n                xmlName: \"Content-Length\",\n                serializedName: \"Content-Length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                xmlName: \"Content-Type\",\n                serializedName: \"Content-Type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentEncoding: {\n                xmlName: \"Content-Encoding\",\n                serializedName: \"Content-Encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                xmlName: \"Content-Language\",\n                serializedName: \"Content-Language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                xmlName: \"Content-MD5\",\n                serializedName: \"Content-MD5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentDisposition: {\n                xmlName: \"Content-Disposition\",\n                serializedName: \"Content-Disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                xmlName: \"Cache-Control\",\n                serializedName: \"Cache-Control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                xmlName: \"x-ms-blob-sequence-number\",\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                xmlName: \"BlobType\",\n                serializedName: \"BlobType\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                xmlName: \"LeaseStatus\",\n                serializedName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            leaseState: {\n                xmlName: \"LeaseState\",\n                serializedName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                xmlName: \"LeaseDuration\",\n                serializedName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            copyId: {\n                xmlName: \"CopyId\",\n                serializedName: \"CopyId\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                xmlName: \"CopyStatus\",\n                serializedName: \"CopyStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            copySource: {\n                xmlName: \"CopySource\",\n                serializedName: \"CopySource\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                xmlName: \"CopyProgress\",\n                serializedName: \"CopyProgress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyCompletionTime: {\n                xmlName: \"CopyCompletionTime\",\n                serializedName: \"CopyCompletionTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                xmlName: \"CopyStatusDescription\",\n                serializedName: \"CopyStatusDescription\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            serverEncrypted: {\n                xmlName: \"ServerEncrypted\",\n                serializedName: \"ServerEncrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            incrementalCopy: {\n                xmlName: \"IncrementalCopy\",\n                serializedName: \"IncrementalCopy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                xmlName: \"DestinationSnapshot\",\n                serializedName: \"DestinationSnapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deletedTime: {\n                xmlName: \"DeletedTime\",\n                serializedName: \"DeletedTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            remainingRetentionDays: {\n                xmlName: \"RemainingRetentionDays\",\n                serializedName: \"RemainingRetentionDays\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            accessTier: {\n                xmlName: \"AccessTier\",\n                serializedName: \"AccessTier\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierInferred: {\n                xmlName: \"AccessTierInferred\",\n                serializedName: \"AccessTierInferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                xmlName: \"ArchiveStatus\",\n                serializedName: \"ArchiveStatus\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangeTime: {\n                xmlName: \"AccessTierChangeTime\",\n                serializedName: \"AccessTierChangeTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport var BlobItem = {\n    xmlName: \"Blob\",\n    serializedName: \"BlobItem\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobItem\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleted: {\n                xmlName: \"Deleted\",\n                required: true,\n                serializedName: \"Deleted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            snapshot: {\n                xmlName: \"Snapshot\",\n                required: true,\n                serializedName: \"Snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            properties: {\n                xmlName: \"Properties\",\n                required: true,\n                serializedName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobProperties\"\n                }\n            },\n            metadata: {\n                xmlName: \"Metadata\",\n                serializedName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var BlobFlatListSegment = {\n    xmlName: \"Blobs\",\n    serializedName: \"BlobFlatListSegment\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobFlatListSegment\",\n        modelProperties: {\n            blobItems: {\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                required: true,\n                serializedName: \"BlobItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItem\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListBlobsFlatSegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListBlobsFlatSegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsFlatSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                xmlIsAttribute: true,\n                xmlName: \"ContainerName\",\n                required: true,\n                serializedName: \"ContainerName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                required: true,\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            delimiter: {\n                xmlName: \"Delimiter\",\n                required: true,\n                serializedName: \"Delimiter\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            segment: {\n                xmlName: \"Blobs\",\n                required: true,\n                serializedName: \"Segment\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobFlatListSegment\"\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobPrefix = {\n    serializedName: \"BlobPrefix\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobPrefix\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobHierarchyListSegment = {\n    xmlName: \"Blobs\",\n    serializedName: \"BlobHierarchyListSegment\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobHierarchyListSegment\",\n        modelProperties: {\n            blobPrefixes: {\n                xmlName: \"BlobPrefixes\",\n                xmlElementName: \"BlobPrefix\",\n                serializedName: \"BlobPrefixes\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobPrefix\"\n                        }\n                    }\n                }\n            },\n            blobItems: {\n                xmlName: \"BlobItems\",\n                xmlElementName: \"Blob\",\n                required: true,\n                serializedName: \"BlobItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"BlobItem\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListBlobsHierarchySegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListBlobsHierarchySegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListBlobsHierarchySegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            containerName: {\n                xmlIsAttribute: true,\n                xmlName: \"ContainerName\",\n                required: true,\n                serializedName: \"ContainerName\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                required: true,\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            delimiter: {\n                xmlName: \"Delimiter\",\n                required: true,\n                serializedName: \"Delimiter\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            segment: {\n                xmlName: \"Blobs\",\n                required: true,\n                serializedName: \"Segment\",\n                type: {\n                    name: \"Composite\",\n                    className: \"BlobHierarchyListSegment\"\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var Block = {\n    serializedName: \"Block\",\n    type: {\n        name: \"Composite\",\n        className: \"Block\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            size: {\n                xmlName: \"Size\",\n                required: true,\n                serializedName: \"Size\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var BlockList = {\n    serializedName: \"BlockList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockList\",\n        modelProperties: {\n            committedBlocks: {\n                xmlIsWrapped: true,\n                xmlName: \"CommittedBlocks\",\n                xmlElementName: \"Block\",\n                serializedName: \"CommittedBlocks\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            },\n            uncommittedBlocks: {\n                xmlIsWrapped: true,\n                xmlName: \"UncommittedBlocks\",\n                xmlElementName: \"Block\",\n                serializedName: \"UncommittedBlocks\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"Block\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var BlockLookupList = {\n    xmlName: \"BlockList\",\n    serializedName: \"BlockLookupList\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockLookupList\",\n        modelProperties: {\n            committed: {\n                xmlName: \"Committed\",\n                xmlElementName: \"Committed\",\n                serializedName: \"Committed\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            uncommitted: {\n                xmlName: \"Uncommitted\",\n                xmlElementName: \"Uncommitted\",\n                serializedName: \"Uncommitted\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            },\n            latest: {\n                xmlName: \"Latest\",\n                xmlElementName: \"Latest\",\n                serializedName: \"Latest\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ContainerProperties = {\n    serializedName: \"ContainerProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerProperties\",\n        modelProperties: {\n            lastModified: {\n                xmlName: \"Last-Modified\",\n                required: true,\n                serializedName: \"Last-Modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            etag: {\n                xmlName: \"Etag\",\n                required: true,\n                serializedName: \"Etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseStatus: {\n                xmlName: \"LeaseStatus\",\n                serializedName: \"LeaseStatus\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            leaseState: {\n                xmlName: \"LeaseState\",\n                serializedName: \"LeaseState\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                xmlName: \"LeaseDuration\",\n                serializedName: \"LeaseDuration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            publicAccess: {\n                xmlName: \"PublicAccess\",\n                serializedName: \"PublicAccess\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            hasImmutabilityPolicy: {\n                xmlName: \"HasImmutabilityPolicy\",\n                serializedName: \"HasImmutabilityPolicy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                xmlName: \"HasLegalHold\",\n                serializedName: \"HasLegalHold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerItem = {\n    xmlName: \"Container\",\n    serializedName: \"ContainerItem\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerItem\",\n        modelProperties: {\n            name: {\n                xmlName: \"Name\",\n                required: true,\n                serializedName: \"Name\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            properties: {\n                xmlName: \"Properties\",\n                required: true,\n                serializedName: \"Properties\",\n                type: {\n                    name: \"Composite\",\n                    className: \"ContainerProperties\"\n                }\n            },\n            metadata: {\n                xmlName: \"Metadata\",\n                serializedName: \"Metadata\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var ListContainersSegmentResponse = {\n    xmlName: \"EnumerationResults\",\n    serializedName: \"ListContainersSegmentResponse\",\n    type: {\n        name: \"Composite\",\n        className: \"ListContainersSegmentResponse\",\n        modelProperties: {\n            serviceEndpoint: {\n                xmlIsAttribute: true,\n                xmlName: \"ServiceEndpoint\",\n                required: true,\n                serializedName: \"ServiceEndpoint\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            prefix: {\n                xmlName: \"Prefix\",\n                required: true,\n                serializedName: \"Prefix\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            marker: {\n                xmlName: \"Marker\",\n                serializedName: \"Marker\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxResults: {\n                xmlName: \"MaxResults\",\n                required: true,\n                serializedName: \"MaxResults\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            containerItems: {\n                xmlIsWrapped: true,\n                xmlName: \"Containers\",\n                xmlElementName: \"Container\",\n                required: true,\n                serializedName: \"ContainerItems\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ContainerItem\"\n                        }\n                    }\n                }\n            },\n            nextMarker: {\n                xmlName: \"NextMarker\",\n                required: true,\n                serializedName: \"NextMarker\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var CorsRule = {\n    serializedName: \"CorsRule\",\n    type: {\n        name: \"Composite\",\n        className: \"CorsRule\",\n        modelProperties: {\n            allowedOrigins: {\n                xmlName: \"AllowedOrigins\",\n                required: true,\n                serializedName: \"AllowedOrigins\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedMethods: {\n                xmlName: \"AllowedMethods\",\n                required: true,\n                serializedName: \"AllowedMethods\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            allowedHeaders: {\n                xmlName: \"AllowedHeaders\",\n                required: true,\n                serializedName: \"AllowedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            exposedHeaders: {\n                xmlName: \"ExposedHeaders\",\n                required: true,\n                serializedName: \"ExposedHeaders\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            maxAgeInSeconds: {\n                xmlName: \"MaxAgeInSeconds\",\n                required: true,\n                serializedName: \"MaxAgeInSeconds\",\n                constraints: {\n                    InclusiveMinimum: 0\n                },\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var GeoReplication = {\n    serializedName: \"GeoReplication\",\n    type: {\n        name: \"Composite\",\n        className: \"GeoReplication\",\n        modelProperties: {\n            status: {\n                xmlName: \"Status\",\n                required: true,\n                serializedName: \"Status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastSyncTime: {\n                xmlName: \"LastSyncTime\",\n                required: true,\n                serializedName: \"LastSyncTime\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            }\n        }\n    }\n};\nexport var RetentionPolicy = {\n    serializedName: \"RetentionPolicy\",\n    type: {\n        name: \"Composite\",\n        className: \"RetentionPolicy\",\n        modelProperties: {\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            days: {\n                xmlName: \"Days\",\n                serializedName: \"Days\",\n                constraints: {\n                    InclusiveMinimum: 1\n                },\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var Logging = {\n    serializedName: \"Logging\",\n    type: {\n        name: \"Composite\",\n        className: \"Logging\",\n        modelProperties: {\n            version: {\n                xmlName: \"Version\",\n                required: true,\n                serializedName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteProperty: {\n                xmlName: \"Delete\",\n                required: true,\n                serializedName: \"Delete\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            read: {\n                xmlName: \"Read\",\n                required: true,\n                serializedName: \"Read\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            write: {\n                xmlName: \"Write\",\n                required: true,\n                serializedName: \"Write\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                xmlName: \"RetentionPolicy\",\n                required: true,\n                serializedName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var Metrics = {\n    serializedName: \"Metrics\",\n    type: {\n        name: \"Composite\",\n        className: \"Metrics\",\n        modelProperties: {\n            version: {\n                xmlName: \"Version\",\n                serializedName: \"Version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            includeAPIs: {\n                xmlName: \"IncludeAPIs\",\n                serializedName: \"IncludeAPIs\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            retentionPolicy: {\n                xmlName: \"RetentionPolicy\",\n                serializedName: \"RetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var PageRange = {\n    serializedName: \"PageRange\",\n    type: {\n        name: \"Composite\",\n        className: \"PageRange\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                xmlName: \"End\",\n                required: true,\n                serializedName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ClearRange = {\n    serializedName: \"ClearRange\",\n    type: {\n        name: \"Composite\",\n        className: \"ClearRange\",\n        modelProperties: {\n            start: {\n                xmlName: \"Start\",\n                required: true,\n                serializedName: \"Start\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            end: {\n                xmlName: \"End\",\n                required: true,\n                serializedName: \"End\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var PageList = {\n    serializedName: \"PageList\",\n    type: {\n        name: \"Composite\",\n        className: \"PageList\",\n        modelProperties: {\n            pageRange: {\n                xmlName: \"PageRange\",\n                xmlElementName: \"PageRange\",\n                serializedName: \"PageRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"PageRange\"\n                        }\n                    }\n                }\n            },\n            clearRange: {\n                xmlName: \"ClearRange\",\n                xmlElementName: \"ClearRange\",\n                serializedName: \"ClearRange\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"ClearRange\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\nexport var SignedIdentifier = {\n    serializedName: \"SignedIdentifier\",\n    type: {\n        name: \"Composite\",\n        className: \"SignedIdentifier\",\n        modelProperties: {\n            id: {\n                xmlName: \"Id\",\n                required: true,\n                serializedName: \"Id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessPolicy: {\n                xmlName: \"AccessPolicy\",\n                required: true,\n                serializedName: \"AccessPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"AccessPolicy\"\n                }\n            }\n        }\n    }\n};\nexport var StaticWebsite = {\n    serializedName: \"StaticWebsite\",\n    type: {\n        name: \"Composite\",\n        className: \"StaticWebsite\",\n        modelProperties: {\n            enabled: {\n                xmlName: \"Enabled\",\n                required: true,\n                serializedName: \"Enabled\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            indexDocument: {\n                xmlName: \"IndexDocument\",\n                serializedName: \"IndexDocument\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorDocument404Path: {\n                xmlName: \"ErrorDocument404Path\",\n                serializedName: \"ErrorDocument404Path\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var StorageServiceProperties = {\n    serializedName: \"StorageServiceProperties\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageServiceProperties\",\n        modelProperties: {\n            logging: {\n                xmlName: \"Logging\",\n                serializedName: \"Logging\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Logging\"\n                }\n            },\n            hourMetrics: {\n                xmlName: \"HourMetrics\",\n                serializedName: \"HourMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            minuteMetrics: {\n                xmlName: \"MinuteMetrics\",\n                serializedName: \"MinuteMetrics\",\n                type: {\n                    name: \"Composite\",\n                    className: \"Metrics\"\n                }\n            },\n            cors: {\n                xmlIsWrapped: true,\n                xmlName: \"Cors\",\n                xmlElementName: \"CorsRule\",\n                serializedName: \"Cors\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"CorsRule\"\n                        }\n                    }\n                }\n            },\n            defaultServiceVersion: {\n                xmlName: \"DefaultServiceVersion\",\n                serializedName: \"DefaultServiceVersion\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            deleteRetentionPolicy: {\n                xmlName: \"DeleteRetentionPolicy\",\n                serializedName: \"DeleteRetentionPolicy\",\n                type: {\n                    name: \"Composite\",\n                    className: \"RetentionPolicy\"\n                }\n            },\n            staticWebsite: {\n                xmlName: \"StaticWebsite\",\n                serializedName: \"StaticWebsite\",\n                type: {\n                    name: \"Composite\",\n                    className: \"StaticWebsite\"\n                }\n            }\n        }\n    }\n};\nexport var StorageServiceStats = {\n    serializedName: \"StorageServiceStats\",\n    type: {\n        name: \"Composite\",\n        className: \"StorageServiceStats\",\n        modelProperties: {\n            geoReplication: {\n                xmlName: \"GeoReplication\",\n                serializedName: \"GeoReplication\",\n                type: {\n                    name: \"Composite\",\n                    className: \"GeoReplication\"\n                }\n            }\n        }\n    }\n};\nexport var LeaseAccessConditions = {\n    xmlName: \"lease-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"LeaseAccessConditions\",\n        modelProperties: {\n            leaseId: {\n                xmlName: \"leaseId\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ModifiedAccessConditions = {\n    xmlName: \"modified-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"ModifiedAccessConditions\",\n        modelProperties: {\n            ifModifiedSince: {\n                xmlName: \"ifModifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            ifUnmodifiedSince: {\n                xmlName: \"ifUnmodifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            ifMatch: {\n                xmlName: \"ifMatch\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            ifNoneMatch: {\n                xmlName: \"ifNoneMatch\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobHTTPHeaders = {\n    xmlName: \"blob-HTTP-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobHTTPHeaders\",\n        modelProperties: {\n            blobCacheControl: {\n                xmlName: \"blobCacheControl\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentType: {\n                xmlName: \"blobContentType\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentMD5: {\n                xmlName: \"blobContentMD5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobContentEncoding: {\n                xmlName: \"blobContentEncoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLanguage: {\n                xmlName: \"blobContentLanguage\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentDisposition: {\n                xmlName: \"blobContentDisposition\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var SourceModifiedAccessConditions = {\n    xmlName: \"source-modified-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"SourceModifiedAccessConditions\",\n        modelProperties: {\n            sourceIfModifiedSince: {\n                xmlName: \"sourceIfModifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            sourceIfUnmodifiedSince: {\n                xmlName: \"sourceIfUnmodifiedSince\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            sourceIfMatch: {\n                xmlName: \"sourceIfMatch\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            sourceIfNoneMatch: {\n                xmlName: \"sourceIfNoneMatch\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var SequenceNumberAccessConditions = {\n    xmlName: \"sequence-number-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"SequenceNumberAccessConditions\",\n        modelProperties: {\n            ifSequenceNumberLessThanOrEqualTo: {\n                xmlName: \"ifSequenceNumberLessThanOrEqualTo\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            ifSequenceNumberLessThan: {\n                xmlName: \"ifSequenceNumberLessThan\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            ifSequenceNumberEqualTo: {\n                xmlName: \"ifSequenceNumberEqualTo\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var AppendPositionAccessConditions = {\n    xmlName: \"append-position-access-conditions\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendPositionAccessConditions\",\n        modelProperties: {\n            maxSize: {\n                xmlName: \"maxSize\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            appendPosition: {\n                xmlName: \"appendPosition\",\n                type: {\n                    name: \"Number\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceSetPropertiesHeaders = {\n    serializedName: \"service-setproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceSetPropertiesHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetPropertiesHeaders = {\n    serializedName: \"service-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetPropertiesHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetStatisticsHeaders = {\n    serializedName: \"service-getstatistics-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetStatisticsHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceListContainersSegmentHeaders = {\n    serializedName: \"service-listcontainerssegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceListContainersSegmentHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ServiceGetAccountInfoHeaders = {\n    serializedName: \"service-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ServiceGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerCreateHeaders = {\n    serializedName: \"container-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetPropertiesHeaders = {\n    serializedName: \"container-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetPropertiesHeaders\",\n        modelProperties: {\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            hasImmutabilityPolicy: {\n                serializedName: \"x-ms-has-immutability-policy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            hasLegalHold: {\n                serializedName: \"x-ms-has-legal-hold\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerDeleteHeaders = {\n    serializedName: \"container-delete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerDeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerSetMetadataHeaders = {\n    serializedName: \"container-setmetadata-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetMetadataHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetAccessPolicyHeaders = {\n    serializedName: \"container-getaccesspolicy-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccessPolicyHeaders\",\n        modelProperties: {\n            blobPublicAccess: {\n                serializedName: \"x-ms-blob-public-access\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerSetAccessPolicyHeaders = {\n    serializedName: \"container-setaccesspolicy-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerSetAccessPolicyHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerAcquireLeaseHeaders = {\n    serializedName: \"container-acquirelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerAcquireLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerReleaseLeaseHeaders = {\n    serializedName: \"container-releaselease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerReleaseLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerRenewLeaseHeaders = {\n    serializedName: \"container-renewlease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerRenewLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerBreakLeaseHeaders = {\n    serializedName: \"container-breaklease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerBreakLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerChangeLeaseHeaders = {\n    serializedName: \"container-changelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerChangeLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerListBlobFlatSegmentHeaders = {\n    serializedName: \"container-listblobflatsegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobFlatSegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerListBlobHierarchySegmentHeaders = {\n    serializedName: \"container-listblobhierarchysegment-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerListBlobHierarchySegmentHeaders\",\n        modelProperties: {\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var ContainerGetAccountInfoHeaders = {\n    serializedName: \"container-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"ContainerGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobDownloadHeaders = {\n    serializedName: \"blob-download-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDownloadHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentRange: {\n                serializedName: \"content-range\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            copyCompletionTime: {\n                serializedName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            blobContentMD5: {\n                serializedName: \"x-ms-blob-content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobGetPropertiesHeaders = {\n    serializedName: \"blob-getproperties-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetPropertiesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            creationTime: {\n                serializedName: \"x-ms-creation-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            metadata: {\n                serializedName: \"x-ms-meta\",\n                type: {\n                    name: \"Dictionary\",\n                    value: {\n                        type: {\n                            name: \"String\"\n                        }\n                    }\n                },\n                headerCollectionPrefix: \"x-ms-meta-\"\n            },\n            blobType: {\n                serializedName: \"x-ms-blob-type\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"BlockBlob\",\n                        \"PageBlob\",\n                        \"AppendBlob\"\n                    ]\n                }\n            },\n            copyCompletionTime: {\n                serializedName: \"x-ms-copy-completion-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyStatusDescription: {\n                serializedName: \"x-ms-copy-status-description\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyProgress: {\n                serializedName: \"x-ms-copy-progress\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copySource: {\n                serializedName: \"x-ms-copy-source\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            isIncrementalCopy: {\n                serializedName: \"x-ms-incremental-copy\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            destinationSnapshot: {\n                serializedName: \"x-ms-copy-destination-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseDuration: {\n                serializedName: \"x-ms-lease-duration\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"infinite\",\n                        \"fixed\"\n                    ]\n                }\n            },\n            leaseState: {\n                serializedName: \"x-ms-lease-state\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"available\",\n                        \"leased\",\n                        \"expired\",\n                        \"breaking\",\n                        \"broken\"\n                    ]\n                }\n            },\n            leaseStatus: {\n                serializedName: \"x-ms-lease-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"locked\",\n                        \"unlocked\"\n                    ]\n                }\n            },\n            contentLength: {\n                serializedName: \"content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            contentEncoding: {\n                serializedName: \"content-encoding\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentDisposition: {\n                serializedName: \"content-disposition\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentLanguage: {\n                serializedName: \"content-language\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            cacheControl: {\n                serializedName: \"cache-control\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            acceptRanges: {\n                serializedName: \"accept-ranges\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            accessTier: {\n                serializedName: \"x-ms-access-tier\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierInferred: {\n                serializedName: \"x-ms-access-tier-inferred\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            archiveStatus: {\n                serializedName: \"x-ms-archive-status\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            accessTierChangeTime: {\n                serializedName: \"x-ms-access-tier-change-time\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobDeleteHeaders = {\n    serializedName: \"blob-delete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobDeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobCreateHeaders = {\n    serializedName: \"pageblob-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AppendBlobCreateHeaders = {\n    serializedName: \"appendblob-create-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobCreateHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobUploadHeaders = {\n    serializedName: \"blockblob-upload-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobUploadHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobUndeleteHeaders = {\n    serializedName: \"blob-undelete-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobUndeleteHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetHTTPHeadersHeaders = {\n    serializedName: \"blob-sethttpheaders-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetHTTPHeadersHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetMetadataHeaders = {\n    serializedName: \"blob-setmetadata-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetMetadataHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobAcquireLeaseHeaders = {\n    serializedName: \"blob-acquirelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAcquireLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobReleaseLeaseHeaders = {\n    serializedName: \"blob-releaselease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobReleaseLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobRenewLeaseHeaders = {\n    serializedName: \"blob-renewlease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobRenewLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobChangeLeaseHeaders = {\n    serializedName: \"blob-changelease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobChangeLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            leaseId: {\n                serializedName: \"x-ms-lease-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobBreakLeaseHeaders = {\n    serializedName: \"blob-breaklease-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobBreakLeaseHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            leaseTime: {\n                serializedName: \"x-ms-lease-time\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobCreateSnapshotHeaders = {\n    serializedName: \"blob-createsnapshot-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobCreateSnapshotHeaders\",\n        modelProperties: {\n            snapshot: {\n                serializedName: \"x-ms-snapshot\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobStartCopyFromURLHeaders = {\n    serializedName: \"blob-startcopyfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobStartCopyFromURLHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobAbortCopyFromURLHeaders = {\n    serializedName: \"blob-abortcopyfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobAbortCopyFromURLHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobSetTierHeaders = {\n    serializedName: \"blob-settier-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobSetTierHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlobGetAccountInfoHeaders = {\n    serializedName: \"blob-getaccountinfo-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlobGetAccountInfoHeaders\",\n        modelProperties: {\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            skuName: {\n                serializedName: \"x-ms-sku-name\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Standard_LRS\",\n                        \"Standard_GRS\",\n                        \"Standard_RAGRS\",\n                        \"Standard_ZRS\",\n                        \"Premium_LRS\"\n                    ]\n                }\n            },\n            accountKind: {\n                serializedName: \"x-ms-account-kind\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"Storage\",\n                        \"BlobStorage\",\n                        \"StorageV2\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobStageBlockHeaders = {\n    serializedName: \"blockblob-stageblock-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobStageBlockFromURLHeaders = {\n    serializedName: \"blockblob-stageblockfromurl-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobStageBlockFromURLHeaders\",\n        modelProperties: {\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobCommitBlockListHeaders = {\n    serializedName: \"blockblob-commitblocklist-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobCommitBlockListHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var BlockBlobGetBlockListHeaders = {\n    serializedName: \"blockblob-getblocklist-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"BlockBlobGetBlockListHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            contentType: {\n                serializedName: \"content-type\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobUploadPagesHeaders = {\n    serializedName: \"pageblob-uploadpages-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUploadPagesHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            isServerEncrypted: {\n                serializedName: \"x-ms-request-server-encrypted\",\n                type: {\n                    name: \"Boolean\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobClearPagesHeaders = {\n    serializedName: \"pageblob-clearpages-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobClearPagesHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobGetPageRangesHeaders = {\n    serializedName: \"pageblob-getpageranges-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobGetPageRangesDiffHeaders = {\n    serializedName: \"pageblob-getpagerangesdiff-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobGetPageRangesDiffHeaders\",\n        modelProperties: {\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobContentLength: {\n                serializedName: \"x-ms-blob-content-length\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobResizeHeaders = {\n    serializedName: \"pageblob-resize-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobResizeHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobUpdateSequenceNumberHeaders = {\n    serializedName: \"pageblob-updatesequencenumber-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobUpdateSequenceNumberHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobSequenceNumber: {\n                serializedName: \"x-ms-blob-sequence-number\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var PageBlobCopyIncrementalHeaders = {\n    serializedName: \"pageblob-copyincremental-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"PageBlobCopyIncrementalHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            copyId: {\n                serializedName: \"x-ms-copy-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            copyStatus: {\n                serializedName: \"x-ms-copy-status\",\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"pending\",\n                        \"success\",\n                        \"aborted\",\n                        \"failed\"\n                    ]\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\nexport var AppendBlobAppendBlockHeaders = {\n    serializedName: \"appendblob-appendblock-headers\",\n    type: {\n        name: \"Composite\",\n        className: \"AppendBlobAppendBlockHeaders\",\n        modelProperties: {\n            eTag: {\n                serializedName: \"etag\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            lastModified: {\n                serializedName: \"last-modified\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            contentMD5: {\n                serializedName: \"content-md5\",\n                type: {\n                    name: \"ByteArray\"\n                }\n            },\n            requestId: {\n                serializedName: \"x-ms-request-id\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            version: {\n                serializedName: \"x-ms-version\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            date: {\n                serializedName: \"date\",\n                type: {\n                    name: \"DateTimeRfc1123\"\n                }\n            },\n            blobAppendOffset: {\n                serializedName: \"x-ms-blob-append-offset\",\n                type: {\n                    name: \"String\"\n                }\n            },\n            blobCommittedBlockCount: {\n                serializedName: \"x-ms-blob-committed-block-count\",\n                type: {\n                    name: \"Number\"\n                }\n            },\n            errorCode: {\n                serializedName: \"x-ms-error-code\",\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    }\n};\n//# sourceMappingURL=mappers.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nexport var access = {\n    parameterPath: [\n        \"options\",\n        \"access\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-public-access\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action0 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'acquire',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action1 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'release',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action2 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'renew',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action3 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'break',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var action4 = {\n    parameterPath: \"action\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-lease-action\",\n        defaultValue: 'change',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var appendPosition = {\n    parameterPath: [\n        \"options\",\n        \"appendPositionAccessConditions\",\n        \"appendPosition\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-appendpos\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobCacheControl = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobCacheControl\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-cache-control\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentDisposition = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentDisposition\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-disposition\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentEncoding = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentEncoding\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-encoding\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentLanguage = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentLanguage\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-language\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobContentLength = {\n    parameterPath: \"blobContentLength\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-blob-content-length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var blobContentType = {\n    parameterPath: [\n        \"options\",\n        \"blobHTTPHeaders\",\n        \"blobContentType\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-content-type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobSequenceNumber = {\n    parameterPath: [\n        \"options\",\n        \"blobSequenceNumber\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-sequence-number\",\n        defaultValue: 0,\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var blobType0 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'PageBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobType1 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'AppendBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blobType2 = {\n    parameterPath: \"blobType\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-blob-type\",\n        defaultValue: 'BlockBlob',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var blockId = {\n    parameterPath: \"blockId\",\n    mapper: {\n        required: true,\n        serializedName: \"blockid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var breakPeriod = {\n    parameterPath: [\n        \"options\",\n        \"breakPeriod\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-break-period\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var comp0 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'properties',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp1 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'stats',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp10 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'page',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp11 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'pagelist',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp12 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'incrementalcopy',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp13 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'appendblock',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp14 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'block',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp15 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'blocklist',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp2 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'list',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp3 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'metadata',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp4 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'acl',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp5 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'lease',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp6 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'undelete',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp7 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'snapshot',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp8 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'copy',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var comp9 = {\n    parameterPath: \"comp\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"comp\",\n        defaultValue: 'tier',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var contentLength = {\n    parameterPath: \"contentLength\",\n    mapper: {\n        required: true,\n        serializedName: \"Content-Length\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var copyActionAbortConstant = {\n    parameterPath: \"copyActionAbortConstant\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-copy-action\",\n        defaultValue: 'abort',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var copyId = {\n    parameterPath: \"copyId\",\n    mapper: {\n        required: true,\n        serializedName: \"copyid\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var copySource = {\n    parameterPath: \"copySource\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var deleteSnapshots = {\n    parameterPath: [\n        \"options\",\n        \"deleteSnapshots\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-delete-snapshots\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"include\",\n                \"only\"\n            ]\n        }\n    }\n};\nexport var delimiter = {\n    parameterPath: \"delimiter\",\n    mapper: {\n        required: true,\n        serializedName: \"delimiter\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var duration = {\n    parameterPath: [\n        \"options\",\n        \"duration\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-duration\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifMatch = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifMatch\"\n    ],\n    mapper: {\n        serializedName: \"If-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var ifModifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifModifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"If-Modified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var ifNoneMatch = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifNoneMatch\"\n    ],\n    mapper: {\n        serializedName: \"If-None-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var ifSequenceNumberEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-eq\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifSequenceNumberLessThan = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThan\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-lt\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifSequenceNumberLessThanOrEqualTo = {\n    parameterPath: [\n        \"options\",\n        \"sequenceNumberAccessConditions\",\n        \"ifSequenceNumberLessThanOrEqualTo\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-if-sequence-number-le\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var ifUnmodifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"modifiedAccessConditions\",\n        \"ifUnmodifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"If-Unmodified-Since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var include0 = {\n    parameterPath: [\n        \"options\",\n        \"include\"\n    ],\n    mapper: {\n        serializedName: \"include\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"metadata\"\n            ]\n        }\n    }\n};\nexport var include1 = {\n    parameterPath: [\n        \"options\",\n        \"include\"\n    ],\n    mapper: {\n        serializedName: \"include\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"Enum\",\n                    allowedValues: [\n                        \"snapshots\",\n                        \"metadata\",\n                        \"uncommittedblobs\",\n                        \"copy\",\n                        \"deleted\"\n                    ]\n                }\n            }\n        }\n    },\n    collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport var leaseId0 = {\n    parameterPath: [\n        \"options\",\n        \"leaseAccessConditions\",\n        \"leaseId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var leaseId1 = {\n    parameterPath: \"leaseId\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var listType = {\n    parameterPath: \"listType\",\n    mapper: {\n        required: true,\n        serializedName: \"blocklisttype\",\n        defaultValue: 'committed',\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"committed\",\n                \"uncommitted\",\n                \"all\"\n            ]\n        }\n    }\n};\nexport var marker = {\n    parameterPath: [\n        \"options\",\n        \"marker\"\n    ],\n    mapper: {\n        serializedName: \"marker\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var maxresults = {\n    parameterPath: [\n        \"options\",\n        \"maxresults\"\n    ],\n    mapper: {\n        serializedName: \"maxresults\",\n        constraints: {\n            InclusiveMinimum: 1\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var maxSize = {\n    parameterPath: [\n        \"options\",\n        \"appendPositionAccessConditions\",\n        \"maxSize\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-blob-condition-maxsize\",\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var metadata = {\n    parameterPath: [\n        \"options\",\n        \"metadata\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-meta\",\n        type: {\n            name: \"Dictionary\",\n            value: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n    }\n};\nexport var pageWrite0 = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        defaultValue: 'update',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var pageWrite1 = {\n    parameterPath: \"pageWrite\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-page-write\",\n        defaultValue: 'clear',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var prefix = {\n    parameterPath: [\n        \"options\",\n        \"prefix\"\n    ],\n    mapper: {\n        serializedName: \"prefix\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var prevsnapshot = {\n    parameterPath: [\n        \"options\",\n        \"prevsnapshot\"\n    ],\n    mapper: {\n        serializedName: \"prevsnapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var proposedLeaseId0 = {\n    parameterPath: [\n        \"options\",\n        \"proposedLeaseId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var proposedLeaseId1 = {\n    parameterPath: \"proposedLeaseId\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-proposed-lease-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var range = {\n    parameterPath: [\n        \"options\",\n        \"range\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var rangeGetContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"rangeGetContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-range-get-content-md5\",\n        type: {\n            name: \"Boolean\"\n        }\n    }\n};\nexport var requestId = {\n    parameterPath: [\n        \"options\",\n        \"requestId\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-client-request-id\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype0 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'service',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype1 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'account',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var restype2 = {\n    parameterPath: \"restype\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"restype\",\n        defaultValue: 'container',\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sequenceNumberAction = {\n    parameterPath: \"sequenceNumberAction\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-sequence-number-action\",\n        type: {\n            name: \"Enum\",\n            allowedValues: [\n                \"max\",\n                \"update\",\n                \"increment\"\n            ]\n        }\n    }\n};\nexport var snapshot = {\n    parameterPath: [\n        \"options\",\n        \"snapshot\"\n    ],\n    mapper: {\n        serializedName: \"snapshot\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"sourceContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-content-md5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var sourceIfMatch = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfMatch\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceIfModifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfModifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-modified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var sourceIfNoneMatch = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfNoneMatch\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-none-match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceIfUnmodifiedSince = {\n    parameterPath: [\n        \"options\",\n        \"sourceModifiedAccessConditions\",\n        \"sourceIfUnmodifiedSince\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-if-unmodified-since\",\n        type: {\n            name: \"DateTimeRfc1123\"\n        }\n    }\n};\nexport var sourceRange = {\n    parameterPath: [\n        \"options\",\n        \"sourceRange\"\n    ],\n    mapper: {\n        serializedName: \"x-ms-source-range\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var sourceUrl = {\n    parameterPath: \"sourceUrl\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-copy-source\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var tier = {\n    parameterPath: \"tier\",\n    mapper: {\n        required: true,\n        serializedName: \"x-ms-access-tier\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport var timeout = {\n    parameterPath: [\n        \"options\",\n        \"timeout\"\n    ],\n    mapper: {\n        serializedName: \"timeout\",\n        constraints: {\n            InclusiveMinimum: 0\n        },\n        type: {\n            name: \"Number\"\n        }\n    }\n};\nexport var transactionalContentMD5 = {\n    parameterPath: [\n        \"options\",\n        \"transactionalContentMD5\"\n    ],\n    mapper: {\n        serializedName: \"Content-MD5\",\n        type: {\n            name: \"ByteArray\"\n        }\n    }\n};\nexport var url = {\n    parameterPath: \"url\",\n    mapper: {\n        required: true,\n        serializedName: \"url\",\n        defaultValue: '',\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nexport var version = {\n    parameterPath: \"version\",\n    mapper: {\n        required: true,\n        isConstant: true,\n        serializedName: \"x-ms-version\",\n        defaultValue: '2018-03-28',\n        type: {\n            name: \"String\"\n        }\n    }\n};\n//# sourceMappingURL=parameters.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/serviceMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Service. */\nvar Service = /** @class */ (function () {\n    /**\n     * Create a Service.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Service(client) {\n        this.client = client;\n    }\n    Service.prototype.setProperties = function (storageServiceProperties, options, callback) {\n        return this.client.sendOperationRequest({\n            storageServiceProperties: storageServiceProperties,\n            options: options\n        }, setPropertiesOperationSpec, callback);\n    };\n    Service.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Service.prototype.getStatistics = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getStatisticsOperationSpec, callback);\n    };\n    Service.prototype.listContainersSegment = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, listContainersSegmentOperationSpec, callback);\n    };\n    Service.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Service;\n}());\nexport { Service };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar setPropertiesOperationSpec = {\n    httpMethod: \"PUT\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    requestBody: {\n        parameterPath: \"storageServiceProperties\",\n        mapper: tslib_1.__assign({}, Mappers.StorageServiceProperties, { required: true })\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        202: {\n            headersMapper: Mappers.ServiceSetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.StorageServiceProperties,\n            headersMapper: Mappers.ServiceGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getStatisticsOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype0,\n        Parameters.comp1\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.StorageServiceStats,\n            headersMapper: Mappers.ServiceGetStatisticsHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listContainersSegmentOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include0,\n        Parameters.timeout,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListContainersSegmentResponse,\n            headersMapper: Mappers.ServiceListContainersSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ServiceGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=service.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/containerMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Container. */\nvar Container = /** @class */ (function () {\n    /**\n     * Create a Container.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Container(client) {\n        this.client = client;\n    }\n    Container.prototype.create = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, createOperationSpec, callback);\n    };\n    Container.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Container.prototype.deleteMethod = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, deleteMethodOperationSpec, callback);\n    };\n    Container.prototype.setMetadata = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setMetadataOperationSpec, callback);\n    };\n    Container.prototype.getAccessPolicy = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccessPolicyOperationSpec, callback);\n    };\n    Container.prototype.setAccessPolicy = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setAccessPolicyOperationSpec, callback);\n    };\n    Container.prototype.acquireLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, acquireLeaseOperationSpec, callback);\n    };\n    Container.prototype.releaseLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, releaseLeaseOperationSpec, callback);\n    };\n    Container.prototype.renewLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, renewLeaseOperationSpec, callback);\n    };\n    Container.prototype.breakLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, breakLeaseOperationSpec, callback);\n    };\n    Container.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            proposedLeaseId: proposedLeaseId,\n            options: options\n        }, changeLeaseOperationSpec, callback);\n    };\n    Container.prototype.listBlobFlatSegment = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, listBlobFlatSegmentOperationSpec, callback);\n    };\n    Container.prototype.listBlobHierarchySegment = function (delimiter, options, callback) {\n        return this.client.sendOperationRequest({\n            delimiter: delimiter,\n            options: options\n        }, listBlobHierarchySegmentOperationSpec, callback);\n    };\n    Container.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Container;\n}());\nexport { Container };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.access,\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar deleteMethodOperationSpec = {\n    httpMethod: \"DELETE\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setMetadataOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp3\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccessPolicyOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp4\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            bodyMapper: {\n                xmlElementName: \"SignedIdentifier\",\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Sequence\",\n                    element: {\n                        type: {\n                            name: \"Composite\",\n                            className: \"SignedIdentifier\"\n                        }\n                    }\n                }\n            },\n            headersMapper: Mappers.ContainerGetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setAccessPolicyOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp4\n    ],\n    headerParameters: [\n        Parameters.access,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    requestBody: {\n        parameterPath: [\n            \"options\",\n            \"containerAcl\"\n        ],\n        mapper: {\n            xmlName: \"SignedIdentifiers\",\n            xmlElementName: \"SignedIdentifier\",\n            serializedName: \"containerAcl\",\n            type: {\n                name: \"Sequence\",\n                element: {\n                    type: {\n                        name: \"Composite\",\n                        className: \"SignedIdentifier\"\n                    }\n                }\n            }\n        }\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerSetAccessPolicyHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar acquireLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.duration,\n        Parameters.proposedLeaseId0,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.ContainerAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar releaseLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar renewLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action2,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar breakLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.breakPeriod,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action3,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.ContainerBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar changeLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5,\n        Parameters.restype2\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.proposedLeaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action4,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listBlobFlatSegmentOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include1,\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsFlatSegmentResponse,\n            headersMapper: Mappers.ContainerListBlobFlatSegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar listBlobHierarchySegmentOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.prefix,\n        Parameters.delimiter,\n        Parameters.marker,\n        Parameters.maxresults,\n        Parameters.include1,\n        Parameters.timeout,\n        Parameters.restype2,\n        Parameters.comp2\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.ListBlobsHierarchySegmentResponse,\n            headersMapper: Mappers.ContainerListBlobHierarchySegmentHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.ContainerGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=container.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/blobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a Blob. */\nvar Blob = /** @class */ (function () {\n    /**\n     * Create a Blob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function Blob(client) {\n        this.client = client;\n    }\n    Blob.prototype.download = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, downloadOperationSpec, callback);\n    };\n    Blob.prototype.getProperties = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPropertiesOperationSpec, callback);\n    };\n    Blob.prototype.deleteMethod = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, deleteMethodOperationSpec, callback);\n    };\n    Blob.prototype.undelete = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, undeleteOperationSpec, callback);\n    };\n    Blob.prototype.setHTTPHeaders = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setHTTPHeadersOperationSpec, callback);\n    };\n    Blob.prototype.setMetadata = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, setMetadataOperationSpec, callback);\n    };\n    Blob.prototype.acquireLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, acquireLeaseOperationSpec, callback);\n    };\n    Blob.prototype.releaseLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, releaseLeaseOperationSpec, callback);\n    };\n    Blob.prototype.renewLease = function (leaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            options: options\n        }, renewLeaseOperationSpec, callback);\n    };\n    Blob.prototype.changeLease = function (leaseId, proposedLeaseId, options, callback) {\n        return this.client.sendOperationRequest({\n            leaseId: leaseId,\n            proposedLeaseId: proposedLeaseId,\n            options: options\n        }, changeLeaseOperationSpec, callback);\n    };\n    Blob.prototype.breakLease = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, breakLeaseOperationSpec, callback);\n    };\n    Blob.prototype.createSnapshot = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, createSnapshotOperationSpec, callback);\n    };\n    Blob.prototype.startCopyFromURL = function (copySource, options, callback) {\n        return this.client.sendOperationRequest({\n            copySource: copySource,\n            options: options\n        }, startCopyFromURLOperationSpec, callback);\n    };\n    Blob.prototype.abortCopyFromURL = function (copyId, options, callback) {\n        return this.client.sendOperationRequest({\n            copyId: copyId,\n            options: options\n        }, abortCopyFromURLOperationSpec, callback);\n    };\n    Blob.prototype.setTier = function (tier, options, callback) {\n        return this.client.sendOperationRequest({\n            tier: tier,\n            options: options\n        }, setTierOperationSpec, callback);\n    };\n    Blob.prototype.getAccountInfo = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getAccountInfoOperationSpec, callback);\n    };\n    return Blob;\n}());\nexport { Blob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar downloadOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.rangeGetContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        206: {\n            bodyMapper: {\n                serializedName: \"parsedResponse\",\n                type: {\n                    name: \"Stream\"\n                }\n            },\n            headersMapper: Mappers.BlobDownloadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPropertiesOperationSpec = {\n    httpMethod: \"HEAD\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetPropertiesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar deleteMethodOperationSpec = {\n    httpMethod: \"DELETE\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.deleteSnapshots,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobDeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar undeleteOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp6\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobUndeleteHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setHTTPHeadersOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentMD5,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetHTTPHeadersHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setMetadataOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp3\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetMetadataHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar acquireLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.duration,\n        Parameters.proposedLeaseId0,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobAcquireLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar releaseLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action1,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobReleaseLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar renewLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action2,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobRenewLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar changeLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.leaseId1,\n        Parameters.proposedLeaseId1,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action4,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobChangeLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar breakLeaseOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp5\n    ],\n    headerParameters: [\n        Parameters.breakPeriod,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.action3,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobBreakLeaseHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar createSnapshotOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp7\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.leaseId0\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlobCreateSnapshotHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar startCopyFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.copySource,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.sourceIfModifiedSince,\n        Parameters.sourceIfUnmodifiedSince,\n        Parameters.sourceIfMatch,\n        Parameters.sourceIfNoneMatch,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch,\n        Parameters.leaseId0\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.BlobStartCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar abortCopyFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.copyId,\n        Parameters.timeout,\n        Parameters.comp8\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.copyActionAbortConstant,\n        Parameters.leaseId0\n    ],\n    responses: {\n        204: {\n            headersMapper: Mappers.BlobAbortCopyFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar setTierOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp9\n    ],\n    headerParameters: [\n        Parameters.tier,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        202: {\n            headersMapper: Mappers.BlobSetTierHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getAccountInfoOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blobName}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.restype1,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.version\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.BlobGetAccountInfoHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=blob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/pageBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a PageBlob. */\nvar PageBlob = /** @class */ (function () {\n    /**\n     * Create a PageBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function PageBlob(client) {\n        this.client = client;\n    }\n    PageBlob.prototype.create = function (contentLength, blobContentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            blobContentLength: blobContentLength,\n            options: options\n        }, createOperationSpec, callback);\n    };\n    PageBlob.prototype.uploadPages = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, uploadPagesOperationSpec, callback);\n    };\n    PageBlob.prototype.clearPages = function (contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            options: options\n        }, clearPagesOperationSpec, callback);\n    };\n    PageBlob.prototype.getPageRanges = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPageRangesOperationSpec, callback);\n    };\n    PageBlob.prototype.getPageRangesDiff = function (options, callback) {\n        return this.client.sendOperationRequest({\n            options: options\n        }, getPageRangesDiffOperationSpec, callback);\n    };\n    PageBlob.prototype.resize = function (blobContentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            blobContentLength: blobContentLength,\n            options: options\n        }, resizeOperationSpec, callback);\n    };\n    PageBlob.prototype.updateSequenceNumber = function (sequenceNumberAction, options, callback) {\n        return this.client.sendOperationRequest({\n            sequenceNumberAction: sequenceNumberAction,\n            options: options\n        }, updateSequenceNumberOperationSpec, callback);\n    };\n    PageBlob.prototype.copyIncremental = function (copySource, options, callback) {\n        return this.client.sendOperationRequest({\n            copySource: copySource,\n            options: options\n        }, copyIncrementalOperationSpec, callback);\n    };\n    return PageBlob;\n}());\nexport { PageBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.blobContentLength,\n        Parameters.blobSequenceNumber,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType0,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar uploadPagesOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp10\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.pageWrite0,\n        Parameters.leaseId0,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobUploadPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar clearPagesOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp10\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.pageWrite1,\n        Parameters.leaseId0,\n        Parameters.ifSequenceNumberLessThanOrEqualTo,\n        Parameters.ifSequenceNumberLessThan,\n        Parameters.ifSequenceNumberEqualTo,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.PageBlobClearPagesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPageRangesOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout,\n        Parameters.comp11\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getPageRangesDiffOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.timeout,\n        Parameters.prevsnapshot,\n        Parameters.comp11\n    ],\n    headerParameters: [\n        Parameters.range,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.PageList,\n            headersMapper: Mappers.PageBlobGetPageRangesDiffHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar resizeOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.blobContentLength,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobResizeHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar updateSequenceNumberOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp0\n    ],\n    headerParameters: [\n        Parameters.sequenceNumberAction,\n        Parameters.blobSequenceNumber,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        200: {\n            headersMapper: Mappers.PageBlobUpdateSequenceNumberHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar copyIncrementalOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp12\n    ],\n    headerParameters: [\n        Parameters.copySource,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        202: {\n            headersMapper: Mappers.PageBlobCopyIncrementalHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=pageBlob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/appendBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a AppendBlob. */\nvar AppendBlob = /** @class */ (function () {\n    /**\n     * Create a AppendBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function AppendBlob(client) {\n        this.client = client;\n    }\n    AppendBlob.prototype.create = function (contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            contentLength: contentLength,\n            options: options\n        }, createOperationSpec, callback);\n    };\n    AppendBlob.prototype.appendBlock = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, appendBlockOperationSpec, callback);\n    };\n    return AppendBlob;\n}());\nexport { AppendBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar createOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType1,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobCreateHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar appendBlockOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp13\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0,\n        Parameters.maxSize,\n        Parameters.appendPosition,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        201: {\n            headersMapper: Mappers.AppendBlobAppendBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=appendBlob.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Mappers from \"../models/blockBlobMappers\";\nimport * as Parameters from \"../models/parameters\";\n/** Class representing a BlockBlob. */\nvar BlockBlob = /** @class */ (function () {\n    /**\n     * Create a BlockBlob.\n     * @param {StorageClientContext} client Reference to the service client.\n     */\n    function BlockBlob(client) {\n        this.client = client;\n    }\n    BlockBlob.prototype.upload = function (body, contentLength, options, callback) {\n        return this.client.sendOperationRequest({\n            body: body,\n            contentLength: contentLength,\n            options: options\n        }, uploadOperationSpec, callback);\n    };\n    BlockBlob.prototype.stageBlock = function (blockId, contentLength, body, options, callback) {\n        return this.client.sendOperationRequest({\n            blockId: blockId,\n            contentLength: contentLength,\n            body: body,\n            options: options\n        }, stageBlockOperationSpec, callback);\n    };\n    BlockBlob.prototype.stageBlockFromURL = function (blockId, contentLength, sourceUrl, options, callback) {\n        return this.client.sendOperationRequest({\n            blockId: blockId,\n            contentLength: contentLength,\n            sourceUrl: sourceUrl,\n            options: options\n        }, stageBlockFromURLOperationSpec, callback);\n    };\n    BlockBlob.prototype.commitBlockList = function (blocks, options, callback) {\n        return this.client.sendOperationRequest({\n            blocks: blocks,\n            options: options\n        }, commitBlockListOperationSpec, callback);\n    };\n    BlockBlob.prototype.getBlockList = function (listType, options, callback) {\n        return this.client.sendOperationRequest({\n            listType: listType,\n            options: options\n        }, getBlockListOperationSpec, callback);\n    };\n    return BlockBlob;\n}());\nexport { BlockBlob };\n// Operation Specifications\nvar serializer = new msRest.Serializer(Mappers, true);\nvar uploadOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobType2,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobCacheControl,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobUploadHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar stageBlockOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.blockId,\n        Parameters.timeout,\n        Parameters.comp14\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.transactionalContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    requestBody: {\n        parameterPath: \"body\",\n        mapper: {\n            required: true,\n            serializedName: \"body\",\n            type: {\n                name: \"Stream\"\n            }\n        }\n    },\n    contentType: \"application/octet-stream\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar stageBlockFromURLOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.blockId,\n        Parameters.timeout,\n        Parameters.comp14\n    ],\n    headerParameters: [\n        Parameters.contentLength,\n        Parameters.sourceUrl,\n        Parameters.sourceRange,\n        Parameters.sourceContentMD5,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobStageBlockFromURLHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar commitBlockListOperationSpec = {\n    httpMethod: \"PUT\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.timeout,\n        Parameters.comp15\n    ],\n    headerParameters: [\n        Parameters.metadata,\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.blobCacheControl,\n        Parameters.blobContentType,\n        Parameters.blobContentEncoding,\n        Parameters.blobContentLanguage,\n        Parameters.blobContentMD5,\n        Parameters.blobContentDisposition,\n        Parameters.leaseId0,\n        Parameters.ifModifiedSince,\n        Parameters.ifUnmodifiedSince,\n        Parameters.ifMatch,\n        Parameters.ifNoneMatch\n    ],\n    requestBody: {\n        parameterPath: \"blocks\",\n        mapper: tslib_1.__assign({}, Mappers.BlockLookupList, { required: true })\n    },\n    contentType: \"application/xml; charset=utf-8\",\n    responses: {\n        201: {\n            headersMapper: Mappers.BlockBlobCommitBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\nvar getBlockListOperationSpec = {\n    httpMethod: \"GET\",\n    path: \"{containerName}/{blob}\",\n    urlParameters: [\n        Parameters.url\n    ],\n    queryParameters: [\n        Parameters.snapshot,\n        Parameters.listType,\n        Parameters.timeout,\n        Parameters.comp15\n    ],\n    headerParameters: [\n        Parameters.version,\n        Parameters.requestId,\n        Parameters.leaseId0\n    ],\n    responses: {\n        200: {\n            bodyMapper: Mappers.BlockList,\n            headersMapper: Mappers.BlockBlobGetBlockListHeaders\n        },\n        default: {\n            bodyMapper: Mappers.StorageError\n        }\n    },\n    isXML: true,\n    serializer: serializer\n};\n//# sourceMappingURL=blockBlob.js.map","/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @export\n * @param {IRange} iRange\n * @returns {string}\n */\nexport function rangeToString(iRange) {\n    if (iRange.offset < 0) {\n        throw new RangeError(\"IRange.offset cannot be smaller than 0.\");\n    }\n    if (iRange.count && iRange.count <= 0) {\n        throw new RangeError(\"IRange.count must be larger than 0. Leave it undefined if you want a range from offset to the end.\");\n    }\n    return iRange.count\n        ? \"bytes=\" + iRange.offset + \"-\" + (iRange.offset + iRange.count - 1)\n        : \"bytes=\" + iRange.offset + \"-\";\n}\n//# sourceMappingURL=IRange.js.map","export var SDK_VERSION = \"10.3.0\";\nexport var SERVICE_VERSION = \"2018-03-28\";\nexport var BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES = 256 * 1024 * 1024; // 256MB\nexport var BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES = 100 * 1024 * 1024; // 100MB\nexport var BLOCK_BLOB_MAX_BLOCKS = 50000;\nexport var DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES = 4 * 1024 * 1024; // 4MB\nexport var DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS = 5;\nexport var URLConstants = {\n    Parameters: {\n        FORCE_BROWSER_NO_CACHE: \"_\",\n        SIGNATURE: \"sig\",\n        SNAPSHOT: \"snapshot\",\n        TIMEOUT: \"timeout\"\n    }\n};\nexport var HTTPURLConnection = {\n    HTTP_CONFLICT: 409,\n    HTTP_NOT_FOUND: 404,\n    HTTP_PRECON_FAILED: 412,\n    HTTP_RANGE_NOT_SATISFIABLE: 416\n};\nexport var HeaderConstants = {\n    AUTHORIZATION: \"authorization\",\n    AUTHORIZATION_SCHEME: \"Bearer\",\n    CONTENT_ENCODING: \"content-encoding\",\n    CONTENT_LANGUAGE: \"content-language\",\n    CONTENT_LENGTH: \"content-length\",\n    CONTENT_MD5: \"content-md5\",\n    CONTENT_TYPE: \"content-type\",\n    COOKIE: \"Cookie\",\n    DATE: \"date\",\n    IF_MATCH: \"if-match\",\n    IF_MODIFIED_SINCE: \"if-modified-since\",\n    IF_NONE_MATCH: \"if-none-match\",\n    IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n    PREFIX_FOR_STORAGE: \"x-ms-\",\n    RANGE: \"Range\",\n    USER_AGENT: \"User-Agent\",\n    X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n    X_MS_DATE: \"x-ms-date\"\n};\nexport var ETagNone = \"\";\nexport var ETagAny = \"*\";\n//# sourceMappingURL=constants.js.map","import { isNode, URLBuilder } from \"@azure/ms-rest-js\";\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JSv10 SDKs\n *\n * When customers pass a URL string into XXXURL classes constrcutor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXURL constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `BlobURL.fromContainerURL(containerURL, blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @export\n * @param {string} url\n * @returns {string}\n */\nexport function escapeURLPath(url) {\n    var urlParsed = URLBuilder.parse(url);\n    var path = urlParsed.getPath();\n    path = path || \"/\";\n    path = escape(path);\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\n/**\n * Internal escape method implmented Strategy Two mentioned in escapeURL() description.\n *\n * @param {string} text\n * @returns {string}\n */\nfunction escape(text) {\n    return encodeURIComponent(text)\n        .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n        .replace(/'/g, \"%27\") // Escape for \"'\"\n        .replace(/\\+/g, \"%20\")\n        .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name String to be appended to URL\n * @returns {string} An updated URL string\n */\nexport function appendToURLPath(url, name) {\n    var urlParsed = URLBuilder.parse(url);\n    var path = urlParsed.getPath();\n    path = path\n        ? path.endsWith(\"/\")\n            ? \"\" + path + name\n            : path + \"/\" + name\n        : name;\n    urlParsed.setPath(path);\n    return urlParsed.toString();\n}\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} name Parameter name\n * @param {string} [value] Parameter value\n * @returns {string} An updated URL string\n */\nexport function setURLParameter(url, name, value) {\n    var urlParsed = URLBuilder.parse(url);\n    urlParsed.setQueryParameter(name, value);\n    return urlParsed.toString();\n}\n/**\n * Get URL parameter by name.\n *\n * @export\n * @param {string} url\n * @param {string} name\n * @returns {(string | string[] | undefined)}\n */\nexport function getURLParameter(url, name) {\n    var urlParsed = URLBuilder.parse(url);\n    return urlParsed.getQueryParameterValue(name);\n}\n/**\n * Set URL host.\n *\n * @export\n * @param {string} url Source URL string\n * @param {string} host New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url, host) {\n    var urlParsed = URLBuilder.parse(url);\n    urlParsed.setHost(host);\n    return urlParsed.toString();\n}\n/**\n * Get URL path from an URL string.\n *\n * @export\n * @param {string} url Source URL string\n * @returns {(string | undefined)}\n */\nexport function getURLPath(url) {\n    var urlParsed = URLBuilder.parse(url);\n    return urlParsed.getPath();\n}\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @export\n * @param {string} url\n * @returns {{[key: string]: string}}\n */\nexport function getURLQueries(url) {\n    var queryString = URLBuilder.parse(url).getQuery();\n    if (!queryString) {\n        return {};\n    }\n    queryString = queryString.trim();\n    queryString = queryString.startsWith(\"?\")\n        ? queryString.substr(1)\n        : queryString;\n    var querySubStrings = queryString.split(\"&\");\n    querySubStrings = querySubStrings.filter(function (value) {\n        var indexOfEqual = value.indexOf(\"=\");\n        var lastIndexOfEqual = value.lastIndexOf(\"=\");\n        return (indexOfEqual > 0 &&\n            indexOfEqual === lastIndexOfEqual &&\n            lastIndexOfEqual < value.length - 1);\n    });\n    var queries = {};\n    for (var _i = 0, querySubStrings_1 = querySubStrings; _i < querySubStrings_1.length; _i++) {\n        var querySubString = querySubStrings_1[_i];\n        var splitResults = querySubString.split(\"=\");\n        var key = splitResults[0];\n        var value = splitResults[1];\n        queries[key] = value;\n    }\n    return queries;\n}\n/**\n * Rounds a date off to seconds.\n *\n * @export\n * @param {Date} date\n * @param {boolean} [withMilliseconds=true] If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns {string} Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date, withMilliseconds) {\n    if (withMilliseconds === void 0) { withMilliseconds = true; }\n    // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n    var dateString = date.toISOString();\n    return withMilliseconds\n        ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n        : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n/**\n * Base64 encode.\n *\n * @export\n * @param {string} content\n * @returns {string}\n */\nexport function base64encode(content) {\n    return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n/**\n * Base64 decode.\n *\n * @export\n * @param {string} encodedString\n * @returns {string}\n */\nexport function base64decode(encodedString) {\n    return !isNode\n        ? atob(encodedString)\n        : Buffer.from(encodedString, \"base64\").toString();\n}\n/**\n * Generate a 64 bytes base64 block ID string.\n *\n * @export\n * @param {number} blockIndex\n * @returns {string}\n */\nexport function generateBlockID(blockIDPrefix, blockIndex) {\n    // To generate a 64 bytes base64 string, source string should be 48\n    var maxSourceStringLength = 48;\n    // A blob can have a maximum of 100,000 uncommitted blocks at any given time\n    var maxBlockIndexLength = 6;\n    var maxAllowedBlockIDPrefixLength = maxSourceStringLength - maxBlockIndexLength;\n    if (blockIDPrefix.length > maxAllowedBlockIDPrefixLength) {\n        blockIDPrefix = blockIDPrefix.slice(0, maxAllowedBlockIDPrefixLength);\n    }\n    var res = blockIDPrefix +\n        padStart(blockIndex.toString(), maxSourceStringLength - blockIDPrefix.length, \"0\");\n    return base64encode(res);\n}\n/**\n * String.prototype.padStart()\n *\n * @export\n * @param {string} currentString\n * @param {number} targetLength\n * @param {string} [padString=\" \"]\n * @returns {string}\n */\nexport function padStart(currentString, targetLength, padString) {\n    if (padString === void 0) { padString = \" \"; }\n    if (String.prototype.padStart) {\n        return currentString.padStart(targetLength, padString);\n    }\n    padString = padString || \" \";\n    if (currentString.length > targetLength) {\n        return currentString;\n    }\n    else {\n        targetLength = targetLength - currentString.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + currentString;\n    }\n}\n//# sourceMappingURL=utils.common.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, isNode } from \"@azure/ms-rest-js\";\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n/**\n * BrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * BrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n *\n * @class BrowserPolicy\n * @extends {BaseRequestPolicy}\n */\nvar BrowserPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserPolicy, _super);\n    /**\n     * Creates an instance of BrowserPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @memberof BrowserPolicy\n     */\n    function BrowserPolicy(nextPolicy, options) {\n        return _super.call(this, nextPolicy, options) || this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof BrowserPolicy\n     */\n    BrowserPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (isNode) {\n                    return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n                }\n                if (request.method.toUpperCase() === \"GET\" ||\n                    request.method.toUpperCase() === \"HEAD\") {\n                    request.url = setURLParameter(request.url, URLConstants.Parameters.FORCE_BROWSER_NO_CACHE, new Date().getTime().toString());\n                }\n                request.headers.remove(HeaderConstants.COOKIE);\n                // According to XHR standards, content-length should be fully controlled by browsers\n                request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return BrowserPolicy;\n}(BaseRequestPolicy));\nexport { BrowserPolicy };\n//# sourceMappingURL=BrowserPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, delay, HttpPipelineLogLevel } from \"@azure/ms-rest-js\";\nimport { URLConstants } from \"../utils/constants\";\nimport { setURLHost, setURLParameter } from \"../utils/utils.common\";\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @export\n * @param {IRetryOptions} retryOptions\n * @returns\n */\nexport function NewRetryPolicyFactory(retryOptions) {\n    return {\n        create: function (nextPolicy, options) {\n            return new RetryPolicy(nextPolicy, options, retryOptions);\n        }\n    };\n}\n/**\n * RetryPolicy types.\n *\n * @export\n * @enum {number}\n */\nexport var RetryPolicyType;\n(function (RetryPolicyType) {\n    /**\n     * Exponential retry. Retry time delay grows exponentially.\n     */\n    RetryPolicyType[RetryPolicyType[\"EXPONENTIAL\"] = 0] = \"EXPONENTIAL\";\n    /**\n     * Linear retry. Retry time delay grows linearly.\n     */\n    RetryPolicyType[RetryPolicyType[\"FIXED\"] = 1] = \"FIXED\";\n})(RetryPolicyType || (RetryPolicyType = {}));\n// Default values of IRetryOptions\nvar DEFAULT_RETRY_OPTIONS = {\n    maxRetryDelayInMs: 120 * 1000,\n    maxTries: 4,\n    retryDelayInMs: 4 * 1000,\n    retryPolicyType: RetryPolicyType.EXPONENTIAL,\n    secondaryHost: \"\",\n    tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n/**\n * Retry policy with exponential retry and linear retry implemented.\n *\n * @class RetryPolicy\n * @extends {BaseRequestPolicy}\n */\nvar RetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(RetryPolicy, _super);\n    /**\n     * Creates an instance of RetryPolicy.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {IRetryOptions} [retryOptions=DEFAULT_RETRY_OPTIONS]\n     * @memberof RetryPolicy\n     */\n    function RetryPolicy(nextPolicy, options, retryOptions) {\n        if (retryOptions === void 0) { retryOptions = DEFAULT_RETRY_OPTIONS; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        // Initialize retry options\n        _this.retryOptions = {\n            retryPolicyType: retryOptions.retryPolicyType\n                ? retryOptions.retryPolicyType\n                : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n            maxTries: retryOptions.maxTries && retryOptions.maxTries >= 1\n                ? Math.floor(retryOptions.maxTries)\n                : DEFAULT_RETRY_OPTIONS.maxTries,\n            tryTimeoutInMs: retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n                ? retryOptions.tryTimeoutInMs\n                : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n            retryDelayInMs: retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n                ? Math.min(retryOptions.retryDelayInMs, retryOptions.maxRetryDelayInMs\n                    ? retryOptions.maxRetryDelayInMs\n                    : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs)\n                : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n            maxRetryDelayInMs: retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n            secondaryHost: retryOptions.secondaryHost\n                ? retryOptions.secondaryHost\n                : DEFAULT_RETRY_OPTIONS.secondaryHost\n        };\n        return _this;\n    }\n    /**\n     * Sends request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.attemptSendRequest(request, false, 1)];\n            });\n        });\n    };\n    /**\n     * Decide and perform next retry. Won't mutate request parameter.\n     *\n     * @protected\n     * @param {WebResource} request\n     * @param {HttpOperationResponse} response\n     * @param {boolean} secondaryHas404  If attempt was against the secondary & it returned a StatusNotFound (404), then\n     *                                   the resource was not found. This may be due to replication delay. So, in this\n     *                                   case, we'll never try the secondary again for this operation.\n     * @param {number} attempt           How many retries has been attempted to performed, starting from 1, which includes\n     *                                   the attempt will be performed by this method call.\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.attemptSendRequest = function (request, secondaryHas404, attempt) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var newRequest, isPrimaryRetry, response, err_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        newRequest = request.clone();\n                        isPrimaryRetry = secondaryHas404 ||\n                            !this.retryOptions.secondaryHost ||\n                            !(request.method === \"GET\" ||\n                                request.method === \"HEAD\" ||\n                                request.method === \"OPTIONS\") ||\n                            attempt % 2 === 1;\n                        if (!isPrimaryRetry) {\n                            newRequest.url = setURLHost(newRequest.url, this.retryOptions.secondaryHost);\n                        }\n                        // Set the server-side timeout query parameter \"timeout=[seconds]\"\n                        if (this.retryOptions.tryTimeoutInMs) {\n                            newRequest.url = setURLParameter(newRequest.url, URLConstants.Parameters.TIMEOUT, Math.floor(this.retryOptions.tryTimeoutInMs / 1000).toString());\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: =====> Try=\" + attempt + \" \" + (isPrimaryRetry ? \"Primary\" : \"Secondary\"));\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(newRequest)];\n                    case 2:\n                        response = _a.sent();\n                        if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n                            return [2 /*return*/, response];\n                        }\n                        secondaryHas404 =\n                            secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        err_1 = _a.sent();\n                        this.logf(HttpPipelineLogLevel.ERROR, \"RetryPolicy: Caught error, message: \" + err_1.message + \", code: \" + err_1.code);\n                        if (!this.shouldRetry(isPrimaryRetry, attempt, response, err_1)) {\n                            throw err_1;\n                        }\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, this.delay(isPrimaryRetry, attempt)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.attemptSendRequest(request, secondaryHas404, ++attempt)];\n                    case 6: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Decide whether to retry according to last HTTP response and retry counters.\n     *\n     * @protected\n     * @param {boolean} isPrimaryRetry\n     * @param {number} attempt\n     * @param {HttpOperationResponse} [response]\n     * @param {RestError} [err]\n     * @returns {boolean}\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.shouldRetry = function (isPrimaryRetry, attempt, response, err) {\n        if (attempt >= this.retryOptions.maxTries) {\n            this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Attempt(s) \" + attempt + \" >= maxTries \" + this.retryOptions\n                .maxTries + \", no further try.\");\n            return false;\n        }\n        // Handle network failures, you may need to customize the list when you implement\n        // your own http client\n        var retriableErrors = [\n            \"ETIMEDOUT\",\n            \"ESOCKETTIMEDOUT\",\n            \"ECONNREFUSED\",\n            \"ECONNRESET\",\n            \"ENOENT\",\n            \"ENOTFOUND\",\n            \"TIMEOUT\",\n            \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n        ];\n        if (err) {\n            for (var _i = 0, retriableErrors_1 = retriableErrors; _i < retriableErrors_1.length; _i++) {\n                var retriableError = retriableErrors_1[_i];\n                if (err.name.toUpperCase().includes(retriableError) ||\n                    err.message.toUpperCase().includes(retriableError) ||\n                    (err.code && err.code.toUpperCase().includes(retriableError))) {\n                    this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Network error \" + retriableError + \" found, will retry.\");\n                    return true;\n                }\n            }\n        }\n        // If attempt was against the secondary & it returned a StatusNotFound (404), then\n        // the resource was not found. This may be due to replication delay. So, in this\n        // case, we'll never try the secondary again for this operation.\n        if (response || err) {\n            var statusCode = response ? response.status : err ? err.statusCode : 0;\n            if (!isPrimaryRetry && statusCode === 404) {\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Secondary access with 404, will retry.\");\n                return true;\n            }\n            // Server internal error or server timeout\n            if (statusCode === 503 || statusCode === 500) {\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Will retry for status code \" + statusCode + \".\");\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * This is to log for debugging purposes only.\n     * Comment/uncomment as necessary for releasing/debugging.\n     *\n     * @private\n     * @param {HttpPipelineLogLevel} level\n     * @param {string} message\n     * @memberof RetryPolicy\n     */\n    // tslint:disable-next-line:variable-name\n    RetryPolicy.prototype.logf = function (_level, _message) {\n        // this.log(_level, _message);\n    };\n    /**\n     * Delay a calculated time between retries.\n     *\n     * @private\n     * @param {boolean} isPrimaryRetry\n     * @param {number} attempt\n     * @returns\n     * @memberof RetryPolicy\n     */\n    RetryPolicy.prototype.delay = function (isPrimaryRetry, attempt) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var delayTimeInMs;\n            return tslib_1.__generator(this, function (_a) {\n                delayTimeInMs = 0;\n                if (isPrimaryRetry) {\n                    switch (this.retryOptions.retryPolicyType) {\n                        case RetryPolicyType.EXPONENTIAL:\n                            delayTimeInMs = Math.min((Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs, this.retryOptions.maxRetryDelayInMs);\n                            break;\n                        case RetryPolicyType.FIXED:\n                            delayTimeInMs = this.retryOptions.retryDelayInMs;\n                            break;\n                    }\n                }\n                else {\n                    delayTimeInMs = Math.random() * 1000;\n                }\n                this.logf(HttpPipelineLogLevel.INFO, \"RetryPolicy: Delay for \" + delayTimeInMs + \"ms\");\n                return [2 /*return*/, delay(delayTimeInMs)];\n            });\n        });\n    };\n    return RetryPolicy;\n}(BaseRequestPolicy));\nexport { RetryPolicy };\n//# sourceMappingURL=RetryPolicy.js.map","import { BrowserPolicy } from \"./policies/BrowserPolicy\";\n/**\n * BrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n *\n * @export\n * @class BrowserPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar BrowserPolicyFactory = /** @class */ (function () {\n    function BrowserPolicyFactory() {\n    }\n    BrowserPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new BrowserPolicy(nextPolicy, options);\n    };\n    return BrowserPolicyFactory;\n}());\nexport { BrowserPolicyFactory };\n//# sourceMappingURL=BrowserPolicyFactory.js.map","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\nimport * as tslib_1 from \"tslib\";\nimport * as msRest from \"@azure/ms-rest-js\";\nvar packageName = \"azure-storage-blob\";\nvar packageVersion = \"1.0.0\";\nvar StorageClientContext = /** @class */ (function (_super) {\n    tslib_1.__extends(StorageClientContext, _super);\n    /**\n     * Initializes a new instance of the StorageClientContext class.\n     * @param url The URL of the service account, container, or blob that is the targe of the desired\n     * operation.\n     * @param [options] The parameter options\n     */\n    function StorageClientContext(url, options) {\n        var _this = this;\n        if (url === null || url === undefined) {\n            throw new Error('\\'url\\' cannot be null.');\n        }\n        if (!options) {\n            options = {};\n        }\n        if (!options.userAgent) {\n            var defaultUserAgent = msRest.getDefaultUserAgentValue();\n            options.userAgent = packageName + \"/\" + packageVersion + \" \" + defaultUserAgent;\n        }\n        _this = _super.call(this, undefined, options) || this;\n        _this.version = '2018-03-28';\n        _this.baseUri = \"{url}\";\n        _this.requestContentType = \"application/json; charset=utf-8\";\n        _this.url = url;\n        return _this;\n    }\n    return StorageClientContext;\n}(msRest.ServiceClient));\nexport { StorageClientContext };\n//# sourceMappingURL=storageClientContext.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, HttpPipelineLogLevel } from \"@azure/ms-rest-js\";\nimport { HTTPURLConnection, URLConstants } from \"../utils/constants\";\nimport { getURLParameter, setURLParameter } from \"../utils/utils.common\";\n// Default values of IRetryOptions\nvar DEFAULT_REQUEST_LOG_OPTIONS = {\n    logWarningIfTryOverThreshold: 3000\n};\n/**\n * LoggingPolicy is a policy used to log requests.\n *\n * @class LoggingPolicy\n * @extends {BaseRequestPolicy}\n */\nvar LoggingPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(LoggingPolicy, _super);\n    /**\n     * Creates an instance of LoggingPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {IRequestLogOptions} [loggingOptions=DEFAULT_REQUEST_LOG_OPTIONS]\n     * @memberof LoggingPolicy\n     */\n    function LoggingPolicy(nextPolicy, options, loggingOptions) {\n        if (loggingOptions === void 0) { loggingOptions = DEFAULT_REQUEST_LOG_OPTIONS; }\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.tryCount = 0;\n        _this.operationStartTime = new Date();\n        _this.requestStartTime = new Date();\n        _this.loggingOptions = loggingOptions;\n        return _this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof LoggingPolicy\n     */\n    LoggingPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var safeURL, response, requestEndTime, requestCompletionTime, operationDuration, currentLevel, logMessage, errorString, messageInfo, err_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.tryCount++;\n                        this.requestStartTime = new Date();\n                        if (this.tryCount === 1) {\n                            this.operationStartTime = this.requestStartTime;\n                        }\n                        safeURL = request.url;\n                        if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n                            safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n                        }\n                        this.log(HttpPipelineLogLevel.INFO, \"'\" + safeURL + \"'==> OUTGOING REQUEST (Try number=\" + this.tryCount + \").\");\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this._nextPolicy.sendRequest(request)];\n                    case 2:\n                        response = _a.sent();\n                        requestEndTime = new Date();\n                        requestCompletionTime = requestEndTime.getTime() - this.requestStartTime.getTime();\n                        operationDuration = requestEndTime.getTime() - this.operationStartTime.getTime();\n                        currentLevel = HttpPipelineLogLevel.INFO;\n                        logMessage = \"\";\n                        if (this.shouldLog(HttpPipelineLogLevel.INFO)) {\n                            // Assume success and default to informational logging.\n                            logMessage = \"Successfully Received Response. \";\n                        }\n                        // If the response took too long, we'll upgrade to warning.\n                        if (requestCompletionTime >=\n                            this.loggingOptions.logWarningIfTryOverThreshold) {\n                            // Log a warning if the try duration exceeded the specified threshold.\n                            if (this.shouldLog(HttpPipelineLogLevel.WARNING)) {\n                                currentLevel = HttpPipelineLogLevel.WARNING;\n                                logMessage = \"SLOW OPERATION. Duration > \" + this.loggingOptions.logWarningIfTryOverThreshold + \" ms. \";\n                            }\n                        }\n                        if ((response.status >= 400 &&\n                            response.status <= 499 &&\n                            (response.status !== HTTPURLConnection.HTTP_NOT_FOUND &&\n                                response.status !== HTTPURLConnection.HTTP_CONFLICT &&\n                                response.status !== HTTPURLConnection.HTTP_PRECON_FAILED &&\n                                response.status !==\n                                    HTTPURLConnection.HTTP_RANGE_NOT_SATISFIABLE)) ||\n                            (response.status >= 500 && response.status <= 509)) {\n                            errorString = \"REQUEST ERROR: HTTP request failed with status code: \" + response.status + \". \";\n                            logMessage = errorString;\n                            currentLevel = HttpPipelineLogLevel.ERROR;\n                        }\n                        messageInfo = \"Request try:\" + this.tryCount + \", status:\" + response.status + \" request duration:\" + requestCompletionTime + \" ms, operation duration:\" + operationDuration + \" ms\\n\";\n                        this.log(currentLevel, logMessage + messageInfo);\n                        return [2 /*return*/, response];\n                    case 3:\n                        err_1 = _a.sent();\n                        this.log(HttpPipelineLogLevel.ERROR, \"Unexpected failure attempting to make request. Error message: \" + err_1.message);\n                        throw err_1;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return LoggingPolicy;\n}(BaseRequestPolicy));\nexport { LoggingPolicy };\n//# sourceMappingURL=LoggingPolicy.js.map","import { LoggingPolicy } from \"./policies/LoggingPolicy\";\n/**\n * LoggingPolicyFactory is a factory class helping generating LoggingPolicy objects.\n *\n * @export\n * @class LoggingPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar LoggingPolicyFactory = /** @class */ (function () {\n    function LoggingPolicyFactory(loggingOptions) {\n        this.loggingOptions = loggingOptions;\n    }\n    LoggingPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new LoggingPolicy(nextPolicy, options, this.loggingOptions);\n    };\n    return LoggingPolicyFactory;\n}());\nexport { LoggingPolicyFactory };\n//# sourceMappingURL=LoggingPolicyFactory.js.map","import { BaseRequestPolicy, HttpHeaders, HttpPipelineLogLevel, RequestPolicyOptions, WebResource } from \"@azure/ms-rest-js\";\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport { HttpHeaders, HttpPipelineLogLevel, WebResource, BaseRequestPolicy, RequestPolicyOptions };\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling StorageURL.newPipeline().\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n * Refer to StorageURL.newPipeline() and provided policies as reference before\n * implementing your customized Pipeline.\n *\n * @export\n * @class Pipeline\n */\nvar Pipeline = /** @class */ (function () {\n    /**\n     * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n     *\n     * @param {RequestPolicyFactory[]} factories\n     * @param {IPipelineOptions} [options={}]\n     * @memberof Pipeline\n     */\n    function Pipeline(factories, options) {\n        if (options === void 0) { options = {}; }\n        this.factories = factories;\n        this.options = options;\n    }\n    /**\n     * Transfer Pipeline object to ServiceClientOptions object which required by\n     * ServiceClient constructor.\n     *\n     * @returns {ServiceClientOptions}\n     * @memberof Pipeline\n     */\n    Pipeline.prototype.toServiceClientOptions = function () {\n        return {\n            httpClient: this.options.HTTPClient,\n            httpPipelineLogger: this.options.logger,\n            requestPolicyFactories: this.factories\n        };\n    };\n    return Pipeline;\n}());\nexport { Pipeline };\n//# sourceMappingURL=Pipeline.js.map","import { RetryPolicy } from \"./policies/RetryPolicy\";\n/**\n * RetryPolicyFactory is a factory class helping generating RetryPolicy objects.\n *\n * @export\n * @class RetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar RetryPolicyFactory = /** @class */ (function () {\n    /**\n     * Creates an instance of RetryPolicyFactory.\n     * @param {IRetryOptions} [retryOptions]\n     * @memberof RetryPolicyFactory\n     */\n    function RetryPolicyFactory(retryOptions) {\n        this.retryOptions = retryOptions;\n    }\n    RetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new RetryPolicy(nextPolicy, options, this.retryOptions);\n    };\n    return RetryPolicyFactory;\n}());\nexport { RetryPolicyFactory };\n//# sourceMappingURL=RetryPolicyFactory.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, HttpHeaders, isNode } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n *\n * @class TelemetryPolicy\n * @extends {BaseRequestPolicy}\n */\nvar TelemetryPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(TelemetryPolicy, _super);\n    /**\n     * Creates an instance of TelemetryPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {ITelemetryOptions} [telemetry]\n     * @memberof TelemetryPolicy\n     */\n    function TelemetryPolicy(nextPolicy, options, telemetry) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.telemetry = telemetry;\n        return _this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof TelemetryPolicy\n     */\n    TelemetryPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (isNode) {\n                    if (!request.headers) {\n                        request.headers = new HttpHeaders();\n                    }\n                    if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n                        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n                    }\n                }\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return TelemetryPolicy;\n}(BaseRequestPolicy));\nexport { TelemetryPolicy };\n//# sourceMappingURL=TelemetryPolicy.js.map","import { isNode } from \"@azure/ms-rest-js\";\nimport * as os from \"os\";\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n/**\n * TelemetryPolicyFactory is a factory class helping generating TelemetryPolicy objects.\n *\n * @export\n * @class TelemetryPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar TelemetryPolicyFactory = /** @class */ (function () {\n    /**\n     * Creates an instance of TelemetryPolicyFactory.\n     * @param {ITelemetryOptions} [telemetry]\n     * @memberof TelemetryPolicyFactory\n     */\n    function TelemetryPolicyFactory(telemetry) {\n        var userAgentInfo = [];\n        if (isNode) {\n            if (telemetry) {\n                var telemetryString = telemetry.value;\n                if (telemetryString.length > 0 &&\n                    userAgentInfo.indexOf(telemetryString) === -1) {\n                    userAgentInfo.push(telemetryString);\n                }\n            }\n            // e.g. Azure-Storage/10.0.0\n            var libInfo = \"Azure-Storage/\" + SDK_VERSION;\n            if (userAgentInfo.indexOf(libInfo) === -1) {\n                userAgentInfo.push(libInfo);\n            }\n            // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n            var runtimeInfo = \"(NODE-VERSION \" + process.version + \"; \" + os.type() + \" \" + os.release() + \")\";\n            if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n                userAgentInfo.push(runtimeInfo);\n            }\n        }\n        this.telemetryString = userAgentInfo.join(\" \");\n    }\n    TelemetryPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n    };\n    return TelemetryPolicyFactory;\n}());\nexport { TelemetryPolicyFactory };\n//# sourceMappingURL=TelemetryPolicyFactory.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy, generateUuid } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\n/**\n * UniqueRequestIDPolicy generates an UUID as x-ms-request-id header value.\n *\n * @class UniqueRequestIDPolicy\n * @extends {BaseRequestPolicy}\n */\nvar UniqueRequestIDPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(UniqueRequestIDPolicy, _super);\n    /**\n     * Creates an instance of UniqueRequestIDPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @memberof UniqueRequestIDPolicy\n     */\n    function UniqueRequestIDPolicy(nextPolicy, options) {\n        return _super.call(this, nextPolicy, options) || this;\n    }\n    /**\n     * Sends request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof UniqueRequestIDPolicy\n     */\n    UniqueRequestIDPolicy.prototype.sendRequest = function (request) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!request.headers.contains(HeaderConstants.X_MS_CLIENT_REQUEST_ID)) {\n                    request.headers.set(HeaderConstants.X_MS_CLIENT_REQUEST_ID, generateUuid());\n                }\n                return [2 /*return*/, this._nextPolicy.sendRequest(request)];\n            });\n        });\n    };\n    return UniqueRequestIDPolicy;\n}(BaseRequestPolicy));\nexport { UniqueRequestIDPolicy };\n//# sourceMappingURL=UniqueRequestIDPolicy.js.map","import { UniqueRequestIDPolicy } from \"./policies/UniqueRequestIDPolicy\";\n/**\n * UniqueRequestIDPolicyFactory is a factory class helping generating UniqueRequestIDPolicy objects.\n *\n * @export\n * @class UniqueRequestIDPolicyFactory\n * @implements {RequestPolicyFactory}\n */\nvar UniqueRequestIDPolicyFactory = /** @class */ (function () {\n    function UniqueRequestIDPolicyFactory() {\n    }\n    UniqueRequestIDPolicyFactory.prototype.create = function (nextPolicy, options) {\n        return new UniqueRequestIDPolicy(nextPolicy, options);\n    };\n    return UniqueRequestIDPolicyFactory;\n}());\nexport { UniqueRequestIDPolicyFactory };\n//# sourceMappingURL=UniqueRequestIDPolicyFactory.js.map","import { deserializationPolicy } from \"@azure/ms-rest-js\";\nimport { BrowserPolicyFactory } from \"./BrowserPolicyFactory\";\nimport { StorageClientContext } from \"./generated/lib/storageClientContext\";\nimport { LoggingPolicyFactory } from \"./LoggingPolicyFactory\";\nimport { Pipeline } from \"./Pipeline\";\nimport { RetryPolicyFactory } from \"./RetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport { UniqueRequestIDPolicyFactory } from \"./UniqueRequestIDPolicyFactory\";\nimport { escapeURLPath } from \"./utils/utils.common\";\nexport { deserializationPolicy };\n/**\n * A ServiceURL represents a based URL class for ServiceURL, ContainerURL and etc.\n *\n * @export\n * @class StorageURL\n */\nvar StorageURL = /** @class */ (function () {\n    /**\n     * Creates an instance of StorageURL.\n     * @param {string} url\n     * @param {Pipeline} pipeline\n     * @memberof StorageURL\n     */\n    function StorageURL(url, pipeline) {\n        // URL should be encoded and only once, protocol layer shouldn't encode URL again\n        this.url = escapeURLPath(url);\n        this.pipeline = pipeline;\n        this.storageClientContext = new StorageClientContext(this.url, pipeline.toServiceClientOptions());\n        // Override protocol layer's default content-type\n        var storageClientContext = this.storageClientContext;\n        storageClientContext.requestContentType = undefined;\n    }\n    /**\n     * A static method used to create a new Pipeline object with Credential provided.\n     *\n     * @static\n     * @param {Credential} credential Such as AnonymousCredential, SharedKeyCredential or TokenCredential.\n     * @param {INewPipelineOptions} [pipelineOptions] Optional. Options.\n     * @returns {Pipeline} A new Pipeline object.\n     * @memberof Pipeline\n     */\n    StorageURL.newPipeline = function (credential, pipelineOptions) {\n        if (pipelineOptions === void 0) { pipelineOptions = {}; }\n        // Order is important. Closer to the API at the top & closer to the network at the bottom.\n        // The credential's policy factory must appear close to the wire so it can sign any\n        // changes made by other factories (like UniqueRequestIDPolicyFactory)\n        var factories = [\n            new TelemetryPolicyFactory(pipelineOptions.telemetry),\n            new UniqueRequestIDPolicyFactory(),\n            new BrowserPolicyFactory(),\n            deserializationPolicy(),\n            new RetryPolicyFactory(pipelineOptions.retryOptions),\n            new LoggingPolicyFactory(),\n            credential\n        ];\n        return new Pipeline(factories, {\n            HTTPClient: pipelineOptions.httpClient,\n            logger: pipelineOptions.logger\n        });\n    };\n    return StorageURL;\n}());\nexport { StorageURL };\n//# sourceMappingURL=StorageURL.js.map","import * as tslib_1 from \"tslib\";\nimport { isNode } from \"@azure/ms-rest-js\";\nimport { BlobDownloadResponse } from \"./BlobDownloadResponse\";\nimport { Blob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { StorageURL } from \"./StorageURL\";\nimport { DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS, URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * A BlobURL represents a URL to an Azure Storage blob; the blob may be a block blob,\n * append blob, or page blob.\n *\n * @export\n * @class BlobURL\n * @extends {StorageURL}\n */\nvar BlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(BlobURL, _super);\n    /**\n     * Creates an instance of BlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob\".\n     *                     You can append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof BlobURL\n     */\n    function BlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.blobContext = new Blob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a BlobURL object from an ContainerURL object.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A blob name\n     * @returns\n     * @memberof BlobURL\n     */\n    BlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new BlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a new BlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {BlobURL}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.withPipeline = function (pipeline) {\n        return new BlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new BlobURL object identical to the source but with the specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {BlobURL} A new BlobURL object identical to the source but with the specified snapshot timestamp\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.withSnapshot = function (snapshot) {\n        return new BlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Reads or downloads a blob from the system, including its metadata and properties.\n     * You can also call Get Blob to read a snapshot.\n     *\n     * * In Node.js, data returns in a Readable stream readableStreamBody\n     * * In browsers, data returns in a promise blobBody\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset From which position of the blob to download, >= 0\n     * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n     * @param {IBlobDownloadOptions} [options]\n     * @returns {Promise<Models.BlobDownloadResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.download = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res;\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        options.blobAccessConditions = options.blobAccessConditions || {};\n                        options.blobAccessConditions.modifiedAccessConditions =\n                            options.blobAccessConditions.modifiedAccessConditions || {};\n                        return [4 /*yield*/, this.blobContext.download({\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                                modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                                onDownloadProgress: isNode ? undefined : options.progress,\n                                range: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count }),\n                                rangeGetContentMD5: options.rangeGetContentMD5,\n                                snapshot: options.snapshot\n                            })];\n                    case 1:\n                        res = _a.sent();\n                        // Return browser response immediately\n                        if (!isNode) {\n                            return [2 /*return*/, res];\n                        }\n                        // We support retrying when download stream unexpected ends in Node.js runtime\n                        // Following code shouldn't be bundled into browser build, however some\n                        // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n                        // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n                        // The config is in package.json \"browser\" field\n                        if (options.maxRetryRequests === undefined ||\n                            options.maxRetryRequests < 0) {\n                            // TODO: Default value or make it a required parameter?\n                            options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n                        }\n                        if (res.contentLength === undefined) {\n                            throw new RangeError(\"File download response doesn't contain valid content length header\");\n                        }\n                        if (!res.eTag) {\n                            throw new RangeError(\"File download response doesn't contain valid etag header\");\n                        }\n                        return [2 /*return*/, new BlobDownloadResponse(aborter, res, function (start) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                                var updatedOptions;\n                                return tslib_1.__generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            updatedOptions = {\n                                                leaseAccessConditions: options.blobAccessConditions\n                                                    .leaseAccessConditions,\n                                                modifiedAccessConditions: {\n                                                    ifMatch: options.blobAccessConditions.modifiedAccessConditions.ifMatch ||\n                                                        res.eTag,\n                                                    ifModifiedSince: options.blobAccessConditions\n                                                        .modifiedAccessConditions.ifModifiedSince,\n                                                    ifNoneMatch: options.blobAccessConditions.modifiedAccessConditions\n                                                        .ifNoneMatch,\n                                                    ifUnmodifiedSince: options.blobAccessConditions\n                                                        .modifiedAccessConditions.ifUnmodifiedSince\n                                                },\n                                                range: rangeToString({\n                                                    count: offset + res.contentLength - start,\n                                                    offset: start\n                                                }),\n                                                snapshot: options.snapshot\n                                            };\n                                            return [4 /*yield*/, this.blobContext.download(tslib_1.__assign({ abortSignal: aborter }, updatedOptions))];\n                                        case 1: \n                                        // Debug purpose only\n                                        // console.log(\n                                        //   `Read from internal stream, range: ${\n                                        //     updatedOptions.range\n                                        //   }, options: ${JSON.stringify(updatedOptions)}`\n                                        // );\n                                        return [2 /*return*/, (_a.sent()).readableStreamBody];\n                                    }\n                                });\n                            }); }, offset, res.contentLength, {\n                                maxRetryRequests: options.maxRetryRequests,\n                                progress: options.progress\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns all user-defined metadata, standard HTTP properties, and system properties\n     * for the blob. It does not return the content of the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobGetPropertiesOptions} [options]\n     * @returns {Promise<Models.BlobGetPropertiesResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.getProperties = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.getProperties({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Marks the specified blob or snapshot for deletion. The blob is later deleted\n     * during garbage collection. Note that in order to delete a blob, you must delete\n     * all of its snapshots. You can delete both at the same time with the Delete\n     * Blob operation.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobDeleteOptions} [options]\n     * @returns {Promise<Models.BlobDeleteResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.delete = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.deleteMethod({\n                        abortSignal: aborter,\n                        deleteSnapshots: options.deleteSnapshots,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Restores the contents and metadata of soft deleted blob and any associated\n     * soft deleted snapshots. Undelete Blob is supported only on version 2017-07-29\n     * or later.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/undelete-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.BlobUndeleteResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.undelete = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.undelete({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets system properties on the blob.\n     *\n     * If no value provided, or no value provided for the specificed blob HTTP headers,\n     * these blob HTTP headers without a value will be cleared.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.BlobHTTPHeaders} [blobHTTPHeaders] If no value provided, or no value provided for\n     *                                                   the specificed blob HTTP headers, these blob HTTP\n     *                                                   headers without a value will be cleared.\n     * @param {IBlobSetHTTPHeadersOptions} [options]\n     * @returns {Promise<Models.BlobSetHTTPHeadersResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setHTTPHeaders = function (aborter, blobHTTPHeaders, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.setHTTPHeaders({\n                        abortSignal: aborter,\n                        blobHTTPHeaders: blobHTTPHeaders,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets user-defined metadata for the specified blob as one or more name-value pairs.\n     *\n     * If no option provided, or no metadata defined in the parameter, the blob\n     * metadata will be removed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-metadata\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IMetadata} [metadata] Replace existing metadata with this value.\n     *                               If no value provided the existing metadata will be removed.\n     * @param {IBlobSetMetadataOptions} [options]\n     * @returns {Promise<Models.BlobSetMetadataResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setMetadata = function (aborter, metadata, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.setMetadata({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Establishes and manages a lock on a blob for write and delete operations.\n     * The lock duration can be 15 to 60 seconds, or can be infinite.\n     * In versions prior to 2012-02-12, the lock duration is 60 seconds.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n     * @param {number} duration The lock duration can be 15 to 60 seconds, or can be infinite\n     * @param {IBlobAcquireLeaseOptions} [options]\n     * @returns {Promise<Models.BlobAcquireLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.acquireLease({\n                        abortSignal: aborter,\n                        duration: duration,\n                        modifiedAccessConditions: options.modifiedAccessConditions,\n                        proposedLeaseId: proposedLeaseId\n                    })];\n            });\n        });\n    };\n    /**\n     * To free the lease if it is no longer needed so that another client may immediately\n     * acquire a lease against the blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IBlobReleaseLeaseOptions} [options]\n     * @returns {Promise<Models.BlobReleaseLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.releaseLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.releaseLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To renew an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IBlobRenewLeaseOptions} [options]\n     * @returns {Promise<Models.BlobRenewLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.renewLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.renewLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To change the ID of an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {string} proposedLeaseId\n     * @param {IBlobChangeLeaseOptions} [options]\n     * @returns {Promise<Models.BlobChangeLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.changeLease(leaseId, proposedLeaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To end the lease but ensure that another client cannot acquire a new lease\n     * until the current lease period has expired.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} [breakPeriod]\n     * @param {IBlobBreakLeaseOptions} [options]\n     * @returns {Promise<Models.BlobBreakLeaseResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.breakLease = function (aborter, breakPeriod, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.breakLease({\n                        abortSignal: aborter,\n                        breakPeriod: breakPeriod,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a read-only snapshot of a blob.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/snapshot-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IBlobCreateSnapshotOptions} [options]\n     * @returns {Promise<Models.BlobCreateSnapshotResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.createSnapshot = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                return [2 /*return*/, this.blobContext.createSnapshot({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Copies a blob to a destination within the storage account.\n     * In version 2012-02-12 and later, the source for a Copy Blob operation can be\n     * a committed blob in any Azure storage account.\n     * Beginning with version 2015-02-21, the source for a Copy Blob operation can be\n     * an Azure file in any Azure storage account.\n     * Only storage accounts created on or after June 7th, 2012 allow the Copy Blob\n     * operation to copy from another storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/copy-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copySource\n     * @param {IBlobStartCopyFromURLOptions} [options]\n     * @returns {Promise<Models.BlobStartCopyFromURLResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.startCopyFromURL = function (aborter, copySource, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.blobAccessConditions = options.blobAccessConditions || {};\n                options.sourceModifiedAccessConditions =\n                    options.sourceModifiedAccessConditions || {};\n                return [2 /*return*/, this.blobContext.startCopyFromURL(copySource, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.blobAccessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.blobAccessConditions.modifiedAccessConditions,\n                        sourceModifiedAccessConditions: {\n                            sourceIfMatch: options.sourceModifiedAccessConditions.ifMatch,\n                            sourceIfModifiedSince: options.sourceModifiedAccessConditions.ifModifiedSince,\n                            sourceIfNoneMatch: options.sourceModifiedAccessConditions.ifNoneMatch,\n                            sourceIfUnmodifiedSince: options.sourceModifiedAccessConditions.ifUnmodifiedSince\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Aborts a pending Copy Blob operation, and leaves a destination blob with zero\n     * length and full metadata. Version 2012-02-12 and newer.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copyId\n     * @param {IBlobAbortCopyFromURLOptions} [options]\n     * @returns {Promise<Models.BlobAbortCopyFromURLResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.abortCopyFromURL = function (aborter, copyId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blobContext.abortCopyFromURL(copyId, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets the tier on a blob. The operation is allowed on a page blob in a premium\n     * storage account and on a block blob in a blob storage account (locally redundant\n     * storage only). A premium page blob's tier determines the allowed size, IOPS,\n     * and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive\n     * storage type. This operation does not update the blob's ETag.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-tier\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.AccessTier} tier\n     * @param {IBlobSetTierOptions} [options]\n     * @returns {Promise<Models.BlobsSetTierResponse>}\n     * @memberof BlobURL\n     */\n    BlobURL.prototype.setTier = function (aborter, tier, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blobContext.setTier(tier, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return BlobURL;\n}(StorageURL));\nexport { BlobURL };\n//# sourceMappingURL=BlobURL.js.map","// This file is used as a shim of \"BlobDownloadResponse\" for some browser bundlers\n// when trying to bundle \"BlobDownloadResponse\"\n// \"BlobDownloadResponse\" class is only available in Node.js runtime\nexport var BlobDownloadResponse = 1;\n//# sourceMappingURL=BlobDownloadResponse.browser.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { AppendBlob } from \"./generated/lib/operations\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * AppendBlobURL defines a set of operations applicable to append blobs.\n *\n * @export\n * @class AppendBlobURL\n * @extends {StorageURL}\n */\nvar AppendBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(AppendBlobURL, _super);\n    /**\n     * Creates an instance of AppendBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to an append blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage append blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/appendblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof AppendBlobURL\n     */\n    function AppendBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.appendBlobContext = new AppendBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a AppendBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName An append blob name\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new AppendBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a AppendBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.fromBlobURL = function (blobURL) {\n        return new AppendBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new AppendBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.withPipeline = function (pipeline) {\n        return new AppendBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new AppendBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {AppendBlobURL}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new AppendBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a 0-length append blob. Call AppendBlock to append data to an append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IAppendBlobCreateOptions} [options]\n     * @returns {Promise<Models.AppendBlobsCreateResponse>}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.create = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.appendBlobContext.create(0, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Commits a new block of data to the end of the existing append blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/append-block\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IAppendBlobAppendBlockOptions} [options]\n     * @returns {Promise<Models.AppendBlobsAppendBlockResponse>}\n     * @memberof AppendBlobURL\n     */\n    AppendBlobURL.prototype.appendBlock = function (aborter, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.appendBlobContext.appendBlock(body, contentLength, {\n                        abortSignal: aborter,\n                        appendPositionAccessConditions: options.accessConditions.appendPositionAccessConditions,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    return AppendBlobURL;\n}(BlobURL));\nexport { AppendBlobURL };\n//# sourceMappingURL=AppendBlobURL.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { BlockBlob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * BlockBlobURL defines a set of operations applicable to block blobs.\n *\n * @export\n * @class BlockBlobURL\n * @extends {StorageURL}\n */\nvar BlockBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(BlockBlobURL, _super);\n    /**\n     * Creates an instance of BlockBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a block blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage block blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/blockblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof BlockBlobURL\n     */\n    function BlockBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.blockBlobContext = new BlockBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a BlockBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A block blob name\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new BlockBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a BlockBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.fromBlobURL = function (blobURL) {\n        return new BlockBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new BlockBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.withPipeline = function (pipeline) {\n        return new BlockBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new BlockBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {BlockBlobURL}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new BlockBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a new block blob, or updates the content of an existing block blob.\n     * Updating an existing block blob overwrites any existing metadata on the blob.\n     * Partial updates are not supported; the content of the existing blob is\n     * overwritten with the new content. To perform a partial update of a block blob's,\n     * use stageBlock and commitBlockList.\n     *\n     * This is a non-parallel uploading method, please use uploadFileToBlockBlob(),\n     * uploadStreamToBlockBlob() or uploadBrowserDataToBlockBlob() for better performance\n     * with concurrency uploading.\n     *\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IBlockBlobUploadOptions} [options]\n     * @returns {Promise<Models.BlockBlobUploadResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.upload = function (aborter, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.blockBlobContext.upload(body, contentLength, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress\n                    })];\n            });\n        });\n    };\n    /**\n     * Uploads the specified block to the block blob's \"staging area\" to be later\n     * committed by a call to commitBlockList.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} blockId A 64-byte value that is base64-encoded\n     * @param {HttpRequestBody} body\n     * @param {number} contentLength\n     * @param {IBlockBlobStageBlockOptions} [options]\n     * @returns {Promise<Models.BlockBlobStageBlockResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.stageBlock = function (aborter, blockId, body, contentLength, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blockBlobContext.stageBlock(blockId, contentLength, body, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions,\n                        onUploadProgress: options.progress,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    /**\n     * The Stage Block From URL operation creates a new block to be committed as part\n     * of a blob where the contents are read from a URL.\n     * This API is available starting in version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/put-block-from-url\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} blockId A 64-byte value that is base64-encoded\n     * @param {string} sourceURL Specifies the URL of the blob. The value\n     *                           may be a URL of up to 2 KB in length that specifies a blob.\n     *                           The value should be URL-encoded as it would appear\n     *                           in a request URI. The source blob must either be public\n     *                           or must be authenticated via a shared access signature.\n     *                           If the source blob is public, no authentication is required\n     *                           to perform the operation. Here are some examples of source object URLs:\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob\n     *                           - https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param {number} offset From which position of the blob to download, >= 0\n     * @param {number} [count] How much data to be downloaded, > 0. Will download to the end when undefined\n     * @param {IBlockBlobStageBlockFromURLOptions} [options={}]\n     * @returns {Promise<Models.BlockBlobStageBlockFromURLResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.stageBlockFromURL = function (aborter, blockId, sourceURL, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.blockBlobContext.stageBlockFromURL(blockId, 0, sourceURL, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.leaseAccessConditions,\n                        sourceContentMD5: options.sourceContentMD5,\n                        sourceRange: offset === 0 && !count ? undefined : rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Writes a blob by specifying the list of block IDs that make up the blob.\n     * In order to be written as part of a blob, a block must have been successfully written\n     * to the server in a prior stageBlock operation. You can call commitBlockList to update a blob\n     * by uploading only those blocks that have changed, then committing the new and existing\n     * blocks together. Any blocks not specified in the block list and permanently deleted.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-block-list\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string[]} blocks  Array of 64-byte value that is base64-encoded\n     * @param {IBlockBlobCommitBlockListOptions} [options]\n     * @returns {Promise<Models.BlockBlobCommitBlockListResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.commitBlockList = function (aborter, blocks, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.blockBlobContext.commitBlockList({ latest: blocks }, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns the list of blocks that have been uploaded as part of a block blob\n     * using the specified block list filter.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-block-list\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.BlockListType} listType\n     * @param {IBlockBlobGetBlockListOptions} [options]\n     * @returns {Promise<Models.BlockBlobGetBlockListResponse>}\n     * @memberof BlockBlobURL\n     */\n    BlockBlobURL.prototype.getBlockList = function (aborter, listType, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var res;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.blockBlobContext.getBlockList(listType, {\n                            abortSignal: aborter,\n                            leaseAccessConditions: options.leaseAccessConditions\n                        })];\n                    case 1:\n                        res = _a.sent();\n                        if (!res.committedBlocks) {\n                            res.committedBlocks = [];\n                        }\n                        if (!res.uncommittedBlocks) {\n                            res.uncommittedBlocks = [];\n                        }\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    return BlockBlobURL;\n}(BlobURL));\nexport { BlockBlobURL };\n//# sourceMappingURL=BlockBlobURL.js.map","import * as tslib_1 from \"tslib\";\nimport { Container } from \"./generated/lib/operations\";\nimport { StorageURL } from \"./StorageURL\";\nimport { ETagNone } from \"./utils/constants\";\nimport { appendToURLPath, truncatedISO8061Date } from \"./utils/utils.common\";\n/**\n * A ContainerURL represents a URL to the Azure Storage container allowing you to manipulate its blobs.\n *\n * @export\n * @class ContainerURL\n * @extends {StorageURL}\n */\nvar ContainerURL = /** @class */ (function (_super) {\n    tslib_1.__extends(ContainerURL, _super);\n    /**\n     * Creates an instance of ContainerURL.\n     * @param {string} url A URL string pointing to Azure Storage blob container, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer?sasString\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof ContainerURL\n     */\n    function ContainerURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.containerContext = new Container(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a ContainerURL object from ServiceURL\n     *\n     * @param serviceURL A ServiceURL object\n     * @param containerName A container name\n     */\n    ContainerURL.fromServiceURL = function (serviceURL, containerName) {\n        return new ContainerURL(appendToURLPath(serviceURL.url, encodeURIComponent(containerName)), serviceURL.pipeline);\n    };\n    /**\n     * Creates a new ContainerURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {ContainerURL}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.withPipeline = function (pipeline) {\n        return new ContainerURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new container under the specified account. If the container with\n     * the same name already exists, the operation fails.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainerCreateOptions} [options]\n     * @returns {Promise<Models.ContainerCreateResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.create = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                // Spread operator in destructuring assignments,\n                // this will filter out unwanted properties from the response object into result object\n                return [2 /*return*/, this.containerContext.create(tslib_1.__assign({}, options, { abortSignal: aborter }))];\n            });\n        });\n    };\n    /**\n     * Returns all user-defined metadata and system properties for the specified\n     * container. The data returned does not include the container's list of blobs.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainersGetPropertiesOptions} [options]\n     * @returns {Promise<Models.ContainerGetPropertiesResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.getProperties = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.leaseAccessConditions) {\n                    options.leaseAccessConditions = {};\n                }\n                return [2 /*return*/, this.containerContext.getProperties(tslib_1.__assign({ abortSignal: aborter }, options.leaseAccessConditions))];\n            });\n        });\n    };\n    /**\n     * Marks the specified container for deletion. The container and any blobs\n     * contained within it are later deleted during garbage collection.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.ContainersDeleteMethodOptionalParams} [options]\n     * @returns {Promise<Models.ContainerDeleteResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.delete = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.containerAccessConditions) {\n                    options.containerAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.modifiedAccessConditions) {\n                    options.containerAccessConditions.modifiedAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.leaseAccessConditions) {\n                    options.containerAccessConditions.leaseAccessConditions = {};\n                }\n                if ((options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                    options.containerAccessConditions.modifiedAccessConditions.ifMatch !==\n                        ETagNone) ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions\n                            .ifNoneMatch !== ETagNone)) {\n                    throw new RangeError(\"the IfMatch and IfNoneMatch access conditions must have their default\\\r\n        values because they are ignored by the service\");\n                }\n                return [2 /*return*/, this.containerContext.deleteMethod({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets one or more user-defined name-value pairs for the specified container.\n     *\n     * If no option provided, or no metadata defined in the parameter, the container\n     * metadata will be removed.\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-metadata\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IMetadata} [metadata] Replace existing metadata with this value.\n     *                               If no value provided the existing metadata will be removed.\n     * @param {IContainerSetMetadataOptions} [options]\n     * @returns {Promise<Models.ContainerSetMetadataResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.setMetadata = function (aborter, metadata, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                if (!options.containerAccessConditions) {\n                    options.containerAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.modifiedAccessConditions) {\n                    options.containerAccessConditions.modifiedAccessConditions = {};\n                }\n                if (!options.containerAccessConditions.leaseAccessConditions) {\n                    options.containerAccessConditions.leaseAccessConditions = {};\n                }\n                if (options.containerAccessConditions.modifiedAccessConditions\n                    .ifUnmodifiedSince ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions.ifMatch !==\n                            ETagNone) ||\n                    (options.containerAccessConditions.modifiedAccessConditions.ifNoneMatch &&\n                        options.containerAccessConditions.modifiedAccessConditions\n                            .ifNoneMatch !== ETagNone)) {\n                    throw new RangeError(\"the IfUnmodifiedSince, IfMatch, and IfNoneMatch must have their default values\\\r\n        because they are ignored by the blob service\");\n                }\n                return [2 /*return*/, this.containerContext.setMetadata({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        metadata: metadata,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the permissions for the specified container. The permissions indicate\n     * whether container data may be accessed publicly.\n     *\n     * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n     * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n     *\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-container-acl\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {IContainerGetAccessPolicyOptions} [options]\n     * @returns {Promise<ContainerGetAccessPolicyResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.getAccessPolicy = function (aborter, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var response, res, _i, response_1, identifier;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!options.leaseAccessConditions) {\n                            options.leaseAccessConditions = {};\n                        }\n                        return [4 /*yield*/, this.containerContext.getAccessPolicy({\n                                abortSignal: aborter,\n                                leaseAccessConditions: options.leaseAccessConditions\n                            })];\n                    case 1:\n                        response = _a.sent();\n                        res = {\n                            _response: response._response,\n                            blobPublicAccess: response.blobPublicAccess,\n                            date: response.date,\n                            eTag: response.eTag,\n                            errorCode: response.errorCode,\n                            lastModified: response.lastModified,\n                            requestId: response.requestId,\n                            signedIdentifiers: [],\n                            version: response.version\n                        };\n                        for (_i = 0, response_1 = response; _i < response_1.length; _i++) {\n                            identifier = response_1[_i];\n                            res.signedIdentifiers.push({\n                                accessPolicy: {\n                                    expiry: new Date(identifier.accessPolicy.expiry),\n                                    permission: identifier.accessPolicy.permission,\n                                    start: new Date(identifier.accessPolicy.start)\n                                },\n                                id: identifier.id\n                            });\n                        }\n                        return [2 /*return*/, res];\n                }\n            });\n        });\n    };\n    /**\n     * Sets the permissions for the specified container. The permissions indicate\n     * whether blobs in a container may be accessed publicly.\n     *\n     * When you set permissions for a container, the existing permissions are replaced.\n     * If no access or containerAcl provided, the existing container ACL will be\n     * removed.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-container-acl\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {PublicAccessType} [access]\n     * @param {ISignedIdentifier[]} [containerAcl]\n     * @param {IContainerSetAccessPolicyOptions} [options]\n     * @returns {Promise<Models.ContainerSetAccessPolicyResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.setAccessPolicy = function (aborter, access, containerAcl, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var acl, _i, _a, identifier;\n            return tslib_1.__generator(this, function (_b) {\n                options.containerAccessConditions = options.containerAccessConditions || {};\n                acl = [];\n                for (_i = 0, _a = containerAcl || []; _i < _a.length; _i++) {\n                    identifier = _a[_i];\n                    acl.push({\n                        accessPolicy: {\n                            expiry: truncatedISO8061Date(identifier.accessPolicy.expiry),\n                            permission: identifier.accessPolicy.permission,\n                            start: truncatedISO8061Date(identifier.accessPolicy.start)\n                        },\n                        id: identifier.id\n                    });\n                }\n                return [2 /*return*/, this.containerContext.setAccessPolicy({\n                        abortSignal: aborter,\n                        access: access,\n                        containerAcl: acl,\n                        leaseAccessConditions: options.containerAccessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.containerAccessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Establishes and manages a lock on a container for delete operations.\n     * The lock duration can be 15 to 60 seconds, or can be infinite.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} proposedLeaseId Can be specified in any valid GUID string format\n     * @param {number} duration Must be between 15 to 60 seconds, or infinite (-1)\n     * @param {IContainerAcquireLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerAcquireLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.acquireLease = function (aborter, proposedLeaseId, duration, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.acquireLease({\n                        abortSignal: aborter,\n                        duration: duration,\n                        modifiedAccessConditions: options.modifiedAccessConditions,\n                        proposedLeaseId: proposedLeaseId\n                    })];\n            });\n        });\n    };\n    /**\n     * To free the lease if it is no longer needed so that another client may\n     * immediately acquire a lease against the container.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IContainerReleaseLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerReleaseLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.releaseLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.releaseLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To renew an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {IContainerRenewLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerRenewLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.renewLease = function (aborter, leaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.renewLease(leaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To end the lease but ensure that another client cannot acquire a new lease\n     * until the current lease period has expired.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} period break period\n     * @param {IContainerBreakLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerBreakLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.breakLease = function (aborter, period, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.breakLease({\n                        abortSignal: aborter,\n                        breakPeriod: period,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * To change the ID of an existing lease.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/lease-container\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} leaseId\n     * @param {string} proposedLeaseId\n     * @param {IContainerChangeLeaseOptions} [options]\n     * @returns {Promise<Models.ContainerChangeLeaseResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.changeLease = function (aborter, leaseId, proposedLeaseId, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.changeLease(leaseId, proposedLeaseId, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * listBlobFlatSegment returns a single segment of blobs starting from the\n     * specified Marker. Use an empty Marker to start enumeration from the beginning.\n     * After getting a segment, process it, and then call ListBlobsFlatSegment again\n     * (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} [marker]\n     * @param {IContainerListBlobsSegmentOptions} [options]\n     * @returns {Promise<Models.ContainerListBlobFlatSegmentResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.listBlobFlatSegment = function (aborter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.listBlobFlatSegment(tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    /**\n     * listBlobHierarchySegment returns a single segment of blobs starting from\n     * the specified Marker. Use an empty Marker to start enumeration from the\n     * beginning. After getting a segment, process it, and then call ListBlobsHierarchicalSegment\n     * again (passing the the previously-returned Marker) to get the next segment.\n     * @see https://docs.microsoft.com/rest/api/storageservices/list-blobs\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} delimiter\n     * @param {IContainerListBlobsSegmentOptions} [options]\n     * @returns {Promise<Models.ContainerListBlobHierarchySegmentResponse>}\n     * @memberof ContainerURL\n     */\n    ContainerURL.prototype.listBlobHierarchySegment = function (aborter, delimiter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.containerContext.listBlobHierarchySegment(delimiter, tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    return ContainerURL;\n}(StorageURL));\nexport { ContainerURL };\n//# sourceMappingURL=ContainerURL.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseRequestPolicy } from \"@azure/ms-rest-js\";\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n *\n * @export\n * @abstract\n * @class CredentialPolicy\n * @extends {BaseRequestPolicy}\n */\nvar CredentialPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(CredentialPolicy, _super);\n    function CredentialPolicy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Sends out request.\n     *\n     * @param {WebResource} request\n     * @returns {Promise<HttpOperationResponse>}\n     * @memberof CredentialPolicy\n     */\n    CredentialPolicy.prototype.sendRequest = function (request) {\n        return this._nextPolicy.sendRequest(this.signRequest(request));\n    };\n    /**\n     * Child classes must implement this method with request signing. This method\n     * will be executed in sendRequest().\n     *\n     * @protected\n     * @abstract\n     * @param {WebResource} request\n     * @returns {WebResource}\n     * @memberof CredentialPolicy\n     */\n    CredentialPolicy.prototype.signRequest = function (request) {\n        // Child classes must override this method with request signing. This method\n        // will be executed in sendRequest().\n        return request;\n    };\n    return CredentialPolicy;\n}(BaseRequestPolicy));\nexport { CredentialPolicy };\n//# sourceMappingURL=CredentialPolicy.js.map","/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nvar Credential = /** @class */ (function () {\n    function Credential() {\n    }\n    /**\n     * Creates a RequestPolicy object.\n     *\n     * @param {RequestPolicy} _nextPolicy\n     * @param {RequestPolicyOptions} _options\n     * @returns {RequestPolicy}\n     * @memberof Credential\n     */\n    Credential.prototype.create = function (\n    // tslint:disable-next-line:variable-name\n    _nextPolicy, \n    // tslint:disable-next-line:variable-name\n    _options) {\n        throw new Error(\"Method should be implemented in children classes.\");\n    };\n    return Credential;\n}());\nexport { Credential };\n//# sourceMappingURL=Credential.js.map","import * as tslib_1 from \"tslib\";\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * AnonymousCredentialPolicy objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n *\n * @export\n * @class AnonymousCredential\n * @extends {Credential}\n */\nvar AnonymousCredential = /** @class */ (function (_super) {\n    tslib_1.__extends(AnonymousCredential, _super);\n    function AnonymousCredential() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates an AnonymousCredentialPolicy object.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @returns {AnonymousCredentialPolicy}\n     * @memberof AnonymousCredential\n     */\n    AnonymousCredential.prototype.create = function (nextPolicy, options) {\n        return new AnonymousCredentialPolicy(nextPolicy, options);\n    };\n    return AnonymousCredential;\n}(Credential));\nexport { AnonymousCredential };\n//# sourceMappingURL=AnonymousCredential.js.map","import * as tslib_1 from \"tslib\";\nimport { HttpHeaders } from \"@azure/ms-rest-js\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n/**\n * TokenCredentialPolicy is a policy used to sign HTTP request with a token.\n * Such as an OAuth bearer token.\n *\n * @export\n * @class TokenCredentialPolicy\n * @extends {CredentialPolicy}\n */\nvar TokenCredentialPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenCredentialPolicy, _super);\n    /**\n     * Creates an instance of TokenCredentialPolicy.\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @param {TokenCredential} tokenCredential\n     * @memberof TokenCredentialPolicy\n     */\n    function TokenCredentialPolicy(nextPolicy, options, tokenCredential) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this.tokenCredential = tokenCredential;\n        _this.authorizationScheme = HeaderConstants.AUTHORIZATION_SCHEME;\n        return _this;\n    }\n    /**\n     * Sign request with token.\n     *\n     * @protected\n     * @param {WebResource} request\n     * @returns {WebResource}\n     * @memberof TokenCredentialPolicy\n     */\n    TokenCredentialPolicy.prototype.signRequest = function (request) {\n        if (!request.headers) {\n            request.headers = new HttpHeaders();\n        }\n        request.headers.set(HeaderConstants.AUTHORIZATION, this.authorizationScheme + \" \" + this.tokenCredential.token);\n        return request;\n    };\n    return TokenCredentialPolicy;\n}(CredentialPolicy));\nexport { TokenCredentialPolicy };\n//# sourceMappingURL=TokenCredentialPolicy.js.map","import * as tslib_1 from \"tslib\";\nimport { Credential } from \"../credentials/Credential\";\nimport { TokenCredentialPolicy } from \"../policies/TokenCredentialPolicy\";\n/**\n * TokenCredential is a Credential used to generate a TokenCredentialPolicy.\n * Renew token by setting a new token string value to token property.\n *\n * @example\n *  const tokenCredential = new TokenCredential(\"token\");\n *  const pipeline = StorageURL.newPipeline(tokenCredential);\n *\n *  // List containers\n *  const serviceURL = new ServiceURL(\"https://mystorageaccount.blob.core.windows.net\", pipeline);\n *\n *  // Set up a timer to refresh the token\n *  const timerID = setInterval(() => {\n *    // Update token by accessing to public tokenCredential.token\n *    tokenCredential.token = \"updatedToken\";\n *    // WARNING: Timer must be manually stopped! It will forbid GC of tokenCredential\n *    if (shouldStop()) {\n *      clearInterval(timerID);\n *    }\n *  }, 60 * 60 * 1000); // Set an interval time before your token expired\n * @export\n * @class TokenCredential\n * @extends {Credential}\n *\n */\nvar TokenCredential = /** @class */ (function (_super) {\n    tslib_1.__extends(TokenCredential, _super);\n    /**\n     * Creates an instance of TokenCredential.\n     * @param {string} token\n     * @memberof TokenCredential\n     */\n    function TokenCredential(token) {\n        var _this = _super.call(this) || this;\n        _this.token = token;\n        return _this;\n    }\n    /**\n     * Creates a TokenCredentialPolicy object.\n     *\n     * @param {RequestPolicy} nextPolicy\n     * @param {RequestPolicyOptions} options\n     * @returns {TokenCredentialPolicy}\n     * @memberof TokenCredential\n     */\n    TokenCredential.prototype.create = function (nextPolicy, options) {\n        return new TokenCredentialPolicy(nextPolicy, options, this);\n    };\n    return TokenCredential;\n}(Credential));\nexport { TokenCredential };\n//# sourceMappingURL=TokenCredential.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import * as tslib_1 from \"tslib\";\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n/**\n * States for Batch.\n *\n * @enum {number}\n */\nvar BatchStates;\n(function (BatchStates) {\n    BatchStates[BatchStates[\"Good\"] = 0] = \"Good\";\n    BatchStates[BatchStates[\"Error\"] = 1] = \"Error\";\n})(BatchStates || (BatchStates = {}));\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n *\n * @export\n * @class Batch\n */\nvar Batch = /** @class */ (function () {\n    /**\n     * Creates an instance of Batch.\n     * @param {number} [concurrency=5]\n     * @memberof Batch\n     */\n    function Batch(concurrency) {\n        if (concurrency === void 0) { concurrency = 5; }\n        /**\n         * Number of active operations under execution.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.actives = 0;\n        /**\n         * Number of completed operations under execution.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.completed = 0;\n        /**\n         * Offset of next operation to be executed.\n         *\n         * @private\n         * @type {number}\n         * @memberof Batch\n         */\n        this.offset = 0;\n        /**\n         * Operation array to be executed.\n         *\n         * @private\n         * @type {Operation[]}\n         * @memberof Batch\n         */\n        this.operations = [];\n        /**\n         * States of Batch. When an error happens, state will turn into error.\n         * Batch will stop execute left operations.\n         *\n         * @private\n         * @type {BatchStates}\n         * @memberof Batch\n         */\n        this.state = BatchStates.Good;\n        if (concurrency < 1) {\n            throw new RangeError(\"concurrency must be larger than 0\");\n        }\n        this.concurrency = concurrency;\n        this.emitter = new EventEmitter();\n    }\n    /**\n     * Add a operation into queue.\n     *\n     * @param {Operation} operation\n     * @memberof Batch\n     */\n    Batch.prototype.addOperation = function (operation) {\n        var _this = this;\n        this.operations.push(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n            var error_1;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        this.actives++;\n                        return [4 /*yield*/, operation()];\n                    case 1:\n                        _a.sent();\n                        this.actives--;\n                        this.completed++;\n                        this.parallelExecute();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _a.sent();\n                        this.emitter.emit(\"error\", error_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Start execute operations in the queue.\n     *\n     * @returns {Promise<void>}\n     * @memberof Batch\n     */\n    Batch.prototype.do = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return tslib_1.__generator(this, function (_a) {\n                this.parallelExecute();\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.emitter.on(\"finish\", resolve);\n                        _this.emitter.on(\"error\", function (error) {\n                            _this.state = BatchStates.Error;\n                            reject(error);\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Get next operation to be executed. Return null when reaching ends.\n     *\n     * @private\n     * @returns {(Operation | null)}\n     * @memberof Batch\n     */\n    Batch.prototype.nextOperation = function () {\n        if (this.offset < this.operations.length) {\n            return this.operations[this.offset++];\n        }\n        return null;\n    };\n    /**\n     * Start execute operations. One one the most important difference between\n     * this method with do() is that do() wraps as an sync method.\n     *\n     * @private\n     * @returns {void}\n     * @memberof Batch\n     */\n    Batch.prototype.parallelExecute = function () {\n        if (this.state === BatchStates.Error) {\n            return;\n        }\n        if (this.completed >= this.operations.length) {\n            this.emitter.emit(\"finish\");\n            return;\n        }\n        while (this.actives < this.concurrency) {\n            var operation = this.nextOperation();\n            if (operation) {\n                operation();\n            }\n            else {\n                return;\n            }\n        }\n    };\n    return Batch;\n}());\nexport { Batch };\n//# sourceMappingURL=Batch.js.map","import * as tslib_1 from \"tslib\";\nimport { BlobURL } from \"./BlobURL\";\nimport { PageBlob } from \"./generated/lib/operations\";\nimport { rangeToString } from \"./IRange\";\nimport { URLConstants } from \"./utils/constants\";\nimport { appendToURLPath, setURLParameter } from \"./utils/utils.common\";\n/**\n * PageBlobURL defines a set of operations applicable to page blobs.\n *\n * @export\n * @class PageBlobURL\n * @extends {StorageURL}\n */\nvar PageBlobURL = /** @class */ (function (_super) {\n    tslib_1.__extends(PageBlobURL, _super);\n    /**\n     * Creates an instance of PageBlobURL.\n     * This method accepts an encoded URL or non-encoded URL pointing to a page blob.\n     * Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     * If a blob name includes ? or %, blob name must be encoded in the URL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage page blob, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob\". You can\n     *                     append a SAS if using AnonymousCredential, such as\n     *                     \"https://myaccount.blob.core.windows.net/mycontainer/pageblob?sasString\".\n     *                     This method accepts an encoded URL or non-encoded URL pointing to a blob.\n     *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n     *                     However, if a blob name includes ? or %, blob name must be encoded in the URL.\n     *                     Such as a blob named \"my?blob%\", the URL should be \"https://myaccount.blob.core.windows.net/mycontainer/my%3Fblob%25\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof PageBlobURL\n     */\n    function PageBlobURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.pageBlobContext = new PageBlob(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a PageBlobURL object from ContainerURL instance.\n     *\n     * @static\n     * @param {ContainerURL} containerURL A ContainerURL object\n     * @param {string} blobName A page blob name\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.fromContainerURL = function (containerURL, blobName) {\n        return new PageBlobURL(appendToURLPath(containerURL.url, encodeURIComponent(blobName)), containerURL.pipeline);\n    };\n    /**\n     * Creates a PageBlobURL object from BlobURL instance.\n     *\n     * @static\n     * @param {BlobURL} blobURL\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.fromBlobURL = function (blobURL) {\n        return new PageBlobURL(blobURL.url, blobURL.pipeline);\n    };\n    /**\n     * Creates a new PageBlobURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.withPipeline = function (pipeline) {\n        return new PageBlobURL(this.url, pipeline);\n    };\n    /**\n     * Creates a new PageBlobURL object identical to the source but with the\n     * specified snapshot timestamp.\n     * Provide \"\" will remove the snapshot and return a URL to the base blob.\n     *\n     * @param {string} snapshot\n     * @returns {PageBlobURL}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.withSnapshot = function (snapshot) {\n        return new PageBlobURL(setURLParameter(this.url, URLConstants.Parameters.SNAPSHOT, snapshot.length === 0 ? undefined : snapshot), this.pipeline);\n    };\n    /**\n     * Creates a page blob of the specified length. Call uploadPages to upload data\n     * data to a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-blob\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} size\n     * @param {IPageBlobCreateOptions} [options]\n     * @returns {Promise<Models.PageBlobCreateResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.create = function (aborter, size, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.create(0, size, {\n                        abortSignal: aborter,\n                        blobHTTPHeaders: options.blobHTTPHeaders,\n                        blobSequenceNumber: options.blobSequenceNumber,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        metadata: options.metadata,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Writes 1 or more pages to the page blob. The start and end offsets must be a multiple of 512.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {HttpRequestBody} body\n     * @param {number} offset Offset of destination page blob\n     * @param {number} count Content length of body, also how many bytes to be uploaded\n     * @param {IPageBlobUploadPagesOptions} [options]\n     * @returns {Promise<Models.PageBlobsUploadPagesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.uploadPages = function (aborter, body, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.uploadPages(body, count, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        onUploadProgress: options.progress,\n                        range: rangeToString({ offset: offset, count: count }),\n                        sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions,\n                        transactionalContentMD5: options.transactionalContentMD5\n                    })];\n            });\n        });\n    };\n    /**\n     * Frees the specified pages from the page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/put-page\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {IPageBlobClearPagesOptions} [options]\n     * @returns {Promise<Models.PageBlobClearPagesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.clearPages = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.clearPages(0, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        range: rangeToString({ offset: offset, count: count }),\n                        sequenceNumberAccessConditions: options.accessConditions.sequenceNumberAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns the list of valid page ranges for a page blob or snapshot of a page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {IPageBlobGetPageRangesOptions} [options]\n     * @returns {Promise<Models.PageBlobGetPageRangesResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.getPageRanges = function (aborter, offset, count, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.getPageRanges({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        range: rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Gets the collection of page ranges that differ between a specified snapshot and this page blob.\n     * @see https://docs.microsoft.com/rest/api/storageservices/get-page-ranges\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} offset\n     * @param {number} count\n     * @param {string} prevSnapshot\n     * @param {IPageBlobGetPageRangesDiffOptions} [options]\n     * @returns {Promise<Models.PageBlobGetPageRangesDiffResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.getPageRangesDiff = function (aborter, offset, count, prevSnapshot, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.getPageRangesDiff({\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions,\n                        prevsnapshot: prevSnapshot,\n                        range: rangeToString({ offset: offset, count: count })\n                    })];\n            });\n        });\n    };\n    /**\n     * Resizes the page blob to the specified size (which must be a multiple of 512).\n     * @see https://docs.microsoft.com/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {number} size\n     * @param {IPageBlobResizeOptions} [options]\n     * @returns {Promise<Models.PageBlobResizeResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.resize = function (aborter, size, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.resize(size, {\n                        abortSignal: aborter,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets a page blob's sequence number.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-properties\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.SequenceNumberActionType} sequenceNumberAction\n     * @param {number} [sequenceNumber] Required if sequenceNumberAction is max or update\n     * @param {IPageBlobUpdateSequenceNumberOptions} [options]\n     * @returns {Promise<Models.PageBlobUpdateSequenceNumberResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.updateSequenceNumber = function (aborter, sequenceNumberAction, sequenceNumber, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                options.accessConditions = options.accessConditions || {};\n                return [2 /*return*/, this.pageBlobContext.updateSequenceNumber(sequenceNumberAction, {\n                        abortSignal: aborter,\n                        blobSequenceNumber: sequenceNumber,\n                        leaseAccessConditions: options.accessConditions.leaseAccessConditions,\n                        modifiedAccessConditions: options.accessConditions.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    /**\n     * Begins an operation to start an incremental copy from one page blob's snapshot to this page blob.\n     * The snapshot is copied such that only the differential changes between the previously\n     * copied snapshot are transferred to the destination.\n     * The copied snapshots are complete copies of the original snapshot and can be read or copied from as usual.\n     * @see https://docs.microsoft.com/rest/api/storageservices/incremental-copy-blob\n     * @see https://docs.microsoft.com/en-us/azure/virtual-machines/windows/incremental-snapshots\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} copySource Specifies the name of the source page blob snapshot. For example,\n     *                            https://myaccount.blob.core.windows.net/mycontainer/myblob?snapshot=<DateTime>\n     * @param {IPageBlobStartCopyIncrementalOptions} [options]\n     * @returns {Promise<Models.PageBlobCopyIncrementalResponse>}\n     * @memberof PageBlobURL\n     */\n    PageBlobURL.prototype.startCopyIncremental = function (aborter, copySource, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.pageBlobContext.copyIncremental(copySource, {\n                        abortSignal: aborter,\n                        modifiedAccessConditions: options.modifiedAccessConditions\n                    })];\n            });\n        });\n    };\n    return PageBlobURL;\n}(BlobURL));\nexport { PageBlobURL };\n//# sourceMappingURL=PageBlobURL.js.map","import * as tslib_1 from \"tslib\";\nimport { Service } from \"./generated/lib/operations\";\nimport { StorageURL } from \"./StorageURL\";\n/**\n * A ServiceURL represents a URL to the Azure Storage Blob service allowing you\n * to manipulate blob containers.\n *\n * @export\n * @class ServiceURL\n * @extends {StorageURL}\n */\nvar ServiceURL = /** @class */ (function (_super) {\n    tslib_1.__extends(ServiceURL, _super);\n    /**\n     * Creates an instance of ServiceURL.\n     *\n     * @param {string} url A URL string pointing to Azure Storage blob service, such as\n     *                     \"https://myaccount.blob.core.windows.net\". You can append a SAS\n     *                     if using AnonymousCredential, such as \"https://myaccount.blob.core.windows.net?sasString\".\n     * @param {Pipeline} pipeline Call StorageURL.newPipeline() to create a default\n     *                            pipeline, or provide a customized pipeline.\n     * @memberof ServiceURL\n     */\n    function ServiceURL(url, pipeline) {\n        var _this = _super.call(this, url, pipeline) || this;\n        _this.serviceContext = new Service(_this.storageClientContext);\n        return _this;\n    }\n    /**\n     * Creates a new ServiceURL object identical to the source but with the\n     * specified request policy pipeline.\n     *\n     * @param {Pipeline} pipeline\n     * @returns {ServiceURL}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.withPipeline = function (pipeline) {\n        return new ServiceURL(this.url, pipeline);\n    };\n    /**\n     * Gets the properties of a storage account’s Blob service, including properties\n     * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-properties}\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetPropertiesResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getProperties = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getProperties({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Sets properties for a storage account’s Blob service endpoint, including properties\n     * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-blob-service-properties}\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {Models.StorageServiceProperties} properties\n     * @returns {Promise<Models.ServiceSetPropertiesResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.setProperties = function (aborter, properties) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.setProperties(properties, {\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Retrieves statistics related to replication for the Blob service. It is only\n     * available on the secondary location endpoint when read-access geo-redundant\n     * replication is enabled for the storage account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-blob-service-stats}\n     *\n     *  @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetStatisticsResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getStatistics = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getStatistics({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * The Get Account Information operation returns the sku name and account kind\n     * for the specified account.\n     * The Get Account Information operation is available on service versions beginning\n     * with version 2018-03-28.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-account-information\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @returns {Promise<Models.ServiceGetAccountInfoResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.getAccountInfo = function (aborter) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.getAccountInfo({\n                        abortSignal: aborter\n                    })];\n            });\n        });\n    };\n    /**\n     * Returns a list of the containers under the specified account.\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-containers2\n     *\n     * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n     *                          goto documents of Aborter for more examples about request cancellation\n     * @param {string} [marker] A string value that identifies the portion of\n     *                          the list of containers to be returned with the next listing operation. The\n     *                          operation returns the NextMarker value within the response body if the\n     *                          listing operation did not return all containers remaining to be listed\n     *                          with the current page. The NextMarker value can be used as the value for\n     *                          the marker parameter in a subsequent call to request the next page of list\n     *                          items. The marker value is opaque to the client.\n     * @param {IServiceListContainersSegmentOptions} [options]\n     * @returns {Promise<Models.ServiceListContainersSegmentResponse>}\n     * @memberof ServiceURL\n     */\n    ServiceURL.prototype.listContainersSegment = function (aborter, marker, options) {\n        if (options === void 0) { options = {}; }\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.serviceContext.listContainersSegment(tslib_1.__assign({ abortSignal: aborter, marker: marker }, options))];\n            });\n        });\n    };\n    return ServiceURL;\n}(StorageURL));\nexport { ServiceURL };\n//# sourceMappingURL=ServiceURL.js.map","import * as tslib_1 from \"tslib\";\nimport { generateUuid } from \"@azure/ms-rest-js\";\nimport { Batch } from \"./utils/Batch\";\nimport { BLOCK_BLOB_MAX_BLOCKS, BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES, BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES, DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES } from \"./utils/constants\";\nimport { generateBlockID } from \"./utils/utils.common\";\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob/File/ArrayBuffer/ArrayBufferView object to block blob.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @export\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {Blob | ArrayBuffer | ArrayBufferView} browserData Blob, File, ArrayBuffer or ArrayBufferView\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nexport function uploadBrowserDataToBlockBlob(aborter, browserData, blockBlobURL, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var browserBlob;\n        return tslib_1.__generator(this, function (_a) {\n            browserBlob = new Blob([browserData]);\n            return [2 /*return*/, UploadSeekableBlobToBlockBlob(aborter, function (offset, size) {\n                    return browserBlob.slice(offset, offset + size);\n                }, browserBlob.size, blockBlobURL, options)];\n        });\n    });\n}\n/**\n * ONLY AVAILABLE IN BROWSERS.\n *\n * Uploads a browser Blob object to block blob. Requires a blobFactory as the data source,\n * which need to return a Blob object with the offset and size provided.\n *\n * When buffer length <= 256MB, this method will use 1 upload call to finish the upload.\n * Otherwise, this method will call stageBlock to upload blocks, and finally call commitBlockList\n * to commit the block list.\n *\n * @param {Aborter} aborter Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n *                          goto documents of Aborter for more examples about request cancellation\n * @param {(offset: number, size: number) => Blob} blobFactory\n * @param {number} size\n * @param {BlockBlobURL} blockBlobURL\n * @param {IUploadToBlockBlobOptions} [options]\n * @returns {Promise<BlobUploadCommonResponse>}\n */\nfunction UploadSeekableBlobToBlockBlob(aborter, blobFactory, size, blockBlobURL, options) {\n    if (options === void 0) { options = {}; }\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var numBlocks, blockList, blockIDPrefix, transferProgress, batch, _loop_1, i;\n        var _this = this;\n        return tslib_1.__generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!options.blockSize) {\n                        options.blockSize = 0;\n                    }\n                    if (options.blockSize < 0 ||\n                        options.blockSize > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES) {\n                        throw new RangeError(\"blockSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES);\n                    }\n                    if (options.maxSingleShotSize !== 0 && !options.maxSingleShotSize) {\n                        options.maxSingleShotSize = BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES;\n                    }\n                    if (options.maxSingleShotSize < 0 ||\n                        options.maxSingleShotSize > BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES) {\n                        throw new RangeError(\"maxSingleShotSize option must be >= 0 and <= \" + BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES);\n                    }\n                    if (options.blockSize === 0) {\n                        if (size > BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES * BLOCK_BLOB_MAX_BLOCKS) {\n                            throw new RangeError(size + \" is too larger to upload to a block blob.\");\n                        }\n                        if (size > options.maxSingleShotSize) {\n                            options.blockSize = Math.ceil(size / BLOCK_BLOB_MAX_BLOCKS);\n                            if (options.blockSize < DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES) {\n                                options.blockSize = DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES;\n                            }\n                        }\n                    }\n                    if (!options.blobHTTPHeaders) {\n                        options.blobHTTPHeaders = {};\n                    }\n                    if (!options.blobAccessConditions) {\n                        options.blobAccessConditions = {};\n                    }\n                    if (size <= options.maxSingleShotSize) {\n                        return [2 /*return*/, blockBlobURL.upload(aborter, blobFactory(0, size), size, options)];\n                    }\n                    numBlocks = Math.floor((size - 1) / options.blockSize) + 1;\n                    if (numBlocks > BLOCK_BLOB_MAX_BLOCKS) {\n                        throw new RangeError(\"The buffer's size is too big or the BlockSize is too small;\" +\n                            (\"the number of blocks must be <= \" + BLOCK_BLOB_MAX_BLOCKS));\n                    }\n                    blockList = [];\n                    blockIDPrefix = generateUuid();\n                    transferProgress = 0;\n                    batch = new Batch(options.parallelism);\n                    _loop_1 = function (i) {\n                        batch.addOperation(function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                            var blockID, start, end, contentLength;\n                            return tslib_1.__generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        blockID = generateBlockID(blockIDPrefix, i);\n                                        start = options.blockSize * i;\n                                        end = i === numBlocks - 1 ? size : start + options.blockSize;\n                                        contentLength = end - start;\n                                        blockList.push(blockID);\n                                        return [4 /*yield*/, blockBlobURL.stageBlock(aborter, blockID, blobFactory(start, contentLength), contentLength, {\n                                                leaseAccessConditions: options.blobAccessConditions\n                                                    .leaseAccessConditions\n                                            })];\n                                    case 1:\n                                        _a.sent();\n                                        // Update progress after block is successfully uploaded to server, in case of block trying\n                                        // TODO: Hook with convenience layer progress event in finer level\n                                        transferProgress += contentLength;\n                                        if (options.progress) {\n                                            options.progress({\n                                                loadedBytes: transferProgress\n                                            });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                    };\n                    for (i = 0; i < numBlocks; i++) {\n                        _loop_1(i);\n                    }\n                    return [4 /*yield*/, batch.do()];\n                case 1:\n                    _a.sent();\n                    return [2 /*return*/, blockBlobURL.commitBlockList(aborter, blockList, options)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=highlevel.browser.js.map"],"names":["getHeaderKey","headerName","toLowerCase","HttpHeaders","rawHeaders","this","_headersMap","set","prototype","headerValue","name","value","toString","get","header","undefined","contains","remove","result","headerKey","headersArray","headers","push","headerNames","i","length","headerValues","toJson","JSON","stringify","clone","encodeByteArray","str","String","fromCharCode","btoa","decodeString","byteString","atob","arr","Uint8Array","charCodeAt","getRandomValues","crypto","bind","window","msCrypto","rnds8","module","rnds","Array","r","Math","random","byteToHex","substr","buf","offset","bth","join","options","rng","ii","bytesToUuid","Constants","msRestVersion","HTTP","HTTPS","HTTP_PROXY","HTTPS_PROXY","HttpConstants","HttpVerbs","PUT","GET","DELETE","POST","MERGE","HEAD","PATCH","StatusCodes","TooManyRequests","HeaderConstants","AUTHORIZATION","AUTHORIZATION_SCHEME","RETRY_AFTER","USER_AGENT","isNode","navigator","process","stripResponse","response","strippedResponse","body","bodyAsText","status","stripRequest","request","strippedRequest","generateUuid","uuidv4","delay","t","Promise","resolve","setTimeout","validateISODuration","replaceAll","searchValue","replaceValue","split","Serializer","modelMappers","isXML","validateConstraints","mapper","objectName","failValidation","constraintName","constraintValue","Error","constraints","_a","ExclusiveMaximum","ExclusiveMinimum","InclusiveMaximum","InclusiveMinimum","MaxItems","MaxLength","MinItems","MinLength","MultipleOf","Pattern","UniqueItems","match","some","item","ar","indexOf","serialize","object","payload","mapperType","type","serializedName","defaultValue","isConstant","required","nullable","typeName","valueOf","uuid","RegExp","test","objectType","ArrayBuffer","isView","Blob","serializeBasicTypes","allowedValues","serializeEnumType","Date","isNaN","parse","toISOString","substring","toUTCString","d","floor","getTime","dateToUnixTime","serializeDateTypes","base64.encodeByteArray","serializeByteArrayType","buffer","ch","len","trimEnd","replace","bufferToBase64Url","serializeBase64UrlType","serializer","isArray","elementType","element","tempArray","serializeSequenceType","valueType","tempDictionary","_i","Object","keys","key","serializeDictionaryType","getPolymorphicDiscriminatorRecursively","getPolymorphicMapper","modelProps","resolveModelProperties","_b","propertyMapper","readOnly","propName","parentObject","xmlIsWrapped","xmlName","xmlElementName","paths","splitSerializeName","pop","_c","paths_1","pathName","childObject","propertyObjectName","toSerialize","polymorphicDiscriminator","clientName","serializedValue","xmlIsAttribute","$","additionalPropertiesMapper","additionalProperties","propNames","_loop_1","clientPropName","isAdditionalProperty","every","pn","serializeCompositeType","deserialize","responseBody","n","instance","handledPropertyNames","headerCollectionPrefix","dictionary","startsWith","propertyName","unwrappedProperty","isEmptyWrappedList","propertyInstance","res","_d","paths_2","responsePropName","_e","_f","includes","deserializeCompositeType","parseFloat","base64.decodeString","base64UrlToByteArray","deserializeSequenceType","deserializeDictionaryType","prop","classes","partialclass","subwords_1","charAt","modelProperties","className","modelMapper","polymorphicPropertyName","discriminatorName","discriminatorValue","uberParent","indexDiscriminator","polymorphicMapper","discriminators","getPolymorphicDiscriminatorSafely","MapperType","o","o_1","strEnum","WebResource","url","method","query","streamResponseBody","withCredentials","abortSignal","timeout","onUploadProgress","onDownloadProgress","formData","validateRequestProperties","prepare","pathTemplate","validMethods","toUpperCase","pathTemplate_1","pathParameters_1","pathParameters","baseUrl","url_1","endsWith","slice","segments","forEach","pathParamName","pathParam","encodeURIComponent","skipUrlEncoding","queryParameters","queryParams","queryParamName","queryParam","disableClientRequestId","bodyIsStream","serializationMapper","mappers","disableJsonStringifyOnBody","operationSpec","shouldDeserialize","operationResponseGetter","extendStatics","b","setPrototypeOf","__proto__","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","s","arguments","call","apply","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","done","then","__generator","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","HttpPipelineLogLevel","RestError","_super","message","code","statusCode","_this","tslib_1.__extends","REQUEST_SEND_ERROR","REQUEST_ABORTED_ERROR","PARSE_ERROR","XhrHttpClient","sendRequest","xhr","XMLHttpRequest","listener_1","abort","addEventListener","readyState","DONE","removeEventListener","addProgressListener","upload","requestForm_1","FormData","appendFormValue","append","formKey","formValue","j","contentType","open","setRequestHeader","responseType","send","HEADERS_RECEIVED","blobBody","rejectOnTerminalEvent","parseHeaders","responseText","listener","rawEvent","loadedBytes","loaded","responseHeaders","headerLines_1","getAllResponseHeaders","trim","line","index","getPathStringFromParameter","parameter","getPathStringFromParameterPath","parameterPath","isStreamOperation","responses","operationResponse","bodyMapper","Stream","parser","DOMParser","parseXML","dom","parseFromString","errorNS","parserErrors","getElementsByTagNameNS","innerHTML","throwIfError","obj","domToObject","node","childNodeCount","childNodes","firstChildNode","onlyChildTextValue","nodeType","Node","TEXT_NODE","nodeValue","elementWithAttributes","attributes","hasAttributes","attr","nodeName","child","err","getElementsByTagName","namespaceURI","ignored","doc","document","implementation","createDocument","XMLSerializer","stringifyXML","opts","buildNode","elementName","elem","createElement","textContent","obj_1","arrayElem","buildAttributes","setNamedItem","_g","_h","appendChild","rootName","serializeToString","attrs","createAttribute","BaseRequestPolicy","_nextPolicy","_options","shouldLog","logLevel","log","RequestPolicyOptions","_logger","OFF","minimumLogLevel","deserializationPolicy","deserializationContentTypes","nextPolicy","DeserializationPolicy","defaultJsonContentTypes","defaultXmlContentTypes","jsonContentTypes","json","xmlContentTypes","xml","tslib_1.__awaiter","tslib_1.__generator","errorHandler","msg","errCode","text_1","contentComponents","map","component","parsedBody","catch","parsedResponse","expectedStatusCodes","hasNoExpectedStatusCodes","responseSpec","getOperationResponse","isExpectedStatusCode","valueToDeserialize","Sequence","error","restError","utils.stripRequest","utils.stripResponse","httpMethod","headersMapper","parsedHeaders","defaultResponseSpec","default","initialErrorMessage","parsedErrorResponse","defaultResponseBodyMapper","internalError","defaultError","ExponentialRetryPolicy","retryCount","retryInterval","minRetryInterval","maxRetryInterval","isNumber","retry","policy","retryData","requestError","innerError","incrementDelta","pow","min","updateRetryData","isAborted","aborted","shouldRetry","utils.delay","GenerateClientRequestIdPolicy","_requestIdHeaderName","utils.generateUuid","getDefaultUserAgentValue","telemetryInfo","keySeparator","valueSeparator","runtimeInfo","platformSpecificData","oscpu","platform","concat","info","UserAgentPolicy","addUserAgentHeader","URLQuery","_rawQuery","any","parameterName","parameterValue","newValue","parameterStrings","parameterValue_1","parameterValueElement","text","currentState","currentCharacter","URLBuilder","setScheme","scheme","_scheme","getScheme","setHost","host","_host","getHost","setPort","port","_port","getPort","setPath","path","_path","appendPath","currentPath","getPath","setQuery","_query","setQueryParameter","queryParameterName","queryParameterValue","getQueryParameterValue","getQuery","startState","tokenizer","URLTokenizer","token","current","tokenPath","URLToken","_text","state","_textLength","_currentState","_currentIndex","_currentToken","hasCurrentCharacter","readWhile","character","characterCode","schemeOrHost","readUntilCharacter","getCurrentCharacter","peekCharacters","nextCharacter","nextHost","nextPort","readRemaining","nextQuery","charactersToPeek","endIndex","condition","terminatingCharacters","RedirectPolicy","maxRetries","handleRedirect","currentRetries","locationHeader","builder","RPRegistrationPolicy","_retryTimeout","rpName","matchRes","checkRPNotRegisteredError","urlPrefix","extractSubscriptionUrl","provider","originalRequest","postUrl","getUrl","reqOptions","getRequestEssentials","getRegistrationStatus","registrationState","registrationStatus","registerIfNeeded","reuseUrlToo","h","SigningPolicy","authenticationProvider","signRequest","nextRequest","QueryCollectionFormat","SystemErrorRetryPolicy","DEFAULT_CLIENT_RETRY_INTERVAL","DEFAULT_CLIENT_RETRY_COUNT","DEFAULT_CLIENT_MAX_RETRY_INTERVAL","DEFAULT_CLIENT_MIN_RETRY_INTERVAL","ThrottlingRetryPolicy","_handleResponse","_defaultResponseHandler","httpRequest","httpResponse","retryAfterHeader","delayInMs","parseRetryAfterHeader","retryAfterInSeconds","Number","parseDateRetryAfterHeader","now","diff","ServiceClient","credentials","_withCredentials","_httpClient","httpClient","DefaultHttpClient","_requestPolicyOptions","httpPipelineLogger","_requestPolicyFactories","requestPolicyFactories","factories","generateClientRequestIdHeader","requestIdHeaderName","clientRequestIdHeaderName","userAgentData","userAgent","maximumRetries","retryTimeout","rpRegistrationRetryTimeout","noRetryPolicy","createDefaultRequestPolicyFactories","httpPipeline","sendOperationRequest","operationArguments","callback","baseUri","requestUrl","urlParameters","urlParameter","urlParameterValue","getOperationArgumentValueFromParameter","skipEncoding","queryParameter","collectionFormat","Multi","requestContentType","headerParameters","headerParameter","customHeaders","customHeaderName","serviceClient","requestBody","requestBodyParameterPathString","isStream","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","_response","addOperationResponse","defineProperty","tslib_1.__assign","readableStreamBody","modelProperties_1","isPageableResponse","k","arrayResponse","flattenResponse","cb","getOperationArgumentValueFromParameterPath","parameterMapper","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","propertyValue","parameterPathString","propertyPath","propertyPathString","parent","parameterPathPart","LogPolicy","logger","console","logResponse","TopicCredentials","topicKey","inHeader","aeg-sas-key","ApiKeyCredentials","inQuery","webResource","Aborter","_aborted","children","abortEventListeners","timer","unref","enumerable","configurable","withTimeout","childCancelContext","withValue","getValue","parent_1","cancelTimer","onabort","cancelByParent","_type","splice","clearTimeout","StorageError","ListBlobsFlatSegmentResponse","serviceEndpoint","containerName","prefix","marker","maxResults","delimiter","segment","nextMarker","ListBlobsHierarchySegmentResponse","BlockList","committedBlocks","uncommittedBlocks","BlockLookupList","committed","uncommitted","latest","ListContainersSegmentResponse","containerItems","PageList","pageRange","clearRange","StorageServiceProperties","logging","hourMetrics","minuteMetrics","cors","defaultServiceVersion","deleteRetentionPolicy","staticWebsite","StorageServiceStats","geoReplication","ServiceSetPropertiesHeaders","requestId","version","errorCode","ServiceGetPropertiesHeaders","ServiceGetStatisticsHeaders","date","ServiceListContainersSegmentHeaders","ServiceGetAccountInfoHeaders","skuName","accountKind","ContainerCreateHeaders","eTag","lastModified","ContainerGetPropertiesHeaders","metadata","leaseDuration","leaseState","leaseStatus","blobPublicAccess","hasImmutabilityPolicy","hasLegalHold","ContainerDeleteHeaders","ContainerSetMetadataHeaders","ContainerGetAccessPolicyHeaders","ContainerSetAccessPolicyHeaders","ContainerAcquireLeaseHeaders","leaseId","ContainerReleaseLeaseHeaders","ContainerRenewLeaseHeaders","ContainerBreakLeaseHeaders","leaseTime","ContainerChangeLeaseHeaders","ContainerListBlobFlatSegmentHeaders","ContainerListBlobHierarchySegmentHeaders","ContainerGetAccountInfoHeaders","BlobDownloadHeaders","contentLength","contentRange","contentMD5","contentEncoding","cacheControl","contentDisposition","contentLanguage","blobSequenceNumber","blobType","copyCompletionTime","copyStatusDescription","copyId","copyProgress","copySource","copyStatus","acceptRanges","blobCommittedBlockCount","isServerEncrypted","blobContentMD5","BlobGetPropertiesHeaders","creationTime","isIncrementalCopy","destinationSnapshot","accessTier","accessTierInferred","archiveStatus","accessTierChangeTime","BlobDeleteHeaders","PageBlobCreateHeaders","AppendBlobCreateHeaders","BlockBlobUploadHeaders","BlobUndeleteHeaders","BlobSetHTTPHeadersHeaders","BlobSetMetadataHeaders","BlobAcquireLeaseHeaders","BlobReleaseLeaseHeaders","BlobRenewLeaseHeaders","BlobChangeLeaseHeaders","BlobBreakLeaseHeaders","BlobCreateSnapshotHeaders","snapshot","BlobStartCopyFromURLHeaders","BlobAbortCopyFromURLHeaders","BlobSetTierHeaders","BlobGetAccountInfoHeaders","BlockBlobStageBlockHeaders","BlockBlobStageBlockFromURLHeaders","BlockBlobCommitBlockListHeaders","BlockBlobGetBlockListHeaders","blobContentLength","PageBlobUploadPagesHeaders","PageBlobClearPagesHeaders","PageBlobGetPageRangesHeaders","PageBlobGetPageRangesDiffHeaders","PageBlobResizeHeaders","PageBlobUpdateSequenceNumberHeaders","PageBlobCopyIncrementalHeaders","AppendBlobAppendBlockHeaders","blobAppendOffset","deleteProperty","read","write","retentionPolicy","enabled","days","includeAPIs","allowedOrigins","allowedMethods","allowedHeaders","exposedHeaders","maxAgeInSeconds","indexDocument","errorDocument404Path","lastSyncTime","properties","etag","publicAccess","access","action0","action1","action2","action3","action4","blobCacheControl","blobContentDisposition","blobContentEncoding","blobContentLanguage","blobContentType","blockId","breakPeriod","comp0","comp10","comp11","comp14","comp15","comp2","comp3","comp4","comp5","duration","ifMatch","ifModifiedSince","ifNoneMatch","ifSequenceNumberEqualTo","ifSequenceNumberLessThan","ifSequenceNumberLessThanOrEqualTo","ifUnmodifiedSince","include1","msRest.QueryCollectionFormat","Csv","leaseId0","leaseId1","maxresults","proposedLeaseId0","proposedLeaseId1","range","restype0","restype1","restype2","transactionalContentMD5","Service","client","setProperties","storageServiceProperties","setPropertiesOperationSpec","getProperties","getPropertiesOperationSpec","getStatistics","getStatisticsOperationSpec","listContainersSegment","listContainersSegmentOperationSpec","getAccountInfo","getAccountInfoOperationSpec","msRest.Serializer","Mappers","Parameters.url","Parameters.timeout","Parameters.restype0","Parameters.comp0","Parameters.version","Parameters.requestId","Mappers.StorageServiceProperties","202","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","200","Mappers.ServiceGetPropertiesHeaders","Mappers.StorageServiceStats","Mappers.ServiceGetStatisticsHeaders","Parameters.prefix","Parameters.marker","Parameters.maxresults","Parameters.comp2","Mappers.ListContainersSegmentResponse","Mappers.ServiceListContainersSegmentHeaders","Parameters.restype1","Mappers.ServiceGetAccountInfoHeaders","id","accessPolicy","start","expiry","permission","blobItems","deleted","serverEncrypted","incrementalCopy","deletedTime","remainingRetentionDays","blobPrefixes","Container","createOperationSpec","deleteMethod","deleteMethodOperationSpec","setMetadata","setMetadataOperationSpec","getAccessPolicy","getAccessPolicyOperationSpec","setAccessPolicy","setAccessPolicyOperationSpec","acquireLease","acquireLeaseOperationSpec","releaseLease","releaseLeaseOperationSpec","renewLease","renewLeaseOperationSpec","breakLease","breakLeaseOperationSpec","changeLease","proposedLeaseId","changeLeaseOperationSpec","listBlobFlatSegment","listBlobFlatSegmentOperationSpec","listBlobHierarchySegment","listBlobHierarchySegmentOperationSpec","Parameters.restype2","Parameters.metadata","Parameters.access","201","Mappers.ContainerCreateHeaders","Parameters.leaseId0","Mappers.ContainerGetPropertiesHeaders","Parameters.ifModifiedSince","Parameters.ifUnmodifiedSince","Mappers.ContainerDeleteHeaders","Parameters.comp3","Mappers.ContainerSetMetadataHeaders","Parameters.comp4","Mappers.ContainerGetAccessPolicyHeaders","Mappers.ContainerSetAccessPolicyHeaders","Parameters.comp5","Parameters.duration","Parameters.proposedLeaseId0","Parameters.action0","Mappers.ContainerAcquireLeaseHeaders","Parameters.leaseId1","Parameters.action1","Mappers.ContainerReleaseLeaseHeaders","Parameters.action2","Mappers.ContainerRenewLeaseHeaders","Parameters.breakPeriod","Parameters.action3","Mappers.ContainerBreakLeaseHeaders","Parameters.proposedLeaseId1","Parameters.action4","Mappers.ContainerChangeLeaseHeaders","Parameters.include1","Mappers.ListBlobsFlatSegmentResponse","Mappers.ContainerListBlobFlatSegmentHeaders","Mappers.ListBlobsHierarchySegmentResponse","Mappers.ContainerListBlobHierarchySegmentHeaders","Mappers.ContainerGetAccountInfoHeaders","download","downloadOperationSpec","undelete","undeleteOperationSpec","setHTTPHeaders","setHTTPHeadersOperationSpec","createSnapshot","createSnapshotOperationSpec","startCopyFromURL","startCopyFromURLOperationSpec","abortCopyFromURL","abortCopyFromURLOperationSpec","setTier","tier","setTierOperationSpec","Parameters.snapshot","Parameters.range","Parameters.ifMatch","Parameters.ifNoneMatch","Mappers.BlobDownloadHeaders","206","Mappers.BlobGetPropertiesHeaders","Mappers.BlobDeleteHeaders","Mappers.BlobUndeleteHeaders","Parameters.blobCacheControl","Parameters.blobContentType","Parameters.blobContentMD5","Parameters.blobContentEncoding","Parameters.blobContentLanguage","Parameters.blobContentDisposition","Mappers.BlobSetHTTPHeadersHeaders","Mappers.BlobSetMetadataHeaders","Mappers.BlobAcquireLeaseHeaders","Mappers.BlobReleaseLeaseHeaders","Mappers.BlobRenewLeaseHeaders","Mappers.BlobChangeLeaseHeaders","Mappers.BlobBreakLeaseHeaders","Mappers.BlobCreateSnapshotHeaders","Parameters.copySource","Mappers.BlobStartCopyFromURLHeaders","204","Mappers.BlobAbortCopyFromURLHeaders","Mappers.BlobSetTierHeaders","Mappers.BlobGetAccountInfoHeaders","end","PageBlob","uploadPages","uploadPagesOperationSpec","clearPages","clearPagesOperationSpec","getPageRanges","getPageRangesOperationSpec","getPageRangesDiff","getPageRangesDiffOperationSpec","resize","resizeOperationSpec","updateSequenceNumber","sequenceNumberAction","updateSequenceNumberOperationSpec","copyIncremental","copyIncrementalOperationSpec","Parameters.contentLength","Parameters.blobContentLength","Parameters.blobSequenceNumber","Mappers.PageBlobCreateHeaders","Parameters.comp10","Parameters.transactionalContentMD5","Parameters.ifSequenceNumberLessThanOrEqualTo","Parameters.ifSequenceNumberLessThan","Parameters.ifSequenceNumberEqualTo","Mappers.PageBlobUploadPagesHeaders","Mappers.PageBlobClearPagesHeaders","Parameters.comp11","Mappers.PageList","Mappers.PageBlobGetPageRangesHeaders","Mappers.PageBlobGetPageRangesDiffHeaders","Mappers.PageBlobResizeHeaders","Mappers.PageBlobUpdateSequenceNumberHeaders","Mappers.PageBlobCopyIncrementalHeaders","AppendBlob","appendBlock","appendBlockOperationSpec","Mappers.AppendBlobCreateHeaders","Mappers.AppendBlobAppendBlockHeaders","size","BlockBlob","uploadOperationSpec","stageBlock","stageBlockOperationSpec","stageBlockFromURL","sourceUrl","stageBlockFromURLOperationSpec","commitBlockList","blocks","commitBlockListOperationSpec","getBlockList","listType","getBlockListOperationSpec","Mappers.BlockBlobUploadHeaders","Parameters.blockId","Parameters.comp14","Mappers.BlockBlobStageBlockHeaders","Mappers.BlockBlobStageBlockFromURLHeaders","Parameters.comp15","Mappers.BlockLookupList","Mappers.BlockBlobCommitBlockListHeaders","Mappers.BlockList","Mappers.BlockBlobGetBlockListHeaders","rangeToString","iRange","RangeError","count","BLOCK_BLOB_MAX_UPLOAD_BLOB_BYTES","BLOCK_BLOB_MAX_STAGE_BLOCK_BYTES","BLOCK_BLOB_MAX_BLOCKS","DEFAULT_BLOB_DOWNLOAD_BLOCK_BYTES","URLConstants","FORCE_BROWSER_NO_CACHE","SIGNATURE","SNAPSHOT","TIMEOUT","HTTPURLConnection","escapeURLPath","urlParsed","appendToURLPath","setURLParameter","truncatedISO8061Date","withMilliseconds","dateString","generateBlockID","blockIDPrefix","blockIndex","maxSourceStringLength","content","currentString","targetLength","padString","padStart","repeat","Buffer","from","RetryPolicyType","BrowserPolicy","BrowserPolicyFactory","StorageClientContext","defaultUserAgent","msRest.getDefaultUserAgentValue","packageName","msRest.ServiceClient","DEFAULT_REQUEST_LOG_OPTIONS","logWarningIfTryOverThreshold","LoggingPolicy","loggingOptions","tryCount","operationStartTime","requestStartTime","safeURL","requestEndTime","requestCompletionTime","operationDuration","currentLevel","logMessage","errorString","messageInfo","err_1","INFO","WARNING","ERROR","LoggingPolicyFactory","Pipeline","toServiceClientOptions","HTTPClient","DEFAULT_RETRY_OPTIONS","maxRetryDelayInMs","maxTries","retryDelayInMs","retryPolicyType","EXPONENTIAL","secondaryHost","tryTimeoutInMs","RetryPolicy","retryOptions","attemptSendRequest","secondaryHas404","attempt","newRequest","isPrimaryRetry","logf","retriableErrors_1","retriableError","_level","_message","delayTimeInMs","FIXED","RetryPolicyFactory","TelemetryPolicy","telemetry","TelemetryPolicyFactory","telemetryString","UniqueRequestIDPolicy","UniqueRequestIDPolicyFactory","StorageURL","pipeline","storageClientContext","newPipeline","credential","pipelineOptions","BlobURL","blobContext","fromContainerURL","containerURL","blobName","withPipeline","withSnapshot","aborter","blobAccessConditions","modifiedAccessConditions","leaseAccessConditions","progress","rangeGetContentMD5","maxRetryRequests","updatedOptions","delete","deleteSnapshots","blobHTTPHeaders","sourceModifiedAccessConditions","sourceIfMatch","sourceIfModifiedSince","sourceIfNoneMatch","sourceIfUnmodifiedSince","AppendBlobURL","appendBlobContext","fromBlobURL","blobURL","accessConditions","appendPositionAccessConditions","BlockBlobURL","blockBlobContext","sourceURL","sourceContentMD5","sourceRange","ContainerURL","containerContext","fromServiceURL","serviceURL","containerAccessConditions","acl","containerAcl","period","CredentialPolicy","Credential","AnonymousCredential","TokenCredentialPolicy","TokenCredential","R","ReflectApply","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","target","EventEmitter","_events","m","existing","unshift","w","emitter","wrapFn","args","removeListener","wrapped","events","evlistener","arg","doError","er","handler","on","once","off","list","emit","position","originalListener","removeAllListeners","listeners","BatchStates","Good","error_1","actives","operation","PageBlobURL","sequenceNumberAccessConditions","prevsnapshot","ServiceURL","browserBlob","blockSize","maxSingleShotSize","blockList","transferProgress","blockID"],"mappings":"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"}